2024-04-30 16:25:30,656:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 16:25:30,656:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 16:25:30,656:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 16:25:30,656:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 16:27:32,108:INFO:PyCaret RegressionExperiment
2024-04-30 16:27:32,108:INFO:Logging name: reg-default-name
2024-04-30 16:27:32,108:INFO:ML Usecase: MLUsecase.REGRESSION
2024-04-30 16:27:32,108:INFO:version 3.3.2
2024-04-30 16:27:32,108:INFO:Initializing setup()
2024-04-30 16:27:32,109:INFO:self.USI: a87d
2024-04-30 16:27:32,109:INFO:self._variable_keys: {'X_test', '_ml_usecase', 'gpu_param', 'gpu_n_jobs_param', 'html_param', 'X', 'y', 'data', '_available_plots', 'fold_groups_param', 'transform_target_param', 'log_plots_param', 'idx', 'y_test', 'logging_param', 'fold_generator', 'n_jobs_param', 'X_train', 'exp_id', 'USI', 'target_param', 'pipeline', 'exp_name_log', 'memory', 'y_train', 'seed', 'fold_shuffle_param'}
2024-04-30 16:27:32,109:INFO:Checking environment
2024-04-30 16:27:32,109:INFO:python_version: 3.11.5
2024-04-30 16:27:32,109:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-04-30 16:27:32,109:INFO:machine: AMD64
2024-04-30 16:27:32,109:INFO:platform: Windows-10-10.0.19045-SP0
2024-04-30 16:27:32,109:INFO:Memory: svmem(total=17087496192, available=9853353984, percent=42.3, used=7234142208, free=9853353984)
2024-04-30 16:27:32,109:INFO:Physical Core: 4
2024-04-30 16:27:32,109:INFO:Logical Core: 8
2024-04-30 16:27:32,109:INFO:Checking libraries
2024-04-30 16:27:32,109:INFO:System:
2024-04-30 16:27:32,109:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-04-30 16:27:32,110:INFO:executable: C:\Users\1104-27\anaconda3\python.exe
2024-04-30 16:27:32,110:INFO:   machine: Windows-10-10.0.19045-SP0
2024-04-30 16:27:32,110:INFO:PyCaret required dependencies:
2024-04-30 16:27:32,113:INFO:                 pip: 23.2.1
2024-04-30 16:27:32,113:INFO:          setuptools: 68.0.0
2024-04-30 16:27:32,113:INFO:             pycaret: 3.3.2
2024-04-30 16:27:32,113:INFO:             IPython: 8.15.0
2024-04-30 16:27:32,113:INFO:          ipywidgets: 8.0.4
2024-04-30 16:27:32,113:INFO:                tqdm: 4.65.0
2024-04-30 16:27:32,113:INFO:               numpy: 1.24.3
2024-04-30 16:27:32,113:INFO:              pandas: 2.0.3
2024-04-30 16:27:32,113:INFO:              jinja2: 3.1.2
2024-04-30 16:27:32,114:INFO:               scipy: 1.11.1
2024-04-30 16:27:32,114:INFO:              joblib: 1.2.0
2024-04-30 16:27:32,114:INFO:             sklearn: 1.4.2
2024-04-30 16:27:32,114:INFO:                pyod: 1.1.3
2024-04-30 16:27:32,114:INFO:            imblearn: 0.12.0
2024-04-30 16:27:32,114:INFO:   category_encoders: 2.6.3
2024-04-30 16:27:32,114:INFO:            lightgbm: 4.2.0
2024-04-30 16:27:32,114:INFO:               numba: 0.57.1
2024-04-30 16:27:32,114:INFO:            requests: 2.31.0
2024-04-30 16:27:32,114:INFO:          matplotlib: 3.7.2
2024-04-30 16:27:32,114:INFO:          scikitplot: 0.3.7
2024-04-30 16:27:32,114:INFO:         yellowbrick: 1.5
2024-04-30 16:27:32,114:INFO:              plotly: 5.21.0
2024-04-30 16:27:32,114:INFO:    plotly-resampler: Not installed
2024-04-30 16:27:32,114:INFO:             kaleido: 0.2.1
2024-04-30 16:27:32,114:INFO:           schemdraw: 0.15
2024-04-30 16:27:32,114:INFO:         statsmodels: 0.14.0
2024-04-30 16:27:32,114:INFO:              sktime: 0.26.0
2024-04-30 16:27:32,114:INFO:               tbats: 1.1.3
2024-04-30 16:27:32,115:INFO:            pmdarima: 2.0.4
2024-04-30 16:27:32,115:INFO:              psutil: 5.9.0
2024-04-30 16:27:32,115:INFO:          markupsafe: 2.1.1
2024-04-30 16:27:32,115:INFO:             pickle5: Not installed
2024-04-30 16:27:32,115:INFO:         cloudpickle: 2.2.1
2024-04-30 16:27:32,115:INFO:         deprecation: 2.1.0
2024-04-30 16:27:32,115:INFO:              xxhash: 2.0.2
2024-04-30 16:27:32,115:INFO:           wurlitzer: Not installed
2024-04-30 16:27:32,115:INFO:PyCaret optional dependencies:
2024-04-30 16:27:32,129:INFO:                shap: Not installed
2024-04-30 16:27:32,129:INFO:           interpret: Not installed
2024-04-30 16:27:32,129:INFO:                umap: Not installed
2024-04-30 16:27:32,129:INFO:     ydata_profiling: Not installed
2024-04-30 16:27:32,129:INFO:  explainerdashboard: Not installed
2024-04-30 16:27:32,129:INFO:             autoviz: Not installed
2024-04-30 16:27:32,129:INFO:           fairlearn: Not installed
2024-04-30 16:27:32,129:INFO:          deepchecks: Not installed
2024-04-30 16:27:32,129:INFO:             xgboost: 2.0.3
2024-04-30 16:27:32,129:INFO:            catboost: Not installed
2024-04-30 16:27:32,129:INFO:              kmodes: Not installed
2024-04-30 16:27:32,129:INFO:             mlxtend: 0.23.0
2024-04-30 16:27:32,129:INFO:       statsforecast: Not installed
2024-04-30 16:27:32,129:INFO:        tune_sklearn: Not installed
2024-04-30 16:27:32,129:INFO:                 ray: Not installed
2024-04-30 16:27:32,129:INFO:            hyperopt: Not installed
2024-04-30 16:27:32,129:INFO:              optuna: Not installed
2024-04-30 16:27:32,129:INFO:               skopt: Not installed
2024-04-30 16:27:32,129:INFO:              mlflow: Not installed
2024-04-30 16:27:32,129:INFO:              gradio: Not installed
2024-04-30 16:27:32,129:INFO:             fastapi: Not installed
2024-04-30 16:27:32,129:INFO:             uvicorn: Not installed
2024-04-30 16:27:32,129:INFO:              m2cgen: Not installed
2024-04-30 16:27:32,129:INFO:           evidently: Not installed
2024-04-30 16:27:32,129:INFO:               fugue: Not installed
2024-04-30 16:27:32,129:INFO:           streamlit: Not installed
2024-04-30 16:27:32,129:INFO:             prophet: Not installed
2024-04-30 16:27:32,129:INFO:None
2024-04-30 16:27:32,129:INFO:Set up data.
2024-04-30 16:27:32,155:INFO:Set up folding strategy.
2024-04-30 16:27:32,155:INFO:Set up train/test split.
2024-04-30 16:27:32,171:INFO:Set up index.
2024-04-30 16:27:32,171:INFO:Assigning column types.
2024-04-30 16:27:32,177:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-30 16:27:32,177:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-04-30 16:27:32,177:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-30 16:27:32,193:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-30 16:27:32,243:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-30 16:27:32,293:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-30 16:27:32,293:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:27:32,293:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:27:32,293:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-04-30 16:27:32,293:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-30 16:27:32,293:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-30 16:27:32,360:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-30 16:27:32,394:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-30 16:27:32,394:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:27:32,394:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:27:32,394:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-04-30 16:27:32,411:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-30 16:27:32,411:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-30 16:27:32,461:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-30 16:27:32,510:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-30 16:27:32,510:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:27:32,510:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:27:32,510:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-30 16:27:32,510:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-30 16:27:32,577:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-30 16:27:32,627:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-30 16:27:32,627:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:27:32,627:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:27:32,627:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-04-30 16:27:32,627:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-30 16:27:32,694:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-30 16:27:32,727:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-30 16:27:32,727:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:27:32,727:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:27:32,744:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-30 16:27:32,794:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-30 16:27:32,844:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-30 16:27:32,844:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:27:32,844:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:27:32,844:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-04-30 16:27:32,927:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-30 16:27:32,961:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-30 16:27:32,961:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:27:32,961:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:27:33,044:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-30 16:27:33,095:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-30 16:27:33,096:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:27:33,096:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:27:33,096:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-30 16:27:33,162:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-30 16:27:33,194:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:27:33,211:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:27:33,279:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-30 16:27:33,311:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:27:33,311:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:27:33,311:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-04-30 16:27:33,428:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:27:33,428:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:27:33,545:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:27:33,545:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:27:33,561:INFO:Preparing preprocessing pipeline...
2024-04-30 16:27:33,561:INFO:Set up simple imputation.
2024-04-30 16:27:33,628:INFO:Finished creating preprocessing pipeline.
2024-04-30 16:27:33,628:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\1104-27\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering',
                                             'steering_remote', 'leahter_seat',
                                             'driver_elec_seat',
                                             'pass_elec_seat', 'back_elec_seat',
                                             'driver_memory_seat',
                                             'massage_seat',
                                             'supervision_cluster',
                                             'paddle_shift', 'hi_pass',
                                             'pass_memory_seat',
                                             'back_heated_seat', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2024-04-30 16:27:33,628:INFO:Creating final display dataframe.
2024-04-30 16:27:33,879:INFO:Setup _display_container:                     Description             Value
0                    Session id              7623
1                        Target             price
2                   Target type        Regression
3           Original data shape        (1581, 99)
4        Transformed data shape        (1581, 99)
5   Transformed train set shape        (1106, 99)
6    Transformed test set shape         (475, 99)
7              Numeric features                82
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              a87d
2024-04-30 16:27:34,014:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:27:34,017:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:27:34,129:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:27:34,129:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:27:34,129:INFO:setup() successfully completed in 2.02s...............
2024-04-30 16:27:49,991:INFO:PyCaret RegressionExperiment
2024-04-30 16:27:49,991:INFO:Logging name: reg-default-name
2024-04-30 16:27:49,991:INFO:ML Usecase: MLUsecase.REGRESSION
2024-04-30 16:27:49,991:INFO:version 3.3.2
2024-04-30 16:27:49,991:INFO:Initializing setup()
2024-04-30 16:27:49,991:INFO:self.USI: 39a7
2024-04-30 16:27:49,991:INFO:self._variable_keys: {'X_test', '_ml_usecase', 'gpu_param', 'gpu_n_jobs_param', 'html_param', 'X', 'y', 'data', '_available_plots', 'fold_groups_param', 'transform_target_param', 'log_plots_param', 'idx', 'y_test', 'logging_param', 'fold_generator', 'n_jobs_param', 'X_train', 'exp_id', 'USI', 'target_param', 'pipeline', 'exp_name_log', 'memory', 'y_train', 'seed', 'fold_shuffle_param'}
2024-04-30 16:27:49,991:INFO:Checking environment
2024-04-30 16:27:49,991:INFO:python_version: 3.11.5
2024-04-30 16:27:49,991:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-04-30 16:27:49,991:INFO:machine: AMD64
2024-04-30 16:27:49,991:INFO:platform: Windows-10-10.0.19045-SP0
2024-04-30 16:27:49,991:INFO:Memory: svmem(total=17087496192, available=9850621952, percent=42.4, used=7236874240, free=9850621952)
2024-04-30 16:27:49,991:INFO:Physical Core: 4
2024-04-30 16:27:49,991:INFO:Logical Core: 8
2024-04-30 16:27:49,991:INFO:Checking libraries
2024-04-30 16:27:49,992:INFO:System:
2024-04-30 16:27:49,992:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-04-30 16:27:49,992:INFO:executable: C:\Users\1104-27\anaconda3\python.exe
2024-04-30 16:27:49,992:INFO:   machine: Windows-10-10.0.19045-SP0
2024-04-30 16:27:49,992:INFO:PyCaret required dependencies:
2024-04-30 16:27:49,992:INFO:                 pip: 23.2.1
2024-04-30 16:27:49,992:INFO:          setuptools: 68.0.0
2024-04-30 16:27:49,992:INFO:             pycaret: 3.3.2
2024-04-30 16:27:49,992:INFO:             IPython: 8.15.0
2024-04-30 16:27:49,992:INFO:          ipywidgets: 8.0.4
2024-04-30 16:27:49,992:INFO:                tqdm: 4.65.0
2024-04-30 16:27:49,992:INFO:               numpy: 1.24.3
2024-04-30 16:27:49,992:INFO:              pandas: 2.0.3
2024-04-30 16:27:49,992:INFO:              jinja2: 3.1.2
2024-04-30 16:27:49,993:INFO:               scipy: 1.11.1
2024-04-30 16:27:49,993:INFO:              joblib: 1.2.0
2024-04-30 16:27:49,993:INFO:             sklearn: 1.4.2
2024-04-30 16:27:49,993:INFO:                pyod: 1.1.3
2024-04-30 16:27:49,993:INFO:            imblearn: 0.12.0
2024-04-30 16:27:49,993:INFO:   category_encoders: 2.6.3
2024-04-30 16:27:49,993:INFO:            lightgbm: 4.2.0
2024-04-30 16:27:49,993:INFO:               numba: 0.57.1
2024-04-30 16:27:49,993:INFO:            requests: 2.31.0
2024-04-30 16:27:49,993:INFO:          matplotlib: 3.7.2
2024-04-30 16:27:49,993:INFO:          scikitplot: 0.3.7
2024-04-30 16:27:49,993:INFO:         yellowbrick: 1.5
2024-04-30 16:27:49,993:INFO:              plotly: 5.21.0
2024-04-30 16:27:49,993:INFO:    plotly-resampler: Not installed
2024-04-30 16:27:49,993:INFO:             kaleido: 0.2.1
2024-04-30 16:27:49,993:INFO:           schemdraw: 0.15
2024-04-30 16:27:49,993:INFO:         statsmodels: 0.14.0
2024-04-30 16:27:49,994:INFO:              sktime: 0.26.0
2024-04-30 16:27:49,994:INFO:               tbats: 1.1.3
2024-04-30 16:27:49,994:INFO:            pmdarima: 2.0.4
2024-04-30 16:27:49,994:INFO:              psutil: 5.9.0
2024-04-30 16:27:49,994:INFO:          markupsafe: 2.1.1
2024-04-30 16:27:49,994:INFO:             pickle5: Not installed
2024-04-30 16:27:49,994:INFO:         cloudpickle: 2.2.1
2024-04-30 16:27:49,994:INFO:         deprecation: 2.1.0
2024-04-30 16:27:49,994:INFO:              xxhash: 2.0.2
2024-04-30 16:27:49,994:INFO:           wurlitzer: Not installed
2024-04-30 16:27:49,994:INFO:PyCaret optional dependencies:
2024-04-30 16:27:49,994:INFO:                shap: Not installed
2024-04-30 16:27:49,994:INFO:           interpret: Not installed
2024-04-30 16:27:49,994:INFO:                umap: Not installed
2024-04-30 16:27:49,994:INFO:     ydata_profiling: Not installed
2024-04-30 16:27:49,994:INFO:  explainerdashboard: Not installed
2024-04-30 16:27:49,994:INFO:             autoviz: Not installed
2024-04-30 16:27:49,994:INFO:           fairlearn: Not installed
2024-04-30 16:27:49,994:INFO:          deepchecks: Not installed
2024-04-30 16:27:49,994:INFO:             xgboost: 2.0.3
2024-04-30 16:27:49,994:INFO:            catboost: Not installed
2024-04-30 16:27:49,995:INFO:              kmodes: Not installed
2024-04-30 16:27:49,995:INFO:             mlxtend: 0.23.0
2024-04-30 16:27:49,995:INFO:       statsforecast: Not installed
2024-04-30 16:27:49,995:INFO:        tune_sklearn: Not installed
2024-04-30 16:27:49,995:INFO:                 ray: Not installed
2024-04-30 16:27:49,995:INFO:            hyperopt: Not installed
2024-04-30 16:27:49,995:INFO:              optuna: Not installed
2024-04-30 16:27:49,995:INFO:               skopt: Not installed
2024-04-30 16:27:49,995:INFO:              mlflow: Not installed
2024-04-30 16:27:49,995:INFO:              gradio: Not installed
2024-04-30 16:27:49,995:INFO:             fastapi: Not installed
2024-04-30 16:27:49,995:INFO:             uvicorn: Not installed
2024-04-30 16:27:49,995:INFO:              m2cgen: Not installed
2024-04-30 16:27:49,995:INFO:           evidently: Not installed
2024-04-30 16:27:49,995:INFO:               fugue: Not installed
2024-04-30 16:27:49,995:INFO:           streamlit: Not installed
2024-04-30 16:27:49,995:INFO:             prophet: Not installed
2024-04-30 16:27:49,996:INFO:None
2024-04-30 16:27:49,996:INFO:Set up data.
2024-04-30 16:27:58,085:INFO:PyCaret RegressionExperiment
2024-04-30 16:27:58,085:INFO:Logging name: reg-default-name
2024-04-30 16:27:58,085:INFO:ML Usecase: MLUsecase.REGRESSION
2024-04-30 16:27:58,086:INFO:version 3.3.2
2024-04-30 16:27:58,086:INFO:Initializing setup()
2024-04-30 16:27:58,086:INFO:self.USI: 32e1
2024-04-30 16:27:58,086:INFO:self._variable_keys: {'X_test', '_ml_usecase', 'gpu_param', 'gpu_n_jobs_param', 'html_param', 'X', 'y', 'data', '_available_plots', 'fold_groups_param', 'transform_target_param', 'log_plots_param', 'idx', 'y_test', 'logging_param', 'fold_generator', 'n_jobs_param', 'X_train', 'exp_id', 'USI', 'target_param', 'pipeline', 'exp_name_log', 'memory', 'y_train', 'seed', 'fold_shuffle_param'}
2024-04-30 16:27:58,086:INFO:Checking environment
2024-04-30 16:27:58,086:INFO:python_version: 3.11.5
2024-04-30 16:27:58,086:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-04-30 16:27:58,086:INFO:machine: AMD64
2024-04-30 16:27:58,086:INFO:platform: Windows-10-10.0.19045-SP0
2024-04-30 16:27:58,086:INFO:Memory: svmem(total=17087496192, available=9823768576, percent=42.5, used=7263727616, free=9823768576)
2024-04-30 16:27:58,086:INFO:Physical Core: 4
2024-04-30 16:27:58,086:INFO:Logical Core: 8
2024-04-30 16:27:58,086:INFO:Checking libraries
2024-04-30 16:27:58,086:INFO:System:
2024-04-30 16:27:58,086:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-04-30 16:27:58,087:INFO:executable: C:\Users\1104-27\anaconda3\python.exe
2024-04-30 16:27:58,087:INFO:   machine: Windows-10-10.0.19045-SP0
2024-04-30 16:27:58,087:INFO:PyCaret required dependencies:
2024-04-30 16:27:58,087:INFO:                 pip: 23.2.1
2024-04-30 16:27:58,087:INFO:          setuptools: 68.0.0
2024-04-30 16:27:58,087:INFO:             pycaret: 3.3.2
2024-04-30 16:27:58,087:INFO:             IPython: 8.15.0
2024-04-30 16:27:58,087:INFO:          ipywidgets: 8.0.4
2024-04-30 16:27:58,087:INFO:                tqdm: 4.65.0
2024-04-30 16:27:58,087:INFO:               numpy: 1.24.3
2024-04-30 16:27:58,087:INFO:              pandas: 2.0.3
2024-04-30 16:27:58,087:INFO:              jinja2: 3.1.2
2024-04-30 16:27:58,087:INFO:               scipy: 1.11.1
2024-04-30 16:27:58,087:INFO:              joblib: 1.2.0
2024-04-30 16:27:58,087:INFO:             sklearn: 1.4.2
2024-04-30 16:27:58,087:INFO:                pyod: 1.1.3
2024-04-30 16:27:58,087:INFO:            imblearn: 0.12.0
2024-04-30 16:27:58,088:INFO:   category_encoders: 2.6.3
2024-04-30 16:27:58,088:INFO:            lightgbm: 4.2.0
2024-04-30 16:27:58,088:INFO:               numba: 0.57.1
2024-04-30 16:27:58,088:INFO:            requests: 2.31.0
2024-04-30 16:27:58,088:INFO:          matplotlib: 3.7.2
2024-04-30 16:27:58,088:INFO:          scikitplot: 0.3.7
2024-04-30 16:27:58,088:INFO:         yellowbrick: 1.5
2024-04-30 16:27:58,088:INFO:              plotly: 5.21.0
2024-04-30 16:27:58,088:INFO:    plotly-resampler: Not installed
2024-04-30 16:27:58,088:INFO:             kaleido: 0.2.1
2024-04-30 16:27:58,088:INFO:           schemdraw: 0.15
2024-04-30 16:27:58,088:INFO:         statsmodels: 0.14.0
2024-04-30 16:27:58,088:INFO:              sktime: 0.26.0
2024-04-30 16:27:58,088:INFO:               tbats: 1.1.3
2024-04-30 16:27:58,088:INFO:            pmdarima: 2.0.4
2024-04-30 16:27:58,089:INFO:              psutil: 5.9.0
2024-04-30 16:27:58,089:INFO:          markupsafe: 2.1.1
2024-04-30 16:27:58,089:INFO:             pickle5: Not installed
2024-04-30 16:27:58,089:INFO:         cloudpickle: 2.2.1
2024-04-30 16:27:58,089:INFO:         deprecation: 2.1.0
2024-04-30 16:27:58,089:INFO:              xxhash: 2.0.2
2024-04-30 16:27:58,089:INFO:           wurlitzer: Not installed
2024-04-30 16:27:58,089:INFO:PyCaret optional dependencies:
2024-04-30 16:27:58,089:INFO:                shap: Not installed
2024-04-30 16:27:58,089:INFO:           interpret: Not installed
2024-04-30 16:27:58,089:INFO:                umap: Not installed
2024-04-30 16:27:58,089:INFO:     ydata_profiling: Not installed
2024-04-30 16:27:58,089:INFO:  explainerdashboard: Not installed
2024-04-30 16:27:58,089:INFO:             autoviz: Not installed
2024-04-30 16:27:58,089:INFO:           fairlearn: Not installed
2024-04-30 16:27:58,089:INFO:          deepchecks: Not installed
2024-04-30 16:27:58,089:INFO:             xgboost: 2.0.3
2024-04-30 16:27:58,090:INFO:            catboost: Not installed
2024-04-30 16:27:58,090:INFO:              kmodes: Not installed
2024-04-30 16:27:58,090:INFO:             mlxtend: 0.23.0
2024-04-30 16:27:58,090:INFO:       statsforecast: Not installed
2024-04-30 16:27:58,090:INFO:        tune_sklearn: Not installed
2024-04-30 16:27:58,090:INFO:                 ray: Not installed
2024-04-30 16:27:58,090:INFO:            hyperopt: Not installed
2024-04-30 16:27:58,090:INFO:              optuna: Not installed
2024-04-30 16:27:58,090:INFO:               skopt: Not installed
2024-04-30 16:27:58,090:INFO:              mlflow: Not installed
2024-04-30 16:27:58,090:INFO:              gradio: Not installed
2024-04-30 16:27:58,090:INFO:             fastapi: Not installed
2024-04-30 16:27:58,090:INFO:             uvicorn: Not installed
2024-04-30 16:27:58,090:INFO:              m2cgen: Not installed
2024-04-30 16:27:58,091:INFO:           evidently: Not installed
2024-04-30 16:27:58,091:INFO:               fugue: Not installed
2024-04-30 16:27:58,091:INFO:           streamlit: Not installed
2024-04-30 16:27:58,091:INFO:             prophet: Not installed
2024-04-30 16:27:58,091:INFO:None
2024-04-30 16:27:58,091:INFO:Set up data.
2024-04-30 16:27:58,102:INFO:Set up folding strategy.
2024-04-30 16:27:58,102:INFO:Set up train/test split.
2024-04-30 16:27:58,119:INFO:Set up index.
2024-04-30 16:27:58,119:INFO:Assigning column types.
2024-04-30 16:27:58,148:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-30 16:27:58,148:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-04-30 16:27:58,153:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-30 16:27:58,157:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-30 16:27:58,216:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-30 16:27:58,253:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-30 16:27:58,253:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:27:58,253:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:27:58,253:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-04-30 16:27:58,269:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-30 16:27:58,269:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-30 16:27:58,335:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-30 16:27:58,369:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-30 16:27:58,369:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:27:58,369:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:27:58,369:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-04-30 16:27:58,369:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-30 16:27:58,386:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-30 16:27:58,436:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-30 16:27:58,486:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-30 16:27:58,486:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:27:58,486:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:27:58,486:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-30 16:27:58,486:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-30 16:27:58,553:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-30 16:27:58,586:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-30 16:27:58,586:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:27:58,603:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:27:58,603:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-04-30 16:27:58,603:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-30 16:27:58,670:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-30 16:27:58,703:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-30 16:27:58,703:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:27:58,719:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:27:58,720:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-30 16:27:58,786:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-30 16:27:58,820:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-30 16:27:58,820:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:27:58,835:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:27:58,835:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-04-30 16:27:58,903:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-30 16:27:58,936:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-30 16:27:58,936:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:27:58,936:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:27:59,020:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-30 16:27:59,054:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-30 16:27:59,054:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:27:59,054:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:27:59,070:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-30 16:27:59,138:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-30 16:27:59,188:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:27:59,188:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:27:59,255:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-30 16:27:59,306:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:27:59,307:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:27:59,307:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-04-30 16:27:59,421:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:27:59,437:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:27:59,555:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:27:59,555:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:27:59,555:INFO:Preparing preprocessing pipeline...
2024-04-30 16:27:59,555:INFO:Set up simple imputation.
2024-04-30 16:27:59,604:INFO:Finished creating preprocessing pipeline.
2024-04-30 16:27:59,622:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\1104-27\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering',
                                             'steering_remote', 'leahter_seat',
                                             'driver_elec_seat',
                                             'pass_elec_seat', 'back_elec_seat',
                                             'driver_memory_seat',
                                             'massage_seat',
                                             'supervision_cluster',
                                             'paddle_shift', 'hi_pass',
                                             'pass_memory_seat',
                                             'back_heated_seat', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2024-04-30 16:27:59,622:INFO:Creating final display dataframe.
2024-04-30 16:27:59,854:INFO:Setup _display_container:                     Description             Value
0                    Session id              3199
1                        Target         bluetooth
2                   Target type        Regression
3           Original data shape        (1581, 98)
4        Transformed data shape        (1581, 98)
5   Transformed train set shape        (1106, 98)
6    Transformed test set shape         (475, 98)
7              Numeric features                81
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              32e1
2024-04-30 16:27:59,971:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:27:59,971:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:28:00,083:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:28:00,083:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:28:00,083:INFO:setup() successfully completed in 2.0s...............
2024-04-30 16:28:08,216:INFO:PyCaret RegressionExperiment
2024-04-30 16:28:08,216:INFO:Logging name: reg-default-name
2024-04-30 16:28:08,216:INFO:ML Usecase: MLUsecase.REGRESSION
2024-04-30 16:28:08,217:INFO:version 3.3.2
2024-04-30 16:28:08,217:INFO:Initializing setup()
2024-04-30 16:28:08,217:INFO:self.USI: b4b9
2024-04-30 16:28:08,217:INFO:self._variable_keys: {'X_test', '_ml_usecase', 'gpu_param', 'gpu_n_jobs_param', 'html_param', 'X', 'y', 'data', '_available_plots', 'fold_groups_param', 'transform_target_param', 'log_plots_param', 'idx', 'y_test', 'logging_param', 'fold_generator', 'n_jobs_param', 'X_train', 'exp_id', 'USI', 'target_param', 'pipeline', 'exp_name_log', 'memory', 'y_train', 'seed', 'fold_shuffle_param'}
2024-04-30 16:28:08,217:INFO:Checking environment
2024-04-30 16:28:08,217:INFO:python_version: 3.11.5
2024-04-30 16:28:08,217:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-04-30 16:28:08,217:INFO:machine: AMD64
2024-04-30 16:28:08,217:INFO:platform: Windows-10-10.0.19045-SP0
2024-04-30 16:28:08,217:INFO:Memory: svmem(total=17087496192, available=9835593728, percent=42.4, used=7251902464, free=9835593728)
2024-04-30 16:28:08,217:INFO:Physical Core: 4
2024-04-30 16:28:08,217:INFO:Logical Core: 8
2024-04-30 16:28:08,217:INFO:Checking libraries
2024-04-30 16:28:08,217:INFO:System:
2024-04-30 16:28:08,217:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-04-30 16:28:08,217:INFO:executable: C:\Users\1104-27\anaconda3\python.exe
2024-04-30 16:28:08,218:INFO:   machine: Windows-10-10.0.19045-SP0
2024-04-30 16:28:08,218:INFO:PyCaret required dependencies:
2024-04-30 16:28:08,218:INFO:                 pip: 23.2.1
2024-04-30 16:28:08,218:INFO:          setuptools: 68.0.0
2024-04-30 16:28:08,218:INFO:             pycaret: 3.3.2
2024-04-30 16:28:08,218:INFO:             IPython: 8.15.0
2024-04-30 16:28:08,218:INFO:          ipywidgets: 8.0.4
2024-04-30 16:28:08,218:INFO:                tqdm: 4.65.0
2024-04-30 16:28:08,218:INFO:               numpy: 1.24.3
2024-04-30 16:28:08,218:INFO:              pandas: 2.0.3
2024-04-30 16:28:08,218:INFO:              jinja2: 3.1.2
2024-04-30 16:28:08,218:INFO:               scipy: 1.11.1
2024-04-30 16:28:08,218:INFO:              joblib: 1.2.0
2024-04-30 16:28:08,218:INFO:             sklearn: 1.4.2
2024-04-30 16:28:08,218:INFO:                pyod: 1.1.3
2024-04-30 16:28:08,218:INFO:            imblearn: 0.12.0
2024-04-30 16:28:08,219:INFO:   category_encoders: 2.6.3
2024-04-30 16:28:08,219:INFO:            lightgbm: 4.2.0
2024-04-30 16:28:08,219:INFO:               numba: 0.57.1
2024-04-30 16:28:08,219:INFO:            requests: 2.31.0
2024-04-30 16:28:08,219:INFO:          matplotlib: 3.7.2
2024-04-30 16:28:08,219:INFO:          scikitplot: 0.3.7
2024-04-30 16:28:08,219:INFO:         yellowbrick: 1.5
2024-04-30 16:28:08,219:INFO:              plotly: 5.21.0
2024-04-30 16:28:08,219:INFO:    plotly-resampler: Not installed
2024-04-30 16:28:08,219:INFO:             kaleido: 0.2.1
2024-04-30 16:28:08,219:INFO:           schemdraw: 0.15
2024-04-30 16:28:08,219:INFO:         statsmodels: 0.14.0
2024-04-30 16:28:08,219:INFO:              sktime: 0.26.0
2024-04-30 16:28:08,219:INFO:               tbats: 1.1.3
2024-04-30 16:28:08,219:INFO:            pmdarima: 2.0.4
2024-04-30 16:28:08,220:INFO:              psutil: 5.9.0
2024-04-30 16:28:08,220:INFO:          markupsafe: 2.1.1
2024-04-30 16:28:08,220:INFO:             pickle5: Not installed
2024-04-30 16:28:08,220:INFO:         cloudpickle: 2.2.1
2024-04-30 16:28:08,220:INFO:         deprecation: 2.1.0
2024-04-30 16:28:08,220:INFO:              xxhash: 2.0.2
2024-04-30 16:28:08,220:INFO:           wurlitzer: Not installed
2024-04-30 16:28:08,220:INFO:PyCaret optional dependencies:
2024-04-30 16:28:08,220:INFO:                shap: Not installed
2024-04-30 16:28:08,220:INFO:           interpret: Not installed
2024-04-30 16:28:08,220:INFO:                umap: Not installed
2024-04-30 16:28:08,220:INFO:     ydata_profiling: Not installed
2024-04-30 16:28:08,220:INFO:  explainerdashboard: Not installed
2024-04-30 16:28:08,220:INFO:             autoviz: Not installed
2024-04-30 16:28:08,220:INFO:           fairlearn: Not installed
2024-04-30 16:28:08,220:INFO:          deepchecks: Not installed
2024-04-30 16:28:08,220:INFO:             xgboost: 2.0.3
2024-04-30 16:28:08,221:INFO:            catboost: Not installed
2024-04-30 16:28:08,221:INFO:              kmodes: Not installed
2024-04-30 16:28:08,221:INFO:             mlxtend: 0.23.0
2024-04-30 16:28:08,221:INFO:       statsforecast: Not installed
2024-04-30 16:28:08,221:INFO:        tune_sklearn: Not installed
2024-04-30 16:28:08,221:INFO:                 ray: Not installed
2024-04-30 16:28:08,221:INFO:            hyperopt: Not installed
2024-04-30 16:28:08,221:INFO:              optuna: Not installed
2024-04-30 16:28:08,221:INFO:               skopt: Not installed
2024-04-30 16:28:08,221:INFO:              mlflow: Not installed
2024-04-30 16:28:08,221:INFO:              gradio: Not installed
2024-04-30 16:28:08,221:INFO:             fastapi: Not installed
2024-04-30 16:28:08,221:INFO:             uvicorn: Not installed
2024-04-30 16:28:08,221:INFO:              m2cgen: Not installed
2024-04-30 16:28:08,221:INFO:           evidently: Not installed
2024-04-30 16:28:08,222:INFO:               fugue: Not installed
2024-04-30 16:28:08,222:INFO:           streamlit: Not installed
2024-04-30 16:28:08,222:INFO:             prophet: Not installed
2024-04-30 16:28:08,222:INFO:None
2024-04-30 16:28:08,222:INFO:Set up data.
2024-04-30 16:28:08,246:INFO:Set up folding strategy.
2024-04-30 16:28:08,246:INFO:Set up train/test split.
2024-04-30 16:28:08,269:INFO:Set up index.
2024-04-30 16:28:08,269:INFO:Assigning column types.
2024-04-30 16:28:08,285:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-30 16:28:08,285:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-04-30 16:28:08,289:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-30 16:28:08,293:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-30 16:28:08,343:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-30 16:28:08,389:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-30 16:28:08,389:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:28:08,389:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:28:08,389:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-04-30 16:28:08,389:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-30 16:28:08,389:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-30 16:28:08,463:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-30 16:28:08,496:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-30 16:28:08,496:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:28:08,512:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:28:08,513:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-04-30 16:28:08,513:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-30 16:28:08,513:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-30 16:28:08,580:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-30 16:28:08,613:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-30 16:28:08,613:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:28:08,613:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:28:08,629:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-30 16:28:08,630:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-30 16:28:08,696:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-30 16:28:08,730:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-30 16:28:08,730:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:28:08,730:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:28:08,730:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-04-30 16:28:08,746:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-30 16:28:08,797:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-30 16:28:08,846:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-30 16:28:08,846:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:28:08,846:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:28:08,846:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-30 16:28:08,913:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-30 16:28:08,947:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-30 16:28:08,947:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:28:08,963:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:28:08,964:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-04-30 16:28:09,030:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-30 16:28:09,063:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-30 16:28:09,063:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:28:09,080:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:28:09,148:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-30 16:28:09,181:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-30 16:28:09,181:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:28:09,181:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:28:09,181:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-30 16:28:09,264:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-30 16:28:09,314:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:28:09,314:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:28:09,382:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-30 16:28:09,430:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:28:09,430:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:28:09,430:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-04-30 16:28:09,547:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:28:09,547:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:28:09,664:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:28:09,664:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:28:09,664:INFO:Preparing preprocessing pipeline...
2024-04-30 16:28:09,664:INFO:Set up simple imputation.
2024-04-30 16:28:09,731:INFO:Finished creating preprocessing pipeline.
2024-04-30 16:28:09,731:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\1104-27\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering',
                                             'steering_remote', 'leahter_seat',
                                             'driver_elec_seat',
                                             'pass_elec_seat', 'back_elec_seat',
                                             'driver_memory_seat',
                                             'massage_seat',
                                             'supervision_cluster',
                                             'paddle_shift', 'hi_pass',
                                             'pass_memory_seat',
                                             'back_heated_seat', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2024-04-30 16:28:09,731:INFO:Creating final display dataframe.
2024-04-30 16:28:09,964:INFO:Setup _display_container:                     Description             Value
0                    Session id              7875
1                        Target             price
2                   Target type        Regression
3           Original data shape        (1581, 99)
4        Transformed data shape        (1581, 99)
5   Transformed train set shape        (1106, 99)
6    Transformed test set shape         (475, 99)
7              Numeric features                82
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              b4b9
2024-04-30 16:28:10,081:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:28:10,098:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:28:10,198:INFO:Soft dependency imported: xgboost: 2.0.3
2024-04-30 16:28:10,215:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 16:28:10,215:INFO:setup() successfully completed in 2.0s...............
2024-04-30 16:28:44,568:INFO:Initializing compare_models()
2024-04-30 16:28:44,568:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-04-30 16:28:44,568:INFO:Checking exceptions
2024-04-30 16:28:44,583:INFO:Preparing display monitor
2024-04-30 16:28:44,607:INFO:Initializing Linear Regression
2024-04-30 16:28:44,607:INFO:Total runtime is 0.0 minutes
2024-04-30 16:28:44,609:INFO:SubProcess create_model() called ==================================
2024-04-30 16:28:44,609:INFO:Initializing create_model()
2024-04-30 16:28:44,609:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D498C590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:28:44,609:INFO:Checking exceptions
2024-04-30 16:28:44,609:INFO:Importing libraries
2024-04-30 16:28:44,609:INFO:Copying training dataset
2024-04-30 16:28:44,649:INFO:Defining folds
2024-04-30 16:28:44,649:INFO:Declaring metric variables
2024-04-30 16:28:44,652:INFO:Importing untrained model
2024-04-30 16:28:44,655:INFO:Linear Regression Imported successfully
2024-04-30 16:28:44,661:INFO:Starting cross validation
2024-04-30 16:28:44,669:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:28:52,390:INFO:Calculating mean and std
2024-04-30 16:28:52,390:INFO:Creating metrics dataframe
2024-04-30 16:28:52,406:INFO:Uploading results into container
2024-04-30 16:28:52,406:INFO:Uploading model into container now
2024-04-30 16:28:52,407:INFO:_master_model_container: 1
2024-04-30 16:28:52,407:INFO:_display_container: 2
2024-04-30 16:28:52,407:INFO:LinearRegression(n_jobs=-1)
2024-04-30 16:28:52,407:INFO:create_model() successfully completed......................................
2024-04-30 16:28:52,521:INFO:SubProcess create_model() end ==================================
2024-04-30 16:28:52,521:INFO:Creating metrics dataframe
2024-04-30 16:28:52,537:INFO:Initializing Lasso Regression
2024-04-30 16:28:52,537:INFO:Total runtime is 0.1321562965710958 minutes
2024-04-30 16:28:52,537:INFO:SubProcess create_model() called ==================================
2024-04-30 16:28:52,537:INFO:Initializing create_model()
2024-04-30 16:28:52,537:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D498C590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:28:52,537:INFO:Checking exceptions
2024-04-30 16:28:52,537:INFO:Importing libraries
2024-04-30 16:28:52,537:INFO:Copying training dataset
2024-04-30 16:28:52,567:INFO:Defining folds
2024-04-30 16:28:52,567:INFO:Declaring metric variables
2024-04-30 16:28:52,576:INFO:Importing untrained model
2024-04-30 16:28:52,579:INFO:Lasso Regression Imported successfully
2024-04-30 16:28:52,584:INFO:Starting cross validation
2024-04-30 16:28:52,586:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:28:52,749:INFO:Calculating mean and std
2024-04-30 16:28:52,749:INFO:Creating metrics dataframe
2024-04-30 16:28:52,749:INFO:Uploading results into container
2024-04-30 16:28:52,749:INFO:Uploading model into container now
2024-04-30 16:28:52,749:INFO:_master_model_container: 2
2024-04-30 16:28:52,749:INFO:_display_container: 2
2024-04-30 16:28:52,749:INFO:Lasso(random_state=7875)
2024-04-30 16:28:52,749:INFO:create_model() successfully completed......................................
2024-04-30 16:28:52,857:INFO:SubProcess create_model() end ==================================
2024-04-30 16:28:52,857:INFO:Creating metrics dataframe
2024-04-30 16:28:52,874:INFO:Initializing Ridge Regression
2024-04-30 16:28:52,874:INFO:Total runtime is 0.13778366645177206 minutes
2024-04-30 16:28:52,874:INFO:SubProcess create_model() called ==================================
2024-04-30 16:28:52,874:INFO:Initializing create_model()
2024-04-30 16:28:52,874:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D498C590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:28:52,874:INFO:Checking exceptions
2024-04-30 16:28:52,874:INFO:Importing libraries
2024-04-30 16:28:52,874:INFO:Copying training dataset
2024-04-30 16:28:52,907:INFO:Defining folds
2024-04-30 16:28:52,907:INFO:Declaring metric variables
2024-04-30 16:28:52,907:INFO:Importing untrained model
2024-04-30 16:28:52,907:INFO:Ridge Regression Imported successfully
2024-04-30 16:28:52,926:INFO:Starting cross validation
2024-04-30 16:28:52,927:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:28:53,074:INFO:Calculating mean and std
2024-04-30 16:28:53,074:INFO:Creating metrics dataframe
2024-04-30 16:28:53,074:INFO:Uploading results into container
2024-04-30 16:28:53,074:INFO:Uploading model into container now
2024-04-30 16:28:53,074:INFO:_master_model_container: 3
2024-04-30 16:28:53,074:INFO:_display_container: 2
2024-04-30 16:28:53,074:INFO:Ridge(random_state=7875)
2024-04-30 16:28:53,074:INFO:create_model() successfully completed......................................
2024-04-30 16:28:53,191:INFO:SubProcess create_model() end ==================================
2024-04-30 16:28:53,191:INFO:Creating metrics dataframe
2024-04-30 16:28:53,191:INFO:Initializing Elastic Net
2024-04-30 16:28:53,191:INFO:Total runtime is 0.1430592735608419 minutes
2024-04-30 16:28:53,207:INFO:SubProcess create_model() called ==================================
2024-04-30 16:28:53,207:INFO:Initializing create_model()
2024-04-30 16:28:53,207:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D498C590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:28:53,207:INFO:Checking exceptions
2024-04-30 16:28:53,207:INFO:Importing libraries
2024-04-30 16:28:53,207:INFO:Copying training dataset
2024-04-30 16:28:53,233:INFO:Defining folds
2024-04-30 16:28:53,233:INFO:Declaring metric variables
2024-04-30 16:28:53,235:INFO:Importing untrained model
2024-04-30 16:28:53,241:INFO:Elastic Net Imported successfully
2024-04-30 16:28:53,246:INFO:Starting cross validation
2024-04-30 16:28:53,246:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:28:53,391:INFO:Calculating mean and std
2024-04-30 16:28:53,391:INFO:Creating metrics dataframe
2024-04-30 16:28:53,407:INFO:Uploading results into container
2024-04-30 16:28:53,408:INFO:Uploading model into container now
2024-04-30 16:28:53,408:INFO:_master_model_container: 4
2024-04-30 16:28:53,408:INFO:_display_container: 2
2024-04-30 16:28:53,409:INFO:ElasticNet(random_state=7875)
2024-04-30 16:28:53,409:INFO:create_model() successfully completed......................................
2024-04-30 16:28:53,523:INFO:SubProcess create_model() end ==================================
2024-04-30 16:28:53,524:INFO:Creating metrics dataframe
2024-04-30 16:28:53,524:INFO:Initializing Least Angle Regression
2024-04-30 16:28:53,524:INFO:Total runtime is 0.14862001339594524 minutes
2024-04-30 16:28:53,524:INFO:SubProcess create_model() called ==================================
2024-04-30 16:28:53,524:INFO:Initializing create_model()
2024-04-30 16:28:53,524:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D498C590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:28:53,524:INFO:Checking exceptions
2024-04-30 16:28:53,524:INFO:Importing libraries
2024-04-30 16:28:53,524:INFO:Copying training dataset
2024-04-30 16:28:53,558:INFO:Defining folds
2024-04-30 16:28:53,558:INFO:Declaring metric variables
2024-04-30 16:28:53,558:INFO:Importing untrained model
2024-04-30 16:28:53,558:INFO:Least Angle Regression Imported successfully
2024-04-30 16:28:53,574:INFO:Starting cross validation
2024-04-30 16:28:53,575:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:28:53,758:INFO:Calculating mean and std
2024-04-30 16:28:53,775:INFO:Creating metrics dataframe
2024-04-30 16:28:53,775:INFO:Uploading results into container
2024-04-30 16:28:53,775:INFO:Uploading model into container now
2024-04-30 16:28:53,775:INFO:_master_model_container: 5
2024-04-30 16:28:53,775:INFO:_display_container: 2
2024-04-30 16:28:53,775:INFO:Lars(random_state=7875)
2024-04-30 16:28:53,775:INFO:create_model() successfully completed......................................
2024-04-30 16:28:53,875:INFO:SubProcess create_model() end ==================================
2024-04-30 16:28:53,875:INFO:Creating metrics dataframe
2024-04-30 16:28:53,892:INFO:Initializing Lasso Least Angle Regression
2024-04-30 16:28:53,892:INFO:Total runtime is 0.15473799705505373 minutes
2024-04-30 16:28:53,892:INFO:SubProcess create_model() called ==================================
2024-04-30 16:28:53,892:INFO:Initializing create_model()
2024-04-30 16:28:53,892:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D498C590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:28:53,892:INFO:Checking exceptions
2024-04-30 16:28:53,892:INFO:Importing libraries
2024-04-30 16:28:53,892:INFO:Copying training dataset
2024-04-30 16:28:53,925:INFO:Defining folds
2024-04-30 16:28:53,925:INFO:Declaring metric variables
2024-04-30 16:28:53,925:INFO:Importing untrained model
2024-04-30 16:28:53,925:INFO:Lasso Least Angle Regression Imported successfully
2024-04-30 16:28:53,945:INFO:Starting cross validation
2024-04-30 16:28:53,946:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:28:54,092:INFO:Calculating mean and std
2024-04-30 16:28:54,108:INFO:Creating metrics dataframe
2024-04-30 16:28:54,108:INFO:Uploading results into container
2024-04-30 16:28:54,108:INFO:Uploading model into container now
2024-04-30 16:28:54,108:INFO:_master_model_container: 6
2024-04-30 16:28:54,108:INFO:_display_container: 2
2024-04-30 16:28:54,108:INFO:LassoLars(random_state=7875)
2024-04-30 16:28:54,108:INFO:create_model() successfully completed......................................
2024-04-30 16:28:54,225:INFO:SubProcess create_model() end ==================================
2024-04-30 16:28:54,225:INFO:Creating metrics dataframe
2024-04-30 16:28:54,225:INFO:Initializing Orthogonal Matching Pursuit
2024-04-30 16:28:54,225:INFO:Total runtime is 0.16030250787734987 minutes
2024-04-30 16:28:54,225:INFO:SubProcess create_model() called ==================================
2024-04-30 16:28:54,225:INFO:Initializing create_model()
2024-04-30 16:28:54,241:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D498C590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:28:54,241:INFO:Checking exceptions
2024-04-30 16:28:54,241:INFO:Importing libraries
2024-04-30 16:28:54,241:INFO:Copying training dataset
2024-04-30 16:28:54,264:INFO:Defining folds
2024-04-30 16:28:54,264:INFO:Declaring metric variables
2024-04-30 16:28:54,267:INFO:Importing untrained model
2024-04-30 16:28:54,270:INFO:Orthogonal Matching Pursuit Imported successfully
2024-04-30 16:28:54,277:INFO:Starting cross validation
2024-04-30 16:28:54,278:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:28:54,409:INFO:Calculating mean and std
2024-04-30 16:28:54,409:INFO:Creating metrics dataframe
2024-04-30 16:28:54,425:INFO:Uploading results into container
2024-04-30 16:28:54,425:INFO:Uploading model into container now
2024-04-30 16:28:54,425:INFO:_master_model_container: 7
2024-04-30 16:28:54,425:INFO:_display_container: 2
2024-04-30 16:28:54,425:INFO:OrthogonalMatchingPursuit()
2024-04-30 16:28:54,425:INFO:create_model() successfully completed......................................
2024-04-30 16:28:54,523:INFO:SubProcess create_model() end ==================================
2024-04-30 16:28:54,523:INFO:Creating metrics dataframe
2024-04-30 16:28:54,539:INFO:Initializing Bayesian Ridge
2024-04-30 16:28:54,539:INFO:Total runtime is 0.16552353700002037 minutes
2024-04-30 16:28:54,539:INFO:SubProcess create_model() called ==================================
2024-04-30 16:28:54,539:INFO:Initializing create_model()
2024-04-30 16:28:54,539:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D498C590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:28:54,539:INFO:Checking exceptions
2024-04-30 16:28:54,539:INFO:Importing libraries
2024-04-30 16:28:54,539:INFO:Copying training dataset
2024-04-30 16:28:54,575:INFO:Defining folds
2024-04-30 16:28:54,575:INFO:Declaring metric variables
2024-04-30 16:28:54,578:INFO:Importing untrained model
2024-04-30 16:28:54,581:INFO:Bayesian Ridge Imported successfully
2024-04-30 16:28:54,587:INFO:Starting cross validation
2024-04-30 16:28:54,588:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:28:54,736:INFO:Calculating mean and std
2024-04-30 16:28:54,736:INFO:Creating metrics dataframe
2024-04-30 16:28:54,736:INFO:Uploading results into container
2024-04-30 16:28:54,736:INFO:Uploading model into container now
2024-04-30 16:28:54,736:INFO:_master_model_container: 8
2024-04-30 16:28:54,736:INFO:_display_container: 2
2024-04-30 16:28:54,736:INFO:BayesianRidge()
2024-04-30 16:28:54,736:INFO:create_model() successfully completed......................................
2024-04-30 16:28:54,842:INFO:SubProcess create_model() end ==================================
2024-04-30 16:28:54,842:INFO:Creating metrics dataframe
2024-04-30 16:28:54,859:INFO:Initializing Passive Aggressive Regressor
2024-04-30 16:28:54,859:INFO:Total runtime is 0.17086472511291506 minutes
2024-04-30 16:28:54,859:INFO:SubProcess create_model() called ==================================
2024-04-30 16:28:54,859:INFO:Initializing create_model()
2024-04-30 16:28:54,859:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D498C590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:28:54,859:INFO:Checking exceptions
2024-04-30 16:28:54,859:INFO:Importing libraries
2024-04-30 16:28:54,859:INFO:Copying training dataset
2024-04-30 16:28:54,892:INFO:Defining folds
2024-04-30 16:28:54,892:INFO:Declaring metric variables
2024-04-30 16:28:54,892:INFO:Importing untrained model
2024-04-30 16:28:54,892:INFO:Passive Aggressive Regressor Imported successfully
2024-04-30 16:28:54,914:INFO:Starting cross validation
2024-04-30 16:28:54,915:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:28:55,070:INFO:Calculating mean and std
2024-04-30 16:28:55,071:INFO:Creating metrics dataframe
2024-04-30 16:28:55,072:INFO:Uploading results into container
2024-04-30 16:28:55,073:INFO:Uploading model into container now
2024-04-30 16:28:55,073:INFO:_master_model_container: 9
2024-04-30 16:28:55,073:INFO:_display_container: 2
2024-04-30 16:28:55,073:INFO:PassiveAggressiveRegressor(random_state=7875)
2024-04-30 16:28:55,073:INFO:create_model() successfully completed......................................
2024-04-30 16:28:55,177:INFO:SubProcess create_model() end ==================================
2024-04-30 16:28:55,177:INFO:Creating metrics dataframe
2024-04-30 16:28:55,194:INFO:Initializing Huber Regressor
2024-04-30 16:28:55,194:INFO:Total runtime is 0.1764453172683716 minutes
2024-04-30 16:28:55,194:INFO:SubProcess create_model() called ==================================
2024-04-30 16:28:55,194:INFO:Initializing create_model()
2024-04-30 16:28:55,194:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D498C590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:28:55,194:INFO:Checking exceptions
2024-04-30 16:28:55,194:INFO:Importing libraries
2024-04-30 16:28:55,194:INFO:Copying training dataset
2024-04-30 16:28:55,218:INFO:Defining folds
2024-04-30 16:28:55,218:INFO:Declaring metric variables
2024-04-30 16:28:55,227:INFO:Importing untrained model
2024-04-30 16:28:55,227:INFO:Huber Regressor Imported successfully
2024-04-30 16:28:55,227:INFO:Starting cross validation
2024-04-30 16:28:55,227:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:28:55,426:INFO:Calculating mean and std
2024-04-30 16:28:55,426:INFO:Creating metrics dataframe
2024-04-30 16:28:55,426:INFO:Uploading results into container
2024-04-30 16:28:55,426:INFO:Uploading model into container now
2024-04-30 16:28:55,426:INFO:_master_model_container: 10
2024-04-30 16:28:55,426:INFO:_display_container: 2
2024-04-30 16:28:55,426:INFO:HuberRegressor()
2024-04-30 16:28:55,426:INFO:create_model() successfully completed......................................
2024-04-30 16:28:55,544:INFO:SubProcess create_model() end ==================================
2024-04-30 16:28:55,544:INFO:Creating metrics dataframe
2024-04-30 16:28:55,544:INFO:Initializing K Neighbors Regressor
2024-04-30 16:28:55,544:INFO:Total runtime is 0.182280969619751 minutes
2024-04-30 16:28:55,544:INFO:SubProcess create_model() called ==================================
2024-04-30 16:28:55,544:INFO:Initializing create_model()
2024-04-30 16:28:55,544:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D498C590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:28:55,544:INFO:Checking exceptions
2024-04-30 16:28:55,544:INFO:Importing libraries
2024-04-30 16:28:55,544:INFO:Copying training dataset
2024-04-30 16:28:55,582:INFO:Defining folds
2024-04-30 16:28:55,582:INFO:Declaring metric variables
2024-04-30 16:28:55,582:INFO:Importing untrained model
2024-04-30 16:28:55,582:INFO:K Neighbors Regressor Imported successfully
2024-04-30 16:28:55,595:INFO:Starting cross validation
2024-04-30 16:28:55,596:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:28:55,977:INFO:Calculating mean and std
2024-04-30 16:28:55,977:INFO:Creating metrics dataframe
2024-04-30 16:28:55,977:INFO:Uploading results into container
2024-04-30 16:28:55,977:INFO:Uploading model into container now
2024-04-30 16:28:55,977:INFO:_master_model_container: 11
2024-04-30 16:28:55,977:INFO:_display_container: 2
2024-04-30 16:28:55,977:INFO:KNeighborsRegressor(n_jobs=-1)
2024-04-30 16:28:55,977:INFO:create_model() successfully completed......................................
2024-04-30 16:28:56,102:INFO:SubProcess create_model() end ==================================
2024-04-30 16:28:56,102:INFO:Creating metrics dataframe
2024-04-30 16:28:56,113:INFO:Initializing Decision Tree Regressor
2024-04-30 16:28:56,113:INFO:Total runtime is 0.19177032709121705 minutes
2024-04-30 16:28:56,113:INFO:SubProcess create_model() called ==================================
2024-04-30 16:28:56,113:INFO:Initializing create_model()
2024-04-30 16:28:56,113:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D498C590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:28:56,113:INFO:Checking exceptions
2024-04-30 16:28:56,113:INFO:Importing libraries
2024-04-30 16:28:56,113:INFO:Copying training dataset
2024-04-30 16:28:56,145:INFO:Defining folds
2024-04-30 16:28:56,145:INFO:Declaring metric variables
2024-04-30 16:28:56,145:INFO:Importing untrained model
2024-04-30 16:28:56,145:INFO:Decision Tree Regressor Imported successfully
2024-04-30 16:28:56,163:INFO:Starting cross validation
2024-04-30 16:28:56,164:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:28:56,379:INFO:Calculating mean and std
2024-04-30 16:28:56,379:INFO:Creating metrics dataframe
2024-04-30 16:28:56,379:INFO:Uploading results into container
2024-04-30 16:28:56,379:INFO:Uploading model into container now
2024-04-30 16:28:56,379:INFO:_master_model_container: 12
2024-04-30 16:28:56,379:INFO:_display_container: 2
2024-04-30 16:28:56,379:INFO:DecisionTreeRegressor(random_state=7875)
2024-04-30 16:28:56,379:INFO:create_model() successfully completed......................................
2024-04-30 16:28:56,528:INFO:SubProcess create_model() end ==================================
2024-04-30 16:28:56,528:INFO:Creating metrics dataframe
2024-04-30 16:28:56,545:INFO:Initializing Random Forest Regressor
2024-04-30 16:28:56,545:INFO:Total runtime is 0.1989632566769918 minutes
2024-04-30 16:28:56,545:INFO:SubProcess create_model() called ==================================
2024-04-30 16:28:56,545:INFO:Initializing create_model()
2024-04-30 16:28:56,545:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D498C590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:28:56,545:INFO:Checking exceptions
2024-04-30 16:28:56,545:INFO:Importing libraries
2024-04-30 16:28:56,545:INFO:Copying training dataset
2024-04-30 16:28:56,585:INFO:Defining folds
2024-04-30 16:28:56,585:INFO:Declaring metric variables
2024-04-30 16:28:56,589:INFO:Importing untrained model
2024-04-30 16:28:56,593:INFO:Random Forest Regressor Imported successfully
2024-04-30 16:28:56,602:INFO:Starting cross validation
2024-04-30 16:28:56,603:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:28:59,113:INFO:Calculating mean and std
2024-04-30 16:28:59,113:INFO:Creating metrics dataframe
2024-04-30 16:28:59,113:INFO:Uploading results into container
2024-04-30 16:28:59,113:INFO:Uploading model into container now
2024-04-30 16:28:59,113:INFO:_master_model_container: 13
2024-04-30 16:28:59,129:INFO:_display_container: 2
2024-04-30 16:28:59,130:INFO:RandomForestRegressor(n_jobs=-1, random_state=7875)
2024-04-30 16:28:59,130:INFO:create_model() successfully completed......................................
2024-04-30 16:28:59,230:INFO:SubProcess create_model() end ==================================
2024-04-30 16:28:59,230:INFO:Creating metrics dataframe
2024-04-30 16:28:59,247:INFO:Initializing Extra Trees Regressor
2024-04-30 16:28:59,247:INFO:Total runtime is 0.24399240414301557 minutes
2024-04-30 16:28:59,247:INFO:SubProcess create_model() called ==================================
2024-04-30 16:28:59,247:INFO:Initializing create_model()
2024-04-30 16:28:59,247:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D498C590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:28:59,262:INFO:Checking exceptions
2024-04-30 16:28:59,262:INFO:Importing libraries
2024-04-30 16:28:59,262:INFO:Copying training dataset
2024-04-30 16:28:59,295:INFO:Defining folds
2024-04-30 16:28:59,295:INFO:Declaring metric variables
2024-04-30 16:28:59,297:INFO:Importing untrained model
2024-04-30 16:28:59,297:INFO:Extra Trees Regressor Imported successfully
2024-04-30 16:28:59,297:INFO:Starting cross validation
2024-04-30 16:28:59,297:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:29:02,250:INFO:Calculating mean and std
2024-04-30 16:29:02,250:INFO:Creating metrics dataframe
2024-04-30 16:29:02,250:INFO:Uploading results into container
2024-04-30 16:29:02,250:INFO:Uploading model into container now
2024-04-30 16:29:02,250:INFO:_master_model_container: 14
2024-04-30 16:29:02,250:INFO:_display_container: 2
2024-04-30 16:29:02,250:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=7875)
2024-04-30 16:29:02,250:INFO:create_model() successfully completed......................................
2024-04-30 16:29:02,363:INFO:SubProcess create_model() end ==================================
2024-04-30 16:29:02,363:INFO:Creating metrics dataframe
2024-04-30 16:29:02,379:INFO:Initializing AdaBoost Regressor
2024-04-30 16:29:02,379:INFO:Total runtime is 0.29619535207748415 minutes
2024-04-30 16:29:02,387:INFO:SubProcess create_model() called ==================================
2024-04-30 16:29:02,387:INFO:Initializing create_model()
2024-04-30 16:29:02,387:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D498C590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:29:02,387:INFO:Checking exceptions
2024-04-30 16:29:02,387:INFO:Importing libraries
2024-04-30 16:29:02,387:INFO:Copying training dataset
2024-04-30 16:29:02,413:INFO:Defining folds
2024-04-30 16:29:02,413:INFO:Declaring metric variables
2024-04-30 16:29:02,413:INFO:Importing untrained model
2024-04-30 16:29:02,429:INFO:AdaBoost Regressor Imported successfully
2024-04-30 16:29:02,437:INFO:Starting cross validation
2024-04-30 16:29:02,437:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:29:03,051:INFO:Calculating mean and std
2024-04-30 16:29:03,067:INFO:Creating metrics dataframe
2024-04-30 16:29:03,067:INFO:Uploading results into container
2024-04-30 16:29:03,067:INFO:Uploading model into container now
2024-04-30 16:29:03,067:INFO:_master_model_container: 15
2024-04-30 16:29:03,067:INFO:_display_container: 2
2024-04-30 16:29:03,067:INFO:AdaBoostRegressor(random_state=7875)
2024-04-30 16:29:03,067:INFO:create_model() successfully completed......................................
2024-04-30 16:29:03,184:INFO:SubProcess create_model() end ==================================
2024-04-30 16:29:03,184:INFO:Creating metrics dataframe
2024-04-30 16:29:03,184:INFO:Initializing Gradient Boosting Regressor
2024-04-30 16:29:03,184:INFO:Total runtime is 0.30961415370305384 minutes
2024-04-30 16:29:03,202:INFO:SubProcess create_model() called ==================================
2024-04-30 16:29:03,203:INFO:Initializing create_model()
2024-04-30 16:29:03,203:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D498C590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:29:03,203:INFO:Checking exceptions
2024-04-30 16:29:03,203:INFO:Importing libraries
2024-04-30 16:29:03,203:INFO:Copying training dataset
2024-04-30 16:29:03,220:INFO:Defining folds
2024-04-30 16:29:03,220:INFO:Declaring metric variables
2024-04-30 16:29:03,220:INFO:Importing untrained model
2024-04-30 16:29:03,220:INFO:Gradient Boosting Regressor Imported successfully
2024-04-30 16:29:03,238:INFO:Starting cross validation
2024-04-30 16:29:03,238:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:29:04,035:INFO:Calculating mean and std
2024-04-30 16:29:04,035:INFO:Creating metrics dataframe
2024-04-30 16:29:04,035:INFO:Uploading results into container
2024-04-30 16:29:04,035:INFO:Uploading model into container now
2024-04-30 16:29:04,035:INFO:_master_model_container: 16
2024-04-30 16:29:04,035:INFO:_display_container: 2
2024-04-30 16:29:04,035:INFO:GradientBoostingRegressor(random_state=7875)
2024-04-30 16:29:04,035:INFO:create_model() successfully completed......................................
2024-04-30 16:29:04,152:INFO:SubProcess create_model() end ==================================
2024-04-30 16:29:04,152:INFO:Creating metrics dataframe
2024-04-30 16:29:04,168:INFO:Initializing Extreme Gradient Boosting
2024-04-30 16:29:04,168:INFO:Total runtime is 0.3260180830955506 minutes
2024-04-30 16:29:04,168:INFO:SubProcess create_model() called ==================================
2024-04-30 16:29:04,168:INFO:Initializing create_model()
2024-04-30 16:29:04,168:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D498C590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:29:04,168:INFO:Checking exceptions
2024-04-30 16:29:04,168:INFO:Importing libraries
2024-04-30 16:29:04,168:INFO:Copying training dataset
2024-04-30 16:29:04,193:INFO:Defining folds
2024-04-30 16:29:04,193:INFO:Declaring metric variables
2024-04-30 16:29:04,202:INFO:Importing untrained model
2024-04-30 16:29:04,202:INFO:Extreme Gradient Boosting Imported successfully
2024-04-30 16:29:04,202:INFO:Starting cross validation
2024-04-30 16:29:04,202:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:29:04,767:INFO:Calculating mean and std
2024-04-30 16:29:04,767:INFO:Creating metrics dataframe
2024-04-30 16:29:04,767:INFO:Uploading results into container
2024-04-30 16:29:04,767:INFO:Uploading model into container now
2024-04-30 16:29:04,767:INFO:_master_model_container: 17
2024-04-30 16:29:04,767:INFO:_display_container: 2
2024-04-30 16:29:04,767:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=7875, ...)
2024-04-30 16:29:04,767:INFO:create_model() successfully completed......................................
2024-04-30 16:29:04,887:INFO:SubProcess create_model() end ==================================
2024-04-30 16:29:04,887:INFO:Creating metrics dataframe
2024-04-30 16:29:04,905:INFO:Initializing Light Gradient Boosting Machine
2024-04-30 16:29:04,905:INFO:Total runtime is 0.33829920689264936 minutes
2024-04-30 16:29:04,906:INFO:SubProcess create_model() called ==================================
2024-04-30 16:29:04,906:INFO:Initializing create_model()
2024-04-30 16:29:04,906:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D498C590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:29:04,906:INFO:Checking exceptions
2024-04-30 16:29:04,906:INFO:Importing libraries
2024-04-30 16:29:04,906:INFO:Copying training dataset
2024-04-30 16:29:04,925:INFO:Defining folds
2024-04-30 16:29:04,936:INFO:Declaring metric variables
2024-04-30 16:29:04,936:INFO:Importing untrained model
2024-04-30 16:29:04,936:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-30 16:29:04,936:INFO:Starting cross validation
2024-04-30 16:29:04,936:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:29:05,920:INFO:Calculating mean and std
2024-04-30 16:29:05,920:INFO:Creating metrics dataframe
2024-04-30 16:29:05,920:INFO:Uploading results into container
2024-04-30 16:29:05,920:INFO:Uploading model into container now
2024-04-30 16:29:05,920:INFO:_master_model_container: 18
2024-04-30 16:29:05,920:INFO:_display_container: 2
2024-04-30 16:29:05,920:INFO:LGBMRegressor(n_jobs=-1, random_state=7875)
2024-04-30 16:29:05,920:INFO:create_model() successfully completed......................................
2024-04-30 16:29:06,070:INFO:SubProcess create_model() end ==================================
2024-04-30 16:29:06,070:INFO:Creating metrics dataframe
2024-04-30 16:29:06,070:INFO:Initializing Dummy Regressor
2024-04-30 16:29:06,086:INFO:Total runtime is 0.35797713200251263 minutes
2024-04-30 16:29:06,087:INFO:SubProcess create_model() called ==================================
2024-04-30 16:29:06,087:INFO:Initializing create_model()
2024-04-30 16:29:06,087:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D498C590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:29:06,087:INFO:Checking exceptions
2024-04-30 16:29:06,087:INFO:Importing libraries
2024-04-30 16:29:06,087:INFO:Copying training dataset
2024-04-30 16:29:06,110:INFO:Defining folds
2024-04-30 16:29:06,110:INFO:Declaring metric variables
2024-04-30 16:29:06,110:INFO:Importing untrained model
2024-04-30 16:29:06,123:INFO:Dummy Regressor Imported successfully
2024-04-30 16:29:06,123:INFO:Starting cross validation
2024-04-30 16:29:06,123:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:29:06,254:INFO:Calculating mean and std
2024-04-30 16:29:06,254:INFO:Creating metrics dataframe
2024-04-30 16:29:06,254:INFO:Uploading results into container
2024-04-30 16:29:06,254:INFO:Uploading model into container now
2024-04-30 16:29:06,254:INFO:_master_model_container: 19
2024-04-30 16:29:06,254:INFO:_display_container: 2
2024-04-30 16:29:06,269:INFO:DummyRegressor()
2024-04-30 16:29:06,269:INFO:create_model() successfully completed......................................
2024-04-30 16:29:06,371:INFO:SubProcess create_model() end ==================================
2024-04-30 16:29:06,371:INFO:Creating metrics dataframe
2024-04-30 16:29:06,388:INFO:Initializing create_model()
2024-04-30 16:29:06,388:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=GradientBoostingRegressor(random_state=7875), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:29:06,388:INFO:Checking exceptions
2024-04-30 16:29:06,405:INFO:Importing libraries
2024-04-30 16:29:06,405:INFO:Copying training dataset
2024-04-30 16:29:06,424:INFO:Defining folds
2024-04-30 16:29:06,424:INFO:Declaring metric variables
2024-04-30 16:29:06,424:INFO:Importing untrained model
2024-04-30 16:29:06,424:INFO:Declaring custom model
2024-04-30 16:29:06,424:INFO:Gradient Boosting Regressor Imported successfully
2024-04-30 16:29:06,424:INFO:Cross validation set to False
2024-04-30 16:29:06,424:INFO:Fitting Model
2024-04-30 16:29:06,709:INFO:GradientBoostingRegressor(random_state=7875)
2024-04-30 16:29:06,709:INFO:create_model() successfully completed......................................
2024-04-30 16:29:06,857:INFO:_master_model_container: 19
2024-04-30 16:29:06,857:INFO:_display_container: 2
2024-04-30 16:29:06,857:INFO:GradientBoostingRegressor(random_state=7875)
2024-04-30 16:29:06,857:INFO:compare_models() successfully completed......................................
2024-04-30 16:33:22,915:INFO:Initializing create_model()
2024-04-30 16:33:22,915:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=gbr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:33:22,916:INFO:Checking exceptions
2024-04-30 16:33:22,930:INFO:Importing libraries
2024-04-30 16:33:22,930:INFO:Copying training dataset
2024-04-30 16:33:22,963:INFO:Defining folds
2024-04-30 16:33:22,963:INFO:Declaring metric variables
2024-04-30 16:33:22,965:INFO:Importing untrained model
2024-04-30 16:33:22,965:INFO:Gradient Boosting Regressor Imported successfully
2024-04-30 16:33:22,980:INFO:Starting cross validation
2024-04-30 16:33:22,981:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:33:23,828:INFO:Calculating mean and std
2024-04-30 16:33:23,828:INFO:Creating metrics dataframe
2024-04-30 16:33:23,828:INFO:Finalizing model
2024-04-30 16:33:24,111:INFO:Uploading results into container
2024-04-30 16:33:24,111:INFO:Uploading model into container now
2024-04-30 16:33:24,111:INFO:_master_model_container: 20
2024-04-30 16:33:24,111:INFO:_display_container: 3
2024-04-30 16:33:24,111:INFO:GradientBoostingRegressor(random_state=7875)
2024-04-30 16:33:24,111:INFO:create_model() successfully completed......................................
2024-04-30 16:33:37,083:INFO:Initializing tune_model()
2024-04-30 16:33:37,084:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=GradientBoostingRegressor(random_state=7875), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-30 16:33:37,084:INFO:Checking exceptions
2024-04-30 16:33:37,108:INFO:Copying training dataset
2024-04-30 16:33:37,125:INFO:Checking base model
2024-04-30 16:33:37,125:INFO:Base model : Gradient Boosting Regressor
2024-04-30 16:33:37,129:INFO:Declaring metric variables
2024-04-30 16:33:37,132:INFO:Defining Hyperparameters
2024-04-30 16:33:37,238:INFO:Tuning with n_jobs=-1
2024-04-30 16:33:37,238:INFO:Initializing RandomizedSearchCV
2024-04-30 16:33:46,116:INFO:best_params: {'actual_estimator__subsample': 0.4, 'actual_estimator__n_estimators': 280, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.05, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 1, 'actual_estimator__learning_rate': 0.15}
2024-04-30 16:33:46,116:INFO:Hyperparameter search completed
2024-04-30 16:33:46,116:INFO:SubProcess create_model() called ==================================
2024-04-30 16:33:46,116:INFO:Initializing create_model()
2024-04-30 16:33:46,116:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=GradientBoostingRegressor(random_state=7875), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D4BE7C90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.4, 'n_estimators': 280, 'min_samples_split': 5, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.05, 'max_features': 1.0, 'max_depth': 1, 'learning_rate': 0.15})
2024-04-30 16:33:46,116:INFO:Checking exceptions
2024-04-30 16:33:46,116:INFO:Importing libraries
2024-04-30 16:33:46,116:INFO:Copying training dataset
2024-04-30 16:33:46,136:INFO:Defining folds
2024-04-30 16:33:46,150:INFO:Declaring metric variables
2024-04-30 16:33:46,150:INFO:Importing untrained model
2024-04-30 16:33:46,150:INFO:Declaring custom model
2024-04-30 16:33:46,150:INFO:Gradient Boosting Regressor Imported successfully
2024-04-30 16:33:46,150:INFO:Starting cross validation
2024-04-30 16:33:46,150:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:33:46,951:INFO:Calculating mean and std
2024-04-30 16:33:46,951:INFO:Creating metrics dataframe
2024-04-30 16:33:46,951:INFO:Finalizing model
2024-04-30 16:33:47,206:INFO:Uploading results into container
2024-04-30 16:33:47,206:INFO:Uploading model into container now
2024-04-30 16:33:47,206:INFO:_master_model_container: 21
2024-04-30 16:33:47,206:INFO:_display_container: 4
2024-04-30 16:33:47,217:INFO:GradientBoostingRegressor(learning_rate=0.15, max_depth=1, max_features=1.0,
                          min_impurity_decrease=0.05, min_samples_leaf=5,
                          min_samples_split=5, n_estimators=280,
                          random_state=7875, subsample=0.4)
2024-04-30 16:33:47,217:INFO:create_model() successfully completed......................................
2024-04-30 16:33:47,318:INFO:SubProcess create_model() end ==================================
2024-04-30 16:33:47,318:INFO:choose_better activated
2024-04-30 16:33:47,334:INFO:SubProcess create_model() called ==================================
2024-04-30 16:33:47,334:INFO:Initializing create_model()
2024-04-30 16:33:47,334:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=GradientBoostingRegressor(random_state=7875), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:33:47,334:INFO:Checking exceptions
2024-04-30 16:33:47,334:INFO:Importing libraries
2024-04-30 16:33:47,334:INFO:Copying training dataset
2024-04-30 16:33:47,356:INFO:Defining folds
2024-04-30 16:33:47,356:INFO:Declaring metric variables
2024-04-30 16:33:47,356:INFO:Importing untrained model
2024-04-30 16:33:47,356:INFO:Declaring custom model
2024-04-30 16:33:47,356:INFO:Gradient Boosting Regressor Imported successfully
2024-04-30 16:33:47,356:INFO:Starting cross validation
2024-04-30 16:33:47,356:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:33:48,153:INFO:Calculating mean and std
2024-04-30 16:33:48,153:INFO:Creating metrics dataframe
2024-04-30 16:33:48,169:INFO:Finalizing model
2024-04-30 16:33:48,435:INFO:Uploading results into container
2024-04-30 16:33:48,435:INFO:Uploading model into container now
2024-04-30 16:33:48,435:INFO:_master_model_container: 22
2024-04-30 16:33:48,435:INFO:_display_container: 5
2024-04-30 16:33:48,435:INFO:GradientBoostingRegressor(random_state=7875)
2024-04-30 16:33:48,435:INFO:create_model() successfully completed......................................
2024-04-30 16:33:48,552:INFO:SubProcess create_model() end ==================================
2024-04-30 16:33:48,552:INFO:GradientBoostingRegressor(random_state=7875) result for R2 is 0.9589
2024-04-30 16:33:48,552:INFO:GradientBoostingRegressor(learning_rate=0.15, max_depth=1, max_features=1.0,
                          min_impurity_decrease=0.05, min_samples_leaf=5,
                          min_samples_split=5, n_estimators=280,
                          random_state=7875, subsample=0.4) result for R2 is 0.9519
2024-04-30 16:33:48,552:INFO:GradientBoostingRegressor(random_state=7875) is best model
2024-04-30 16:33:48,552:INFO:choose_better completed
2024-04-30 16:33:48,552:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-30 16:33:48,579:INFO:_master_model_container: 22
2024-04-30 16:33:48,579:INFO:_display_container: 4
2024-04-30 16:33:48,580:INFO:GradientBoostingRegressor(random_state=7875)
2024-04-30 16:33:48,580:INFO:tune_model() successfully completed......................................
2024-04-30 16:44:50,248:INFO:Initializing tune_model()
2024-04-30 16:44:50,248:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=GradientBoostingRegressor(random_state=7875), fold=None, round=4, n_iter=100, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-30 16:44:50,248:INFO:Checking exceptions
2024-04-30 16:44:50,272:INFO:Copying training dataset
2024-04-30 16:44:50,282:INFO:Checking base model
2024-04-30 16:44:50,282:INFO:Base model : Gradient Boosting Regressor
2024-04-30 16:44:50,282:INFO:Declaring metric variables
2024-04-30 16:44:50,300:INFO:Defining Hyperparameters
2024-04-30 16:44:50,441:INFO:Tuning with n_jobs=-1
2024-04-30 16:44:50,441:INFO:Initializing RandomizedSearchCV
2024-04-30 16:46:10,794:INFO:best_params: {'actual_estimator__subsample': 0.3, 'actual_estimator__n_estimators': 200, 'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 1, 'actual_estimator__min_impurity_decrease': 0.0001, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 4, 'actual_estimator__learning_rate': 0.1}
2024-04-30 16:46:10,794:INFO:Hyperparameter search completed
2024-04-30 16:46:10,794:INFO:SubProcess create_model() called ==================================
2024-04-30 16:46:10,809:INFO:Initializing create_model()
2024-04-30 16:46:10,809:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=GradientBoostingRegressor(random_state=7875), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D73C6D10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.3, 'n_estimators': 200, 'min_samples_split': 10, 'min_samples_leaf': 1, 'min_impurity_decrease': 0.0001, 'max_features': 1.0, 'max_depth': 4, 'learning_rate': 0.1})
2024-04-30 16:46:10,810:INFO:Checking exceptions
2024-04-30 16:46:10,810:INFO:Importing libraries
2024-04-30 16:46:10,810:INFO:Copying training dataset
2024-04-30 16:46:10,834:INFO:Defining folds
2024-04-30 16:46:10,834:INFO:Declaring metric variables
2024-04-30 16:46:10,837:INFO:Importing untrained model
2024-04-30 16:46:10,837:INFO:Declaring custom model
2024-04-30 16:46:10,840:INFO:Gradient Boosting Regressor Imported successfully
2024-04-30 16:46:10,848:INFO:Starting cross validation
2024-04-30 16:46:10,849:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:46:11,861:INFO:Calculating mean and std
2024-04-30 16:46:11,861:INFO:Creating metrics dataframe
2024-04-30 16:46:11,861:INFO:Finalizing model
2024-04-30 16:46:12,193:INFO:Uploading results into container
2024-04-30 16:46:12,193:INFO:Uploading model into container now
2024-04-30 16:46:12,193:INFO:_master_model_container: 23
2024-04-30 16:46:12,193:INFO:_display_container: 5
2024-04-30 16:46:12,193:INFO:GradientBoostingRegressor(max_depth=4, max_features=1.0,
                          min_impurity_decrease=0.0001, min_samples_split=10,
                          n_estimators=200, random_state=7875, subsample=0.3)
2024-04-30 16:46:12,193:INFO:create_model() successfully completed......................................
2024-04-30 16:46:12,340:INFO:SubProcess create_model() end ==================================
2024-04-30 16:46:12,340:INFO:choose_better activated
2024-04-30 16:46:12,340:INFO:SubProcess create_model() called ==================================
2024-04-30 16:46:12,340:INFO:Initializing create_model()
2024-04-30 16:46:12,340:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=GradientBoostingRegressor(random_state=7875), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:46:12,340:INFO:Checking exceptions
2024-04-30 16:46:12,340:INFO:Importing libraries
2024-04-30 16:46:12,340:INFO:Copying training dataset
2024-04-30 16:46:12,366:INFO:Defining folds
2024-04-30 16:46:12,366:INFO:Declaring metric variables
2024-04-30 16:46:12,366:INFO:Importing untrained model
2024-04-30 16:46:12,366:INFO:Declaring custom model
2024-04-30 16:46:12,378:INFO:Gradient Boosting Regressor Imported successfully
2024-04-30 16:46:12,378:INFO:Starting cross validation
2024-04-30 16:46:12,379:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:46:13,163:INFO:Calculating mean and std
2024-04-30 16:46:13,163:INFO:Creating metrics dataframe
2024-04-30 16:46:13,163:INFO:Finalizing model
2024-04-30 16:46:13,446:INFO:Uploading results into container
2024-04-30 16:46:13,446:INFO:Uploading model into container now
2024-04-30 16:46:13,446:INFO:_master_model_container: 24
2024-04-30 16:46:13,446:INFO:_display_container: 6
2024-04-30 16:46:13,446:INFO:GradientBoostingRegressor(random_state=7875)
2024-04-30 16:46:13,446:INFO:create_model() successfully completed......................................
2024-04-30 16:46:13,580:INFO:SubProcess create_model() end ==================================
2024-04-30 16:46:13,580:INFO:GradientBoostingRegressor(random_state=7875) result for RMSE is 187.95
2024-04-30 16:46:13,580:INFO:GradientBoostingRegressor(max_depth=4, max_features=1.0,
                          min_impurity_decrease=0.0001, min_samples_split=10,
                          n_estimators=200, random_state=7875, subsample=0.3) result for RMSE is 187.805
2024-04-30 16:46:13,580:INFO:GradientBoostingRegressor(max_depth=4, max_features=1.0,
                          min_impurity_decrease=0.0001, min_samples_split=10,
                          n_estimators=200, random_state=7875, subsample=0.3) is best model
2024-04-30 16:46:13,580:INFO:choose_better completed
2024-04-30 16:46:13,597:INFO:_master_model_container: 24
2024-04-30 16:46:13,597:INFO:_display_container: 5
2024-04-30 16:46:13,598:INFO:GradientBoostingRegressor(max_depth=4, max_features=1.0,
                          min_impurity_decrease=0.0001, min_samples_split=10,
                          n_estimators=200, random_state=7875, subsample=0.3)
2024-04-30 16:46:13,598:INFO:tune_model() successfully completed......................................
2024-04-30 16:47:30,280:INFO:Initializing save_model()
2024-04-30 16:47:30,280:INFO:save_model(model=GradientBoostingRegressor(max_depth=4, max_features=1.0,
                          min_impurity_decrease=0.0001, min_samples_split=10,
                          n_estimators=200, random_state=7875, subsample=0.3), model_name=./grandeur_gbr, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\1104-27\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering',
                                             'steering_remote', 'leahter_seat',
                                             'driver_elec_seat',
                                             'pass_elec_seat', 'back_elec_seat',
                                             'driver_memory_seat',
                                             'massage_seat',
                                             'supervision_cluster',
                                             'paddle_shift', 'hi_pass',
                                             'pass_memory_seat',
                                             'back_heated_seat', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2024-04-30 16:47:30,280:INFO:Adding model into prep_pipe
2024-04-30 16:47:30,294:INFO:./grandeur_gbr.pkl saved in current working directory
2024-04-30 16:47:30,299:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering',
                                             'steering_remote', 'leahter_seat',
                                             'driver...
                                             'pass_memory_seat',
                                             'back_heated_seat', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model',
                 GradientBoostingRegressor(max_depth=4, max_features=1.0,
                                           min_impurity_decrease=0.0001,
                                           min_samples_split=10,
                                           n_estimators=200, random_state=7875,
                                           subsample=0.3))])
2024-04-30 16:47:30,299:INFO:save_model() successfully completed......................................
2024-04-30 16:48:42,185:INFO:Initializing load_model()
2024-04-30 16:48:42,185:INFO:load_model(model_name=./grandeur_gbr.pkl, platform=None, authentication=None, verbose=True)
2024-04-30 16:48:50,028:INFO:Initializing load_model()
2024-04-30 16:48:50,028:INFO:load_model(model_name=./grandeur_gbr, platform=None, authentication=None, verbose=True)
2024-04-30 16:51:23,007:INFO:Initializing compare_models()
2024-04-30 16:51:23,007:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-04-30 16:51:23,007:INFO:Checking exceptions
2024-04-30 16:51:23,017:INFO:Preparing display monitor
2024-04-30 16:51:23,039:INFO:Initializing Linear Regression
2024-04-30 16:51:23,039:INFO:Total runtime is 0.0 minutes
2024-04-30 16:51:23,039:INFO:SubProcess create_model() called ==================================
2024-04-30 16:51:23,039:INFO:Initializing create_model()
2024-04-30 16:51:23,039:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D8D6AE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:51:23,039:INFO:Checking exceptions
2024-04-30 16:51:23,039:INFO:Importing libraries
2024-04-30 16:51:23,039:INFO:Copying training dataset
2024-04-30 16:51:23,077:INFO:Defining folds
2024-04-30 16:51:23,077:INFO:Declaring metric variables
2024-04-30 16:51:23,079:INFO:Importing untrained model
2024-04-30 16:51:23,083:INFO:Linear Regression Imported successfully
2024-04-30 16:51:23,089:INFO:Starting cross validation
2024-04-30 16:51:23,090:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:51:30,765:INFO:Calculating mean and std
2024-04-30 16:51:30,765:INFO:Creating metrics dataframe
2024-04-30 16:51:30,781:INFO:Uploading results into container
2024-04-30 16:51:30,782:INFO:Uploading model into container now
2024-04-30 16:51:30,782:INFO:_master_model_container: 25
2024-04-30 16:51:30,782:INFO:_display_container: 6
2024-04-30 16:51:30,782:INFO:LinearRegression(n_jobs=-1)
2024-04-30 16:51:30,782:INFO:create_model() successfully completed......................................
2024-04-30 16:51:30,948:INFO:SubProcess create_model() end ==================================
2024-04-30 16:51:30,948:INFO:Creating metrics dataframe
2024-04-30 16:51:30,950:INFO:Initializing Lasso Regression
2024-04-30 16:51:30,950:INFO:Total runtime is 0.13184901078542074 minutes
2024-04-30 16:51:30,950:INFO:SubProcess create_model() called ==================================
2024-04-30 16:51:30,950:INFO:Initializing create_model()
2024-04-30 16:51:30,950:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D8D6AE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:51:30,950:INFO:Checking exceptions
2024-04-30 16:51:30,950:INFO:Importing libraries
2024-04-30 16:51:30,950:INFO:Copying training dataset
2024-04-30 16:51:30,985:INFO:Defining folds
2024-04-30 16:51:30,985:INFO:Declaring metric variables
2024-04-30 16:51:30,989:INFO:Importing untrained model
2024-04-30 16:51:30,991:INFO:Lasso Regression Imported successfully
2024-04-30 16:51:30,998:INFO:Starting cross validation
2024-04-30 16:51:30,999:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:51:31,165:INFO:Calculating mean and std
2024-04-30 16:51:31,180:INFO:Creating metrics dataframe
2024-04-30 16:51:31,183:INFO:Uploading results into container
2024-04-30 16:51:31,183:INFO:Uploading model into container now
2024-04-30 16:51:31,183:INFO:_master_model_container: 26
2024-04-30 16:51:31,183:INFO:_display_container: 6
2024-04-30 16:51:31,183:INFO:Lasso(random_state=7875)
2024-04-30 16:51:31,183:INFO:create_model() successfully completed......................................
2024-04-30 16:51:31,333:INFO:SubProcess create_model() end ==================================
2024-04-30 16:51:31,333:INFO:Creating metrics dataframe
2024-04-30 16:51:31,348:INFO:Initializing Ridge Regression
2024-04-30 16:51:31,348:INFO:Total runtime is 0.13847390015920005 minutes
2024-04-30 16:51:31,353:INFO:SubProcess create_model() called ==================================
2024-04-30 16:51:31,353:INFO:Initializing create_model()
2024-04-30 16:51:31,353:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D8D6AE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:51:31,353:INFO:Checking exceptions
2024-04-30 16:51:31,353:INFO:Importing libraries
2024-04-30 16:51:31,353:INFO:Copying training dataset
2024-04-30 16:51:31,376:INFO:Defining folds
2024-04-30 16:51:31,376:INFO:Declaring metric variables
2024-04-30 16:51:31,382:INFO:Importing untrained model
2024-04-30 16:51:31,384:INFO:Ridge Regression Imported successfully
2024-04-30 16:51:31,384:INFO:Starting cross validation
2024-04-30 16:51:31,384:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:51:31,532:INFO:Calculating mean and std
2024-04-30 16:51:31,547:INFO:Creating metrics dataframe
2024-04-30 16:51:31,549:INFO:Uploading results into container
2024-04-30 16:51:31,549:INFO:Uploading model into container now
2024-04-30 16:51:31,549:INFO:_master_model_container: 27
2024-04-30 16:51:31,549:INFO:_display_container: 6
2024-04-30 16:51:31,549:INFO:Ridge(random_state=7875)
2024-04-30 16:51:31,549:INFO:create_model() successfully completed......................................
2024-04-30 16:51:31,699:INFO:SubProcess create_model() end ==================================
2024-04-30 16:51:31,699:INFO:Creating metrics dataframe
2024-04-30 16:51:31,722:INFO:Initializing Elastic Net
2024-04-30 16:51:31,722:INFO:Total runtime is 0.14470911820729576 minutes
2024-04-30 16:51:31,723:INFO:SubProcess create_model() called ==================================
2024-04-30 16:51:31,723:INFO:Initializing create_model()
2024-04-30 16:51:31,723:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D8D6AE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:51:31,723:INFO:Checking exceptions
2024-04-30 16:51:31,723:INFO:Importing libraries
2024-04-30 16:51:31,723:INFO:Copying training dataset
2024-04-30 16:51:31,748:INFO:Defining folds
2024-04-30 16:51:31,748:INFO:Declaring metric variables
2024-04-30 16:51:31,748:INFO:Importing untrained model
2024-04-30 16:51:31,748:INFO:Elastic Net Imported successfully
2024-04-30 16:51:31,748:INFO:Starting cross validation
2024-04-30 16:51:31,765:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:51:31,915:INFO:Calculating mean and std
2024-04-30 16:51:31,932:INFO:Creating metrics dataframe
2024-04-30 16:51:31,933:INFO:Uploading results into container
2024-04-30 16:51:31,933:INFO:Uploading model into container now
2024-04-30 16:51:31,933:INFO:_master_model_container: 28
2024-04-30 16:51:31,933:INFO:_display_container: 6
2024-04-30 16:51:31,933:INFO:ElasticNet(random_state=7875)
2024-04-30 16:51:31,933:INFO:create_model() successfully completed......................................
2024-04-30 16:51:32,133:INFO:SubProcess create_model() end ==================================
2024-04-30 16:51:32,133:INFO:Creating metrics dataframe
2024-04-30 16:51:32,141:INFO:Initializing Least Angle Regression
2024-04-30 16:51:32,141:INFO:Total runtime is 0.15168937047322595 minutes
2024-04-30 16:51:32,144:INFO:SubProcess create_model() called ==================================
2024-04-30 16:51:32,145:INFO:Initializing create_model()
2024-04-30 16:51:32,145:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D8D6AE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:51:32,145:INFO:Checking exceptions
2024-04-30 16:51:32,145:INFO:Importing libraries
2024-04-30 16:51:32,145:INFO:Copying training dataset
2024-04-30 16:51:32,174:INFO:Defining folds
2024-04-30 16:51:32,174:INFO:Declaring metric variables
2024-04-30 16:51:32,176:INFO:Importing untrained model
2024-04-30 16:51:32,187:INFO:Least Angle Regression Imported successfully
2024-04-30 16:51:32,190:INFO:Starting cross validation
2024-04-30 16:51:32,197:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:51:32,450:INFO:Calculating mean and std
2024-04-30 16:51:32,451:INFO:Creating metrics dataframe
2024-04-30 16:51:32,453:INFO:Uploading results into container
2024-04-30 16:51:32,454:INFO:Uploading model into container now
2024-04-30 16:51:32,454:INFO:_master_model_container: 29
2024-04-30 16:51:32,455:INFO:_display_container: 6
2024-04-30 16:51:32,455:INFO:Lars(random_state=7875)
2024-04-30 16:51:32,456:INFO:create_model() successfully completed......................................
2024-04-30 16:51:32,621:INFO:SubProcess create_model() end ==================================
2024-04-30 16:51:32,621:INFO:Creating metrics dataframe
2024-04-30 16:51:32,632:INFO:Initializing Lasso Least Angle Regression
2024-04-30 16:51:32,632:INFO:Total runtime is 0.15987439552942914 minutes
2024-04-30 16:51:32,636:INFO:SubProcess create_model() called ==================================
2024-04-30 16:51:32,637:INFO:Initializing create_model()
2024-04-30 16:51:32,637:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D8D6AE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:51:32,637:INFO:Checking exceptions
2024-04-30 16:51:32,637:INFO:Importing libraries
2024-04-30 16:51:32,637:INFO:Copying training dataset
2024-04-30 16:51:32,667:INFO:Defining folds
2024-04-30 16:51:32,667:INFO:Declaring metric variables
2024-04-30 16:51:32,670:INFO:Importing untrained model
2024-04-30 16:51:32,674:INFO:Lasso Least Angle Regression Imported successfully
2024-04-30 16:51:32,679:INFO:Starting cross validation
2024-04-30 16:51:32,680:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:51:32,859:INFO:Calculating mean and std
2024-04-30 16:51:32,861:INFO:Creating metrics dataframe
2024-04-30 16:51:32,862:INFO:Uploading results into container
2024-04-30 16:51:32,862:INFO:Uploading model into container now
2024-04-30 16:51:32,863:INFO:_master_model_container: 30
2024-04-30 16:51:32,863:INFO:_display_container: 6
2024-04-30 16:51:32,863:INFO:LassoLars(random_state=7875)
2024-04-30 16:51:32,863:INFO:create_model() successfully completed......................................
2024-04-30 16:51:33,000:INFO:SubProcess create_model() end ==================================
2024-04-30 16:51:33,000:INFO:Creating metrics dataframe
2024-04-30 16:51:33,025:INFO:Initializing Orthogonal Matching Pursuit
2024-04-30 16:51:33,025:INFO:Total runtime is 0.16642758846282962 minutes
2024-04-30 16:51:33,029:INFO:SubProcess create_model() called ==================================
2024-04-30 16:51:33,029:INFO:Initializing create_model()
2024-04-30 16:51:33,029:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D8D6AE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:51:33,029:INFO:Checking exceptions
2024-04-30 16:51:33,030:INFO:Importing libraries
2024-04-30 16:51:33,030:INFO:Copying training dataset
2024-04-30 16:51:33,055:INFO:Defining folds
2024-04-30 16:51:33,055:INFO:Declaring metric variables
2024-04-30 16:51:33,058:INFO:Importing untrained model
2024-04-30 16:51:33,061:INFO:Orthogonal Matching Pursuit Imported successfully
2024-04-30 16:51:33,067:INFO:Starting cross validation
2024-04-30 16:51:33,068:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:51:33,217:INFO:Calculating mean and std
2024-04-30 16:51:33,218:INFO:Creating metrics dataframe
2024-04-30 16:51:33,220:INFO:Uploading results into container
2024-04-30 16:51:33,220:INFO:Uploading model into container now
2024-04-30 16:51:33,221:INFO:_master_model_container: 31
2024-04-30 16:51:33,221:INFO:_display_container: 6
2024-04-30 16:51:33,221:INFO:OrthogonalMatchingPursuit()
2024-04-30 16:51:33,221:INFO:create_model() successfully completed......................................
2024-04-30 16:51:33,367:INFO:SubProcess create_model() end ==================================
2024-04-30 16:51:33,368:INFO:Creating metrics dataframe
2024-04-30 16:51:33,378:INFO:Initializing Bayesian Ridge
2024-04-30 16:51:33,378:INFO:Total runtime is 0.17231007417043054 minutes
2024-04-30 16:51:33,382:INFO:SubProcess create_model() called ==================================
2024-04-30 16:51:33,382:INFO:Initializing create_model()
2024-04-30 16:51:33,382:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D8D6AE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:51:33,382:INFO:Checking exceptions
2024-04-30 16:51:33,382:INFO:Importing libraries
2024-04-30 16:51:33,382:INFO:Copying training dataset
2024-04-30 16:51:33,407:INFO:Defining folds
2024-04-30 16:51:33,407:INFO:Declaring metric variables
2024-04-30 16:51:33,410:INFO:Importing untrained model
2024-04-30 16:51:33,414:INFO:Bayesian Ridge Imported successfully
2024-04-30 16:51:33,420:INFO:Starting cross validation
2024-04-30 16:51:33,422:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:51:33,566:INFO:Calculating mean and std
2024-04-30 16:51:33,566:INFO:Creating metrics dataframe
2024-04-30 16:51:33,566:INFO:Uploading results into container
2024-04-30 16:51:33,566:INFO:Uploading model into container now
2024-04-30 16:51:33,566:INFO:_master_model_container: 32
2024-04-30 16:51:33,581:INFO:_display_container: 6
2024-04-30 16:51:33,581:INFO:BayesianRidge()
2024-04-30 16:51:33,581:INFO:create_model() successfully completed......................................
2024-04-30 16:51:33,733:INFO:SubProcess create_model() end ==================================
2024-04-30 16:51:33,733:INFO:Creating metrics dataframe
2024-04-30 16:51:33,733:INFO:Initializing Passive Aggressive Regressor
2024-04-30 16:51:33,733:INFO:Total runtime is 0.17822254498799645 minutes
2024-04-30 16:51:33,748:INFO:SubProcess create_model() called ==================================
2024-04-30 16:51:33,748:INFO:Initializing create_model()
2024-04-30 16:51:33,748:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D8D6AE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:51:33,749:INFO:Checking exceptions
2024-04-30 16:51:33,749:INFO:Importing libraries
2024-04-30 16:51:33,749:INFO:Copying training dataset
2024-04-30 16:51:33,773:INFO:Defining folds
2024-04-30 16:51:33,773:INFO:Declaring metric variables
2024-04-30 16:51:33,776:INFO:Importing untrained model
2024-04-30 16:51:33,779:INFO:Passive Aggressive Regressor Imported successfully
2024-04-30 16:51:33,785:INFO:Starting cross validation
2024-04-30 16:51:33,786:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:51:33,933:INFO:Calculating mean and std
2024-04-30 16:51:33,933:INFO:Creating metrics dataframe
2024-04-30 16:51:33,933:INFO:Uploading results into container
2024-04-30 16:51:33,933:INFO:Uploading model into container now
2024-04-30 16:51:33,933:INFO:_master_model_container: 33
2024-04-30 16:51:33,933:INFO:_display_container: 6
2024-04-30 16:51:33,933:INFO:PassiveAggressiveRegressor(random_state=7875)
2024-04-30 16:51:33,933:INFO:create_model() successfully completed......................................
2024-04-30 16:51:34,083:INFO:SubProcess create_model() end ==================================
2024-04-30 16:51:34,083:INFO:Creating metrics dataframe
2024-04-30 16:51:34,100:INFO:Initializing Huber Regressor
2024-04-30 16:51:34,100:INFO:Total runtime is 0.18433849811553957 minutes
2024-04-30 16:51:34,100:INFO:SubProcess create_model() called ==================================
2024-04-30 16:51:34,100:INFO:Initializing create_model()
2024-04-30 16:51:34,100:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D8D6AE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:51:34,100:INFO:Checking exceptions
2024-04-30 16:51:34,100:INFO:Importing libraries
2024-04-30 16:51:34,100:INFO:Copying training dataset
2024-04-30 16:51:34,133:INFO:Defining folds
2024-04-30 16:51:34,133:INFO:Declaring metric variables
2024-04-30 16:51:34,133:INFO:Importing untrained model
2024-04-30 16:51:34,133:INFO:Huber Regressor Imported successfully
2024-04-30 16:51:34,133:INFO:Starting cross validation
2024-04-30 16:51:34,133:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:51:34,334:INFO:Calculating mean and std
2024-04-30 16:51:34,334:INFO:Creating metrics dataframe
2024-04-30 16:51:34,352:INFO:Uploading results into container
2024-04-30 16:51:34,352:INFO:Uploading model into container now
2024-04-30 16:51:34,353:INFO:_master_model_container: 34
2024-04-30 16:51:34,353:INFO:_display_container: 6
2024-04-30 16:51:34,353:INFO:HuberRegressor()
2024-04-30 16:51:34,353:INFO:create_model() successfully completed......................................
2024-04-30 16:51:34,500:INFO:SubProcess create_model() end ==================================
2024-04-30 16:51:34,500:INFO:Creating metrics dataframe
2024-04-30 16:51:34,518:INFO:Initializing K Neighbors Regressor
2024-04-30 16:51:34,518:INFO:Total runtime is 0.19130498170852664 minutes
2024-04-30 16:51:34,522:INFO:SubProcess create_model() called ==================================
2024-04-30 16:51:34,522:INFO:Initializing create_model()
2024-04-30 16:51:34,523:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D8D6AE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:51:34,523:INFO:Checking exceptions
2024-04-30 16:51:34,523:INFO:Importing libraries
2024-04-30 16:51:34,523:INFO:Copying training dataset
2024-04-30 16:51:34,545:INFO:Defining folds
2024-04-30 16:51:34,545:INFO:Declaring metric variables
2024-04-30 16:51:34,550:INFO:Importing untrained model
2024-04-30 16:51:34,554:INFO:K Neighbors Regressor Imported successfully
2024-04-30 16:51:34,560:INFO:Starting cross validation
2024-04-30 16:51:34,562:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:51:34,957:INFO:Calculating mean and std
2024-04-30 16:51:34,958:INFO:Creating metrics dataframe
2024-04-30 16:51:34,959:INFO:Uploading results into container
2024-04-30 16:51:34,960:INFO:Uploading model into container now
2024-04-30 16:51:34,960:INFO:_master_model_container: 35
2024-04-30 16:51:34,960:INFO:_display_container: 6
2024-04-30 16:51:34,960:INFO:KNeighborsRegressor(n_jobs=-1)
2024-04-30 16:51:34,960:INFO:create_model() successfully completed......................................
2024-04-30 16:51:35,095:INFO:SubProcess create_model() end ==================================
2024-04-30 16:51:35,095:INFO:Creating metrics dataframe
2024-04-30 16:51:35,111:INFO:Initializing Decision Tree Regressor
2024-04-30 16:51:35,111:INFO:Total runtime is 0.20118888219197595 minutes
2024-04-30 16:51:35,111:INFO:SubProcess create_model() called ==================================
2024-04-30 16:51:35,111:INFO:Initializing create_model()
2024-04-30 16:51:35,111:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D8D6AE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:51:35,111:INFO:Checking exceptions
2024-04-30 16:51:35,111:INFO:Importing libraries
2024-04-30 16:51:35,111:INFO:Copying training dataset
2024-04-30 16:51:35,146:INFO:Defining folds
2024-04-30 16:51:35,146:INFO:Declaring metric variables
2024-04-30 16:51:35,152:INFO:Importing untrained model
2024-04-30 16:51:35,156:INFO:Decision Tree Regressor Imported successfully
2024-04-30 16:51:35,161:INFO:Starting cross validation
2024-04-30 16:51:35,162:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:51:35,334:INFO:Calculating mean and std
2024-04-30 16:51:35,334:INFO:Creating metrics dataframe
2024-04-30 16:51:35,334:INFO:Uploading results into container
2024-04-30 16:51:35,334:INFO:Uploading model into container now
2024-04-30 16:51:35,334:INFO:_master_model_container: 36
2024-04-30 16:51:35,334:INFO:_display_container: 6
2024-04-30 16:51:35,334:INFO:DecisionTreeRegressor(random_state=7875)
2024-04-30 16:51:35,334:INFO:create_model() successfully completed......................................
2024-04-30 16:51:35,490:INFO:SubProcess create_model() end ==================================
2024-04-30 16:51:35,491:INFO:Creating metrics dataframe
2024-04-30 16:51:35,503:INFO:Initializing Random Forest Regressor
2024-04-30 16:51:35,503:INFO:Total runtime is 0.20772984027862554 minutes
2024-04-30 16:51:35,508:INFO:SubProcess create_model() called ==================================
2024-04-30 16:51:35,508:INFO:Initializing create_model()
2024-04-30 16:51:35,508:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D8D6AE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:51:35,508:INFO:Checking exceptions
2024-04-30 16:51:35,508:INFO:Importing libraries
2024-04-30 16:51:35,509:INFO:Copying training dataset
2024-04-30 16:51:35,534:INFO:Defining folds
2024-04-30 16:51:35,534:INFO:Declaring metric variables
2024-04-30 16:51:35,534:INFO:Importing untrained model
2024-04-30 16:51:35,534:INFO:Random Forest Regressor Imported successfully
2024-04-30 16:51:35,534:INFO:Starting cross validation
2024-04-30 16:51:35,534:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:51:38,054:INFO:Calculating mean and std
2024-04-30 16:51:38,055:INFO:Creating metrics dataframe
2024-04-30 16:51:38,056:INFO:Uploading results into container
2024-04-30 16:51:38,057:INFO:Uploading model into container now
2024-04-30 16:51:38,057:INFO:_master_model_container: 37
2024-04-30 16:51:38,057:INFO:_display_container: 6
2024-04-30 16:51:38,058:INFO:RandomForestRegressor(n_jobs=-1, random_state=7875)
2024-04-30 16:51:38,058:INFO:create_model() successfully completed......................................
2024-04-30 16:51:38,210:INFO:SubProcess create_model() end ==================================
2024-04-30 16:51:38,211:INFO:Creating metrics dataframe
2024-04-30 16:51:38,226:INFO:Initializing Extra Trees Regressor
2024-04-30 16:51:38,226:INFO:Total runtime is 0.25310552517573043 minutes
2024-04-30 16:51:38,229:INFO:SubProcess create_model() called ==================================
2024-04-30 16:51:38,229:INFO:Initializing create_model()
2024-04-30 16:51:38,230:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D8D6AE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:51:38,230:INFO:Checking exceptions
2024-04-30 16:51:38,230:INFO:Importing libraries
2024-04-30 16:51:38,230:INFO:Copying training dataset
2024-04-30 16:51:38,256:INFO:Defining folds
2024-04-30 16:51:38,256:INFO:Declaring metric variables
2024-04-30 16:51:38,256:INFO:Importing untrained model
2024-04-30 16:51:38,256:INFO:Extra Trees Regressor Imported successfully
2024-04-30 16:51:38,274:INFO:Starting cross validation
2024-04-30 16:51:38,275:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:51:41,441:INFO:Calculating mean and std
2024-04-30 16:51:41,441:INFO:Creating metrics dataframe
2024-04-30 16:51:41,441:INFO:Uploading results into container
2024-04-30 16:51:41,441:INFO:Uploading model into container now
2024-04-30 16:51:41,441:INFO:_master_model_container: 38
2024-04-30 16:51:41,441:INFO:_display_container: 6
2024-04-30 16:51:41,441:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=7875)
2024-04-30 16:51:41,441:INFO:create_model() successfully completed......................................
2024-04-30 16:51:41,618:INFO:SubProcess create_model() end ==================================
2024-04-30 16:51:41,619:INFO:Creating metrics dataframe
2024-04-30 16:51:41,632:INFO:Initializing AdaBoost Regressor
2024-04-30 16:51:41,632:INFO:Total runtime is 0.3098751266797384 minutes
2024-04-30 16:51:41,633:INFO:SubProcess create_model() called ==================================
2024-04-30 16:51:41,633:INFO:Initializing create_model()
2024-04-30 16:51:41,633:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D8D6AE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:51:41,633:INFO:Checking exceptions
2024-04-30 16:51:41,633:INFO:Importing libraries
2024-04-30 16:51:41,641:INFO:Copying training dataset
2024-04-30 16:51:41,667:INFO:Defining folds
2024-04-30 16:51:41,667:INFO:Declaring metric variables
2024-04-30 16:51:41,670:INFO:Importing untrained model
2024-04-30 16:51:41,675:INFO:AdaBoost Regressor Imported successfully
2024-04-30 16:51:41,677:INFO:Starting cross validation
2024-04-30 16:51:41,677:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:51:42,427:INFO:Calculating mean and std
2024-04-30 16:51:42,428:INFO:Creating metrics dataframe
2024-04-30 16:51:42,430:INFO:Uploading results into container
2024-04-30 16:51:42,430:INFO:Uploading model into container now
2024-04-30 16:51:42,431:INFO:_master_model_container: 39
2024-04-30 16:51:42,431:INFO:_display_container: 6
2024-04-30 16:51:42,431:INFO:AdaBoostRegressor(random_state=7875)
2024-04-30 16:51:42,432:INFO:create_model() successfully completed......................................
2024-04-30 16:51:42,590:INFO:SubProcess create_model() end ==================================
2024-04-30 16:51:42,590:INFO:Creating metrics dataframe
2024-04-30 16:51:42,601:INFO:Initializing Gradient Boosting Regressor
2024-04-30 16:51:42,601:INFO:Total runtime is 0.32603573004404707 minutes
2024-04-30 16:51:42,603:INFO:SubProcess create_model() called ==================================
2024-04-30 16:51:42,604:INFO:Initializing create_model()
2024-04-30 16:51:42,604:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D8D6AE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:51:42,604:INFO:Checking exceptions
2024-04-30 16:51:42,604:INFO:Importing libraries
2024-04-30 16:51:42,604:INFO:Copying training dataset
2024-04-30 16:51:42,625:INFO:Defining folds
2024-04-30 16:51:42,625:INFO:Declaring metric variables
2024-04-30 16:51:42,625:INFO:Importing untrained model
2024-04-30 16:51:42,625:INFO:Gradient Boosting Regressor Imported successfully
2024-04-30 16:51:42,647:INFO:Starting cross validation
2024-04-30 16:51:42,647:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:51:43,517:INFO:Calculating mean and std
2024-04-30 16:51:43,518:INFO:Creating metrics dataframe
2024-04-30 16:51:43,519:INFO:Uploading results into container
2024-04-30 16:51:43,520:INFO:Uploading model into container now
2024-04-30 16:51:43,520:INFO:_master_model_container: 40
2024-04-30 16:51:43,520:INFO:_display_container: 6
2024-04-30 16:51:43,520:INFO:GradientBoostingRegressor(random_state=7875)
2024-04-30 16:51:43,520:INFO:create_model() successfully completed......................................
2024-04-30 16:51:43,685:INFO:SubProcess create_model() end ==================================
2024-04-30 16:51:43,686:INFO:Creating metrics dataframe
2024-04-30 16:51:43,701:INFO:Initializing Extreme Gradient Boosting
2024-04-30 16:51:43,701:INFO:Total runtime is 0.34435646931330366 minutes
2024-04-30 16:51:43,704:INFO:SubProcess create_model() called ==================================
2024-04-30 16:51:43,704:INFO:Initializing create_model()
2024-04-30 16:51:43,704:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D8D6AE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:51:43,704:INFO:Checking exceptions
2024-04-30 16:51:43,705:INFO:Importing libraries
2024-04-30 16:51:43,705:INFO:Copying training dataset
2024-04-30 16:51:43,732:INFO:Defining folds
2024-04-30 16:51:43,733:INFO:Declaring metric variables
2024-04-30 16:51:43,736:INFO:Importing untrained model
2024-04-30 16:51:43,739:INFO:Extreme Gradient Boosting Imported successfully
2024-04-30 16:51:43,746:INFO:Starting cross validation
2024-04-30 16:51:43,747:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:51:44,412:INFO:Calculating mean and std
2024-04-30 16:51:44,414:INFO:Creating metrics dataframe
2024-04-30 16:51:44,416:INFO:Uploading results into container
2024-04-30 16:51:44,417:INFO:Uploading model into container now
2024-04-30 16:51:44,418:INFO:_master_model_container: 41
2024-04-30 16:51:44,418:INFO:_display_container: 6
2024-04-30 16:51:44,419:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=7875, ...)
2024-04-30 16:51:44,420:INFO:create_model() successfully completed......................................
2024-04-30 16:51:44,592:INFO:SubProcess create_model() end ==================================
2024-04-30 16:51:44,592:INFO:Creating metrics dataframe
2024-04-30 16:51:44,607:INFO:Initializing Light Gradient Boosting Machine
2024-04-30 16:51:44,607:INFO:Total runtime is 0.3594669540723165 minutes
2024-04-30 16:51:44,613:INFO:SubProcess create_model() called ==================================
2024-04-30 16:51:44,614:INFO:Initializing create_model()
2024-04-30 16:51:44,614:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D8D6AE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:51:44,614:INFO:Checking exceptions
2024-04-30 16:51:44,614:INFO:Importing libraries
2024-04-30 16:51:44,614:INFO:Copying training dataset
2024-04-30 16:51:44,638:INFO:Defining folds
2024-04-30 16:51:44,638:INFO:Declaring metric variables
2024-04-30 16:51:44,650:INFO:Importing untrained model
2024-04-30 16:51:44,653:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-30 16:51:44,660:INFO:Starting cross validation
2024-04-30 16:51:44,662:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:51:45,630:INFO:Calculating mean and std
2024-04-30 16:51:45,632:INFO:Creating metrics dataframe
2024-04-30 16:51:45,635:INFO:Uploading results into container
2024-04-30 16:51:45,636:INFO:Uploading model into container now
2024-04-30 16:51:45,637:INFO:_master_model_container: 42
2024-04-30 16:51:45,637:INFO:_display_container: 6
2024-04-30 16:51:45,637:INFO:LGBMRegressor(n_jobs=-1, random_state=7875)
2024-04-30 16:51:45,638:INFO:create_model() successfully completed......................................
2024-04-30 16:51:45,827:INFO:SubProcess create_model() end ==================================
2024-04-30 16:51:45,827:INFO:Creating metrics dataframe
2024-04-30 16:51:45,842:INFO:Initializing Dummy Regressor
2024-04-30 16:51:45,843:INFO:Total runtime is 0.38005794286727906 minutes
2024-04-30 16:51:45,845:INFO:SubProcess create_model() called ==================================
2024-04-30 16:51:45,845:INFO:Initializing create_model()
2024-04-30 16:51:45,845:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D8D6AE10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:51:45,845:INFO:Checking exceptions
2024-04-30 16:51:45,845:INFO:Importing libraries
2024-04-30 16:51:45,845:INFO:Copying training dataset
2024-04-30 16:51:45,878:INFO:Defining folds
2024-04-30 16:51:45,878:INFO:Declaring metric variables
2024-04-30 16:51:45,878:INFO:Importing untrained model
2024-04-30 16:51:45,895:INFO:Dummy Regressor Imported successfully
2024-04-30 16:51:45,899:INFO:Starting cross validation
2024-04-30 16:51:45,899:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:51:46,046:INFO:Calculating mean and std
2024-04-30 16:51:46,046:INFO:Creating metrics dataframe
2024-04-30 16:51:46,046:INFO:Uploading results into container
2024-04-30 16:51:46,046:INFO:Uploading model into container now
2024-04-30 16:51:46,046:INFO:_master_model_container: 43
2024-04-30 16:51:46,046:INFO:_display_container: 6
2024-04-30 16:51:46,046:INFO:DummyRegressor()
2024-04-30 16:51:46,046:INFO:create_model() successfully completed......................................
2024-04-30 16:51:46,195:INFO:SubProcess create_model() end ==================================
2024-04-30 16:51:46,195:INFO:Creating metrics dataframe
2024-04-30 16:51:46,232:INFO:Initializing create_model()
2024-04-30 16:51:46,232:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=GradientBoostingRegressor(random_state=7875), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:51:46,232:INFO:Checking exceptions
2024-04-30 16:51:46,234:INFO:Importing libraries
2024-04-30 16:51:46,234:INFO:Copying training dataset
2024-04-30 16:51:46,253:INFO:Defining folds
2024-04-30 16:51:46,253:INFO:Declaring metric variables
2024-04-30 16:51:46,253:INFO:Importing untrained model
2024-04-30 16:51:46,253:INFO:Declaring custom model
2024-04-30 16:51:46,253:INFO:Gradient Boosting Regressor Imported successfully
2024-04-30 16:51:46,253:INFO:Cross validation set to False
2024-04-30 16:51:46,253:INFO:Fitting Model
2024-04-30 16:51:46,541:INFO:GradientBoostingRegressor(random_state=7875)
2024-04-30 16:51:46,541:INFO:create_model() successfully completed......................................
2024-04-30 16:51:46,729:INFO:_master_model_container: 43
2024-04-30 16:51:46,729:INFO:_display_container: 6
2024-04-30 16:51:46,731:INFO:GradientBoostingRegressor(random_state=7875)
2024-04-30 16:51:46,731:INFO:compare_models() successfully completed......................................
2024-04-30 16:51:58,272:INFO:Initializing compare_models()
2024-04-30 16:51:58,273:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-04-30 16:51:58,274:INFO:Checking exceptions
2024-04-30 16:51:58,283:INFO:Preparing display monitor
2024-04-30 16:51:58,307:INFO:Initializing Linear Regression
2024-04-30 16:51:58,307:INFO:Total runtime is 0.00010887384414672851 minutes
2024-04-30 16:51:58,307:INFO:SubProcess create_model() called ==================================
2024-04-30 16:51:58,307:INFO:Initializing create_model()
2024-04-30 16:51:58,307:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D7023210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:51:58,307:INFO:Checking exceptions
2024-04-30 16:51:58,307:INFO:Importing libraries
2024-04-30 16:51:58,307:INFO:Copying training dataset
2024-04-30 16:51:58,324:INFO:Defining folds
2024-04-30 16:51:58,324:INFO:Declaring metric variables
2024-04-30 16:51:58,340:INFO:Importing untrained model
2024-04-30 16:51:58,340:INFO:Linear Regression Imported successfully
2024-04-30 16:51:58,340:INFO:Starting cross validation
2024-04-30 16:51:58,340:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:51:58,491:INFO:Calculating mean and std
2024-04-30 16:51:58,491:INFO:Creating metrics dataframe
2024-04-30 16:51:58,491:INFO:Uploading results into container
2024-04-30 16:51:58,491:INFO:Uploading model into container now
2024-04-30 16:51:58,491:INFO:_master_model_container: 44
2024-04-30 16:51:58,491:INFO:_display_container: 7
2024-04-30 16:51:58,491:INFO:LinearRegression(n_jobs=-1)
2024-04-30 16:51:58,491:INFO:create_model() successfully completed......................................
2024-04-30 16:51:58,641:INFO:SubProcess create_model() end ==================================
2024-04-30 16:51:58,641:INFO:Creating metrics dataframe
2024-04-30 16:51:58,659:INFO:Initializing Lasso Regression
2024-04-30 16:51:58,659:INFO:Total runtime is 0.005971892674763998 minutes
2024-04-30 16:51:58,663:INFO:SubProcess create_model() called ==================================
2024-04-30 16:51:58,663:INFO:Initializing create_model()
2024-04-30 16:51:58,664:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D7023210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:51:58,664:INFO:Checking exceptions
2024-04-30 16:51:58,664:INFO:Importing libraries
2024-04-30 16:51:58,664:INFO:Copying training dataset
2024-04-30 16:51:58,691:INFO:Defining folds
2024-04-30 16:51:58,691:INFO:Declaring metric variables
2024-04-30 16:51:58,691:INFO:Importing untrained model
2024-04-30 16:51:58,691:INFO:Lasso Regression Imported successfully
2024-04-30 16:51:58,691:INFO:Starting cross validation
2024-04-30 16:51:58,691:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:51:58,876:INFO:Calculating mean and std
2024-04-30 16:51:58,876:INFO:Creating metrics dataframe
2024-04-30 16:51:58,876:INFO:Uploading results into container
2024-04-30 16:51:58,876:INFO:Uploading model into container now
2024-04-30 16:51:58,876:INFO:_master_model_container: 45
2024-04-30 16:51:58,876:INFO:_display_container: 7
2024-04-30 16:51:58,876:INFO:Lasso(random_state=7875)
2024-04-30 16:51:58,876:INFO:create_model() successfully completed......................................
2024-04-30 16:51:59,036:INFO:SubProcess create_model() end ==================================
2024-04-30 16:51:59,036:INFO:Creating metrics dataframe
2024-04-30 16:51:59,048:INFO:Initializing Ridge Regression
2024-04-30 16:51:59,049:INFO:Total runtime is 0.012470070521036783 minutes
2024-04-30 16:51:59,054:INFO:SubProcess create_model() called ==================================
2024-04-30 16:51:59,055:INFO:Initializing create_model()
2024-04-30 16:51:59,055:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D7023210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:51:59,055:INFO:Checking exceptions
2024-04-30 16:51:59,055:INFO:Importing libraries
2024-04-30 16:51:59,055:INFO:Copying training dataset
2024-04-30 16:51:59,093:INFO:Defining folds
2024-04-30 16:51:59,093:INFO:Declaring metric variables
2024-04-30 16:51:59,093:INFO:Importing untrained model
2024-04-30 16:51:59,093:INFO:Ridge Regression Imported successfully
2024-04-30 16:51:59,093:INFO:Starting cross validation
2024-04-30 16:51:59,093:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:51:59,249:INFO:Calculating mean and std
2024-04-30 16:51:59,249:INFO:Creating metrics dataframe
2024-04-30 16:51:59,251:INFO:Uploading results into container
2024-04-30 16:51:59,251:INFO:Uploading model into container now
2024-04-30 16:51:59,251:INFO:_master_model_container: 46
2024-04-30 16:51:59,251:INFO:_display_container: 7
2024-04-30 16:51:59,252:INFO:Ridge(random_state=7875)
2024-04-30 16:51:59,252:INFO:create_model() successfully completed......................................
2024-04-30 16:51:59,392:INFO:SubProcess create_model() end ==================================
2024-04-30 16:51:59,392:INFO:Creating metrics dataframe
2024-04-30 16:51:59,408:INFO:Initializing Elastic Net
2024-04-30 16:51:59,408:INFO:Total runtime is 0.018453017870585123 minutes
2024-04-30 16:51:59,408:INFO:SubProcess create_model() called ==================================
2024-04-30 16:51:59,408:INFO:Initializing create_model()
2024-04-30 16:51:59,408:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D7023210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:51:59,408:INFO:Checking exceptions
2024-04-30 16:51:59,408:INFO:Importing libraries
2024-04-30 16:51:59,408:INFO:Copying training dataset
2024-04-30 16:51:59,444:INFO:Defining folds
2024-04-30 16:51:59,445:INFO:Declaring metric variables
2024-04-30 16:51:59,448:INFO:Importing untrained model
2024-04-30 16:51:59,451:INFO:Elastic Net Imported successfully
2024-04-30 16:51:59,457:INFO:Starting cross validation
2024-04-30 16:51:59,458:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:51:59,608:INFO:Calculating mean and std
2024-04-30 16:51:59,608:INFO:Creating metrics dataframe
2024-04-30 16:51:59,608:INFO:Uploading results into container
2024-04-30 16:51:59,608:INFO:Uploading model into container now
2024-04-30 16:51:59,608:INFO:_master_model_container: 47
2024-04-30 16:51:59,608:INFO:_display_container: 7
2024-04-30 16:51:59,608:INFO:ElasticNet(random_state=7875)
2024-04-30 16:51:59,608:INFO:create_model() successfully completed......................................
2024-04-30 16:51:59,759:INFO:SubProcess create_model() end ==================================
2024-04-30 16:51:59,759:INFO:Creating metrics dataframe
2024-04-30 16:51:59,775:INFO:Initializing Least Angle Regression
2024-04-30 16:51:59,775:INFO:Total runtime is 0.024571474393208823 minutes
2024-04-30 16:51:59,775:INFO:SubProcess create_model() called ==================================
2024-04-30 16:51:59,775:INFO:Initializing create_model()
2024-04-30 16:51:59,775:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D7023210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:51:59,775:INFO:Checking exceptions
2024-04-30 16:51:59,775:INFO:Importing libraries
2024-04-30 16:51:59,775:INFO:Copying training dataset
2024-04-30 16:51:59,808:INFO:Defining folds
2024-04-30 16:51:59,808:INFO:Declaring metric variables
2024-04-30 16:51:59,808:INFO:Importing untrained model
2024-04-30 16:51:59,808:INFO:Least Angle Regression Imported successfully
2024-04-30 16:51:59,828:INFO:Starting cross validation
2024-04-30 16:51:59,829:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:00,011:INFO:Calculating mean and std
2024-04-30 16:52:00,011:INFO:Creating metrics dataframe
2024-04-30 16:52:00,011:INFO:Uploading results into container
2024-04-30 16:52:00,011:INFO:Uploading model into container now
2024-04-30 16:52:00,011:INFO:_master_model_container: 48
2024-04-30 16:52:00,011:INFO:_display_container: 7
2024-04-30 16:52:00,011:INFO:Lars(random_state=7875)
2024-04-30 16:52:00,011:INFO:create_model() successfully completed......................................
2024-04-30 16:52:00,160:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:00,160:INFO:Creating metrics dataframe
2024-04-30 16:52:00,179:INFO:Initializing Lasso Least Angle Regression
2024-04-30 16:52:00,179:INFO:Total runtime is 0.03130279382069906 minutes
2024-04-30 16:52:00,179:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:00,179:INFO:Initializing create_model()
2024-04-30 16:52:00,179:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D7023210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:00,179:INFO:Checking exceptions
2024-04-30 16:52:00,179:INFO:Importing libraries
2024-04-30 16:52:00,179:INFO:Copying training dataset
2024-04-30 16:52:00,211:INFO:Defining folds
2024-04-30 16:52:00,211:INFO:Declaring metric variables
2024-04-30 16:52:00,214:INFO:Importing untrained model
2024-04-30 16:52:00,218:INFO:Lasso Least Angle Regression Imported successfully
2024-04-30 16:52:00,223:INFO:Starting cross validation
2024-04-30 16:52:00,224:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:00,392:INFO:Calculating mean and std
2024-04-30 16:52:00,392:INFO:Creating metrics dataframe
2024-04-30 16:52:00,392:INFO:Uploading results into container
2024-04-30 16:52:00,392:INFO:Uploading model into container now
2024-04-30 16:52:00,392:INFO:_master_model_container: 49
2024-04-30 16:52:00,392:INFO:_display_container: 7
2024-04-30 16:52:00,392:INFO:LassoLars(random_state=7875)
2024-04-30 16:52:00,392:INFO:create_model() successfully completed......................................
2024-04-30 16:52:00,548:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:00,548:INFO:Creating metrics dataframe
2024-04-30 16:52:00,560:INFO:Initializing Orthogonal Matching Pursuit
2024-04-30 16:52:00,560:INFO:Total runtime is 0.037647648652394616 minutes
2024-04-30 16:52:00,560:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:00,560:INFO:Initializing create_model()
2024-04-30 16:52:00,560:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D7023210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:00,560:INFO:Checking exceptions
2024-04-30 16:52:00,560:INFO:Importing libraries
2024-04-30 16:52:00,560:INFO:Copying training dataset
2024-04-30 16:52:00,587:INFO:Defining folds
2024-04-30 16:52:00,588:INFO:Declaring metric variables
2024-04-30 16:52:00,589:INFO:Importing untrained model
2024-04-30 16:52:00,595:INFO:Orthogonal Matching Pursuit Imported successfully
2024-04-30 16:52:00,597:INFO:Starting cross validation
2024-04-30 16:52:00,597:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:00,757:INFO:Calculating mean and std
2024-04-30 16:52:00,758:INFO:Creating metrics dataframe
2024-04-30 16:52:00,759:INFO:Uploading results into container
2024-04-30 16:52:00,760:INFO:Uploading model into container now
2024-04-30 16:52:00,760:INFO:_master_model_container: 50
2024-04-30 16:52:00,761:INFO:_display_container: 7
2024-04-30 16:52:00,761:INFO:OrthogonalMatchingPursuit()
2024-04-30 16:52:00,761:INFO:create_model() successfully completed......................................
2024-04-30 16:52:00,910:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:00,910:INFO:Creating metrics dataframe
2024-04-30 16:52:00,910:INFO:Initializing Bayesian Ridge
2024-04-30 16:52:00,910:INFO:Total runtime is 0.043478190898895264 minutes
2024-04-30 16:52:00,927:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:00,928:INFO:Initializing create_model()
2024-04-30 16:52:00,928:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D7023210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:00,928:INFO:Checking exceptions
2024-04-30 16:52:00,928:INFO:Importing libraries
2024-04-30 16:52:00,928:INFO:Copying training dataset
2024-04-30 16:52:00,952:INFO:Defining folds
2024-04-30 16:52:00,952:INFO:Declaring metric variables
2024-04-30 16:52:00,956:INFO:Importing untrained model
2024-04-30 16:52:00,959:INFO:Bayesian Ridge Imported successfully
2024-04-30 16:52:00,965:INFO:Starting cross validation
2024-04-30 16:52:00,965:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:01,144:INFO:Calculating mean and std
2024-04-30 16:52:01,145:INFO:Creating metrics dataframe
2024-04-30 16:52:01,147:INFO:Uploading results into container
2024-04-30 16:52:01,147:INFO:Uploading model into container now
2024-04-30 16:52:01,148:INFO:_master_model_container: 51
2024-04-30 16:52:01,148:INFO:_display_container: 7
2024-04-30 16:52:01,148:INFO:BayesianRidge()
2024-04-30 16:52:01,148:INFO:create_model() successfully completed......................................
2024-04-30 16:52:01,298:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:01,298:INFO:Creating metrics dataframe
2024-04-30 16:52:01,310:INFO:Initializing Passive Aggressive Regressor
2024-04-30 16:52:01,310:INFO:Total runtime is 0.05015052556991577 minutes
2024-04-30 16:52:01,310:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:01,310:INFO:Initializing create_model()
2024-04-30 16:52:01,310:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D7023210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:01,310:INFO:Checking exceptions
2024-04-30 16:52:01,310:INFO:Importing libraries
2024-04-30 16:52:01,310:INFO:Copying training dataset
2024-04-30 16:52:01,339:INFO:Defining folds
2024-04-30 16:52:01,340:INFO:Declaring metric variables
2024-04-30 16:52:01,343:INFO:Importing untrained model
2024-04-30 16:52:01,347:INFO:Passive Aggressive Regressor Imported successfully
2024-04-30 16:52:01,354:INFO:Starting cross validation
2024-04-30 16:52:01,355:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:01,494:INFO:Calculating mean and std
2024-04-30 16:52:01,494:INFO:Creating metrics dataframe
2024-04-30 16:52:01,494:INFO:Uploading results into container
2024-04-30 16:52:01,494:INFO:Uploading model into container now
2024-04-30 16:52:01,494:INFO:_master_model_container: 52
2024-04-30 16:52:01,494:INFO:_display_container: 7
2024-04-30 16:52:01,494:INFO:PassiveAggressiveRegressor(random_state=7875)
2024-04-30 16:52:01,510:INFO:create_model() successfully completed......................................
2024-04-30 16:52:01,661:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:01,661:INFO:Creating metrics dataframe
2024-04-30 16:52:01,661:INFO:Initializing Huber Regressor
2024-04-30 16:52:01,661:INFO:Total runtime is 0.05599474112192789 minutes
2024-04-30 16:52:01,677:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:01,677:INFO:Initializing create_model()
2024-04-30 16:52:01,677:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D7023210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:01,677:INFO:Checking exceptions
2024-04-30 16:52:01,677:INFO:Importing libraries
2024-04-30 16:52:01,677:INFO:Copying training dataset
2024-04-30 16:52:01,700:INFO:Defining folds
2024-04-30 16:52:01,700:INFO:Declaring metric variables
2024-04-30 16:52:01,700:INFO:Importing untrained model
2024-04-30 16:52:01,700:INFO:Huber Regressor Imported successfully
2024-04-30 16:52:01,716:INFO:Starting cross validation
2024-04-30 16:52:01,716:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:01,894:INFO:Calculating mean and std
2024-04-30 16:52:01,894:INFO:Creating metrics dataframe
2024-04-30 16:52:01,894:INFO:Uploading results into container
2024-04-30 16:52:01,894:INFO:Uploading model into container now
2024-04-30 16:52:01,894:INFO:_master_model_container: 53
2024-04-30 16:52:01,894:INFO:_display_container: 7
2024-04-30 16:52:01,894:INFO:HuberRegressor()
2024-04-30 16:52:01,894:INFO:create_model() successfully completed......................................
2024-04-30 16:52:02,053:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:02,054:INFO:Creating metrics dataframe
2024-04-30 16:52:02,063:INFO:Initializing K Neighbors Regressor
2024-04-30 16:52:02,063:INFO:Total runtime is 0.06270030339558919 minutes
2024-04-30 16:52:02,063:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:02,063:INFO:Initializing create_model()
2024-04-30 16:52:02,063:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D7023210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:02,063:INFO:Checking exceptions
2024-04-30 16:52:02,063:INFO:Importing libraries
2024-04-30 16:52:02,063:INFO:Copying training dataset
2024-04-30 16:52:02,089:INFO:Defining folds
2024-04-30 16:52:02,089:INFO:Declaring metric variables
2024-04-30 16:52:02,095:INFO:Importing untrained model
2024-04-30 16:52:02,095:INFO:K Neighbors Regressor Imported successfully
2024-04-30 16:52:02,095:INFO:Starting cross validation
2024-04-30 16:52:02,095:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:02,363:INFO:Calculating mean and std
2024-04-30 16:52:02,378:INFO:Creating metrics dataframe
2024-04-30 16:52:02,380:INFO:Uploading results into container
2024-04-30 16:52:02,381:INFO:Uploading model into container now
2024-04-30 16:52:02,381:INFO:_master_model_container: 54
2024-04-30 16:52:02,381:INFO:_display_container: 7
2024-04-30 16:52:02,382:INFO:KNeighborsRegressor(n_jobs=-1)
2024-04-30 16:52:02,382:INFO:create_model() successfully completed......................................
2024-04-30 16:52:02,531:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:02,531:INFO:Creating metrics dataframe
2024-04-30 16:52:02,543:INFO:Initializing Decision Tree Regressor
2024-04-30 16:52:02,543:INFO:Total runtime is 0.07069796721140542 minutes
2024-04-30 16:52:02,547:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:02,547:INFO:Initializing create_model()
2024-04-30 16:52:02,547:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D7023210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:02,547:INFO:Checking exceptions
2024-04-30 16:52:02,547:INFO:Importing libraries
2024-04-30 16:52:02,548:INFO:Copying training dataset
2024-04-30 16:52:02,568:INFO:Defining folds
2024-04-30 16:52:02,568:INFO:Declaring metric variables
2024-04-30 16:52:02,568:INFO:Importing untrained model
2024-04-30 16:52:02,568:INFO:Decision Tree Regressor Imported successfully
2024-04-30 16:52:02,583:INFO:Starting cross validation
2024-04-30 16:52:02,585:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:02,762:INFO:Calculating mean and std
2024-04-30 16:52:02,762:INFO:Creating metrics dataframe
2024-04-30 16:52:02,762:INFO:Uploading results into container
2024-04-30 16:52:02,762:INFO:Uploading model into container now
2024-04-30 16:52:02,762:INFO:_master_model_container: 55
2024-04-30 16:52:02,762:INFO:_display_container: 7
2024-04-30 16:52:02,762:INFO:DecisionTreeRegressor(random_state=7875)
2024-04-30 16:52:02,762:INFO:create_model() successfully completed......................................
2024-04-30 16:52:02,912:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:02,912:INFO:Creating metrics dataframe
2024-04-30 16:52:02,930:INFO:Initializing Random Forest Regressor
2024-04-30 16:52:02,930:INFO:Total runtime is 0.07715487480163573 minutes
2024-04-30 16:52:02,935:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:02,935:INFO:Initializing create_model()
2024-04-30 16:52:02,936:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D7023210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:02,936:INFO:Checking exceptions
2024-04-30 16:52:02,936:INFO:Importing libraries
2024-04-30 16:52:02,936:INFO:Copying training dataset
2024-04-30 16:52:02,959:INFO:Defining folds
2024-04-30 16:52:02,960:INFO:Declaring metric variables
2024-04-30 16:52:02,963:INFO:Importing untrained model
2024-04-30 16:52:02,963:INFO:Random Forest Regressor Imported successfully
2024-04-30 16:52:02,963:INFO:Starting cross validation
2024-04-30 16:52:02,963:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:05,430:INFO:Calculating mean and std
2024-04-30 16:52:05,431:INFO:Creating metrics dataframe
2024-04-30 16:52:05,431:INFO:Uploading results into container
2024-04-30 16:52:05,431:INFO:Uploading model into container now
2024-04-30 16:52:05,431:INFO:_master_model_container: 56
2024-04-30 16:52:05,431:INFO:_display_container: 7
2024-04-30 16:52:05,431:INFO:RandomForestRegressor(n_jobs=-1, random_state=7875)
2024-04-30 16:52:05,431:INFO:create_model() successfully completed......................................
2024-04-30 16:52:05,581:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:05,581:INFO:Creating metrics dataframe
2024-04-30 16:52:05,598:INFO:Initializing Extra Trees Regressor
2024-04-30 16:52:05,598:INFO:Total runtime is 0.12162364323933918 minutes
2024-04-30 16:52:05,602:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:05,602:INFO:Initializing create_model()
2024-04-30 16:52:05,602:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D7023210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:05,602:INFO:Checking exceptions
2024-04-30 16:52:05,602:INFO:Importing libraries
2024-04-30 16:52:05,603:INFO:Copying training dataset
2024-04-30 16:52:05,626:INFO:Defining folds
2024-04-30 16:52:05,627:INFO:Declaring metric variables
2024-04-30 16:52:05,630:INFO:Importing untrained model
2024-04-30 16:52:05,634:INFO:Extra Trees Regressor Imported successfully
2024-04-30 16:52:05,636:INFO:Starting cross validation
2024-04-30 16:52:05,636:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:08,526:INFO:Calculating mean and std
2024-04-30 16:52:08,527:INFO:Creating metrics dataframe
2024-04-30 16:52:08,528:INFO:Uploading results into container
2024-04-30 16:52:08,529:INFO:Uploading model into container now
2024-04-30 16:52:08,529:INFO:_master_model_container: 57
2024-04-30 16:52:08,529:INFO:_display_container: 7
2024-04-30 16:52:08,529:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=7875)
2024-04-30 16:52:08,530:INFO:create_model() successfully completed......................................
2024-04-30 16:52:08,668:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:08,668:INFO:Creating metrics dataframe
2024-04-30 16:52:08,685:INFO:Initializing AdaBoost Regressor
2024-04-30 16:52:08,685:INFO:Total runtime is 0.17307478189468384 minutes
2024-04-30 16:52:08,703:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:08,703:INFO:Initializing create_model()
2024-04-30 16:52:08,703:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D7023210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:08,704:INFO:Checking exceptions
2024-04-30 16:52:08,704:INFO:Importing libraries
2024-04-30 16:52:08,704:INFO:Copying training dataset
2024-04-30 16:52:08,727:INFO:Defining folds
2024-04-30 16:52:08,728:INFO:Declaring metric variables
2024-04-30 16:52:08,730:INFO:Importing untrained model
2024-04-30 16:52:08,733:INFO:AdaBoost Regressor Imported successfully
2024-04-30 16:52:08,735:INFO:Starting cross validation
2024-04-30 16:52:08,735:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:09,403:INFO:Calculating mean and std
2024-04-30 16:52:09,403:INFO:Creating metrics dataframe
2024-04-30 16:52:09,403:INFO:Uploading results into container
2024-04-30 16:52:09,403:INFO:Uploading model into container now
2024-04-30 16:52:09,403:INFO:_master_model_container: 58
2024-04-30 16:52:09,403:INFO:_display_container: 7
2024-04-30 16:52:09,403:INFO:AdaBoostRegressor(random_state=7875)
2024-04-30 16:52:09,403:INFO:create_model() successfully completed......................................
2024-04-30 16:52:09,552:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:09,552:INFO:Creating metrics dataframe
2024-04-30 16:52:09,579:INFO:Initializing Gradient Boosting Regressor
2024-04-30 16:52:09,579:INFO:Total runtime is 0.18797128995259602 minutes
2024-04-30 16:52:09,583:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:09,583:INFO:Initializing create_model()
2024-04-30 16:52:09,583:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D7023210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:09,583:INFO:Checking exceptions
2024-04-30 16:52:09,583:INFO:Importing libraries
2024-04-30 16:52:09,583:INFO:Copying training dataset
2024-04-30 16:52:09,603:INFO:Defining folds
2024-04-30 16:52:09,603:INFO:Declaring metric variables
2024-04-30 16:52:09,603:INFO:Importing untrained model
2024-04-30 16:52:09,603:INFO:Gradient Boosting Regressor Imported successfully
2024-04-30 16:52:09,603:INFO:Starting cross validation
2024-04-30 16:52:09,620:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:10,433:INFO:Calculating mean and std
2024-04-30 16:52:10,433:INFO:Creating metrics dataframe
2024-04-30 16:52:10,433:INFO:Uploading results into container
2024-04-30 16:52:10,433:INFO:Uploading model into container now
2024-04-30 16:52:10,433:INFO:_master_model_container: 59
2024-04-30 16:52:10,433:INFO:_display_container: 7
2024-04-30 16:52:10,433:INFO:GradientBoostingRegressor(random_state=7875)
2024-04-30 16:52:10,449:INFO:create_model() successfully completed......................................
2024-04-30 16:52:10,597:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:10,599:INFO:Creating metrics dataframe
2024-04-30 16:52:10,604:INFO:Initializing Extreme Gradient Boosting
2024-04-30 16:52:10,604:INFO:Total runtime is 0.20505948464075724 minutes
2024-04-30 16:52:10,604:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:10,604:INFO:Initializing create_model()
2024-04-30 16:52:10,604:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D7023210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:10,604:INFO:Checking exceptions
2024-04-30 16:52:10,604:INFO:Importing libraries
2024-04-30 16:52:10,604:INFO:Copying training dataset
2024-04-30 16:52:10,637:INFO:Defining folds
2024-04-30 16:52:10,637:INFO:Declaring metric variables
2024-04-30 16:52:10,637:INFO:Importing untrained model
2024-04-30 16:52:10,637:INFO:Extreme Gradient Boosting Imported successfully
2024-04-30 16:52:10,653:INFO:Starting cross validation
2024-04-30 16:52:10,654:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:11,204:INFO:Calculating mean and std
2024-04-30 16:52:11,204:INFO:Creating metrics dataframe
2024-04-30 16:52:11,204:INFO:Uploading results into container
2024-04-30 16:52:11,204:INFO:Uploading model into container now
2024-04-30 16:52:11,204:INFO:_master_model_container: 60
2024-04-30 16:52:11,204:INFO:_display_container: 7
2024-04-30 16:52:11,204:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=7875, ...)
2024-04-30 16:52:11,204:INFO:create_model() successfully completed......................................
2024-04-30 16:52:11,354:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:11,354:INFO:Creating metrics dataframe
2024-04-30 16:52:11,377:INFO:Initializing Light Gradient Boosting Machine
2024-04-30 16:52:11,377:INFO:Total runtime is 0.21792777379353842 minutes
2024-04-30 16:52:11,380:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:11,381:INFO:Initializing create_model()
2024-04-30 16:52:11,381:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D7023210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:11,381:INFO:Checking exceptions
2024-04-30 16:52:11,381:INFO:Importing libraries
2024-04-30 16:52:11,381:INFO:Copying training dataset
2024-04-30 16:52:11,403:INFO:Defining folds
2024-04-30 16:52:11,404:INFO:Declaring metric variables
2024-04-30 16:52:11,404:INFO:Importing untrained model
2024-04-30 16:52:11,404:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-30 16:52:11,404:INFO:Starting cross validation
2024-04-30 16:52:11,404:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:12,454:INFO:Calculating mean and std
2024-04-30 16:52:12,457:INFO:Creating metrics dataframe
2024-04-30 16:52:12,461:INFO:Uploading results into container
2024-04-30 16:52:12,461:INFO:Uploading model into container now
2024-04-30 16:52:12,462:INFO:_master_model_container: 61
2024-04-30 16:52:12,462:INFO:_display_container: 7
2024-04-30 16:52:12,463:INFO:LGBMRegressor(n_jobs=-1, random_state=7875)
2024-04-30 16:52:12,463:INFO:create_model() successfully completed......................................
2024-04-30 16:52:12,640:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:12,640:INFO:Creating metrics dataframe
2024-04-30 16:52:12,656:INFO:Initializing Dummy Regressor
2024-04-30 16:52:12,656:INFO:Total runtime is 0.23925636212031048 minutes
2024-04-30 16:52:12,656:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:12,656:INFO:Initializing create_model()
2024-04-30 16:52:12,656:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D7023210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:12,656:INFO:Checking exceptions
2024-04-30 16:52:12,656:INFO:Importing libraries
2024-04-30 16:52:12,656:INFO:Copying training dataset
2024-04-30 16:52:12,704:INFO:Defining folds
2024-04-30 16:52:12,704:INFO:Declaring metric variables
2024-04-30 16:52:12,706:INFO:Importing untrained model
2024-04-30 16:52:12,706:INFO:Dummy Regressor Imported successfully
2024-04-30 16:52:12,723:INFO:Starting cross validation
2024-04-30 16:52:12,723:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:12,855:INFO:Calculating mean and std
2024-04-30 16:52:12,855:INFO:Creating metrics dataframe
2024-04-30 16:52:12,872:INFO:Uploading results into container
2024-04-30 16:52:12,873:INFO:Uploading model into container now
2024-04-30 16:52:12,873:INFO:_master_model_container: 62
2024-04-30 16:52:12,873:INFO:_display_container: 7
2024-04-30 16:52:12,874:INFO:DummyRegressor()
2024-04-30 16:52:12,874:INFO:create_model() successfully completed......................................
2024-04-30 16:52:13,022:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:13,022:INFO:Creating metrics dataframe
2024-04-30 16:52:13,038:INFO:Initializing create_model()
2024-04-30 16:52:13,038:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=GradientBoostingRegressor(random_state=7875), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:13,038:INFO:Checking exceptions
2024-04-30 16:52:13,038:INFO:Importing libraries
2024-04-30 16:52:13,038:INFO:Copying training dataset
2024-04-30 16:52:13,055:INFO:Defining folds
2024-04-30 16:52:13,055:INFO:Declaring metric variables
2024-04-30 16:52:13,055:INFO:Importing untrained model
2024-04-30 16:52:13,055:INFO:Declaring custom model
2024-04-30 16:52:13,055:INFO:Gradient Boosting Regressor Imported successfully
2024-04-30 16:52:13,071:INFO:Cross validation set to False
2024-04-30 16:52:13,071:INFO:Fitting Model
2024-04-30 16:52:13,387:INFO:GradientBoostingRegressor(random_state=7875)
2024-04-30 16:52:13,387:INFO:create_model() successfully completed......................................
2024-04-30 16:52:13,607:INFO:_master_model_container: 62
2024-04-30 16:52:13,607:INFO:_display_container: 7
2024-04-30 16:52:13,607:INFO:GradientBoostingRegressor(random_state=7875)
2024-04-30 16:52:13,607:INFO:compare_models() successfully completed......................................
2024-04-30 16:52:13,622:INFO:Initializing compare_models()
2024-04-30 16:52:13,622:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-04-30 16:52:13,622:INFO:Checking exceptions
2024-04-30 16:52:13,622:INFO:Preparing display monitor
2024-04-30 16:52:13,656:INFO:Initializing Linear Regression
2024-04-30 16:52:13,656:INFO:Total runtime is 0.0 minutes
2024-04-30 16:52:13,660:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:13,660:INFO:Initializing create_model()
2024-04-30 16:52:13,660:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D704E150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:13,661:INFO:Checking exceptions
2024-04-30 16:52:13,661:INFO:Importing libraries
2024-04-30 16:52:13,661:INFO:Copying training dataset
2024-04-30 16:52:13,686:INFO:Defining folds
2024-04-30 16:52:13,686:INFO:Declaring metric variables
2024-04-30 16:52:13,690:INFO:Importing untrained model
2024-04-30 16:52:13,694:INFO:Linear Regression Imported successfully
2024-04-30 16:52:13,700:INFO:Starting cross validation
2024-04-30 16:52:13,701:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:13,865:INFO:Calculating mean and std
2024-04-30 16:52:13,866:INFO:Creating metrics dataframe
2024-04-30 16:52:13,867:INFO:Uploading results into container
2024-04-30 16:52:13,868:INFO:Uploading model into container now
2024-04-30 16:52:13,868:INFO:_master_model_container: 63
2024-04-30 16:52:13,868:INFO:_display_container: 8
2024-04-30 16:52:13,868:INFO:LinearRegression(n_jobs=-1)
2024-04-30 16:52:13,868:INFO:create_model() successfully completed......................................
2024-04-30 16:52:14,004:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:14,004:INFO:Creating metrics dataframe
2024-04-30 16:52:14,019:INFO:Initializing Lasso Regression
2024-04-30 16:52:14,019:INFO:Total runtime is 0.00606306791305542 minutes
2024-04-30 16:52:14,019:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:14,019:INFO:Initializing create_model()
2024-04-30 16:52:14,019:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D704E150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:14,019:INFO:Checking exceptions
2024-04-30 16:52:14,019:INFO:Importing libraries
2024-04-30 16:52:14,019:INFO:Copying training dataset
2024-04-30 16:52:14,057:INFO:Defining folds
2024-04-30 16:52:14,058:INFO:Declaring metric variables
2024-04-30 16:52:14,061:INFO:Importing untrained model
2024-04-30 16:52:14,064:INFO:Lasso Regression Imported successfully
2024-04-30 16:52:14,069:INFO:Starting cross validation
2024-04-30 16:52:14,070:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:14,255:INFO:Calculating mean and std
2024-04-30 16:52:14,256:INFO:Creating metrics dataframe
2024-04-30 16:52:14,257:INFO:Uploading results into container
2024-04-30 16:52:14,257:INFO:Uploading model into container now
2024-04-30 16:52:14,257:INFO:_master_model_container: 64
2024-04-30 16:52:14,258:INFO:_display_container: 8
2024-04-30 16:52:14,258:INFO:Lasso(random_state=7875)
2024-04-30 16:52:14,258:INFO:create_model() successfully completed......................................
2024-04-30 16:52:14,404:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:14,404:INFO:Creating metrics dataframe
2024-04-30 16:52:14,404:INFO:Initializing Ridge Regression
2024-04-30 16:52:14,404:INFO:Total runtime is 0.012475403149922688 minutes
2024-04-30 16:52:14,420:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:14,420:INFO:Initializing create_model()
2024-04-30 16:52:14,420:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D704E150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:14,420:INFO:Checking exceptions
2024-04-30 16:52:14,420:INFO:Importing libraries
2024-04-30 16:52:14,420:INFO:Copying training dataset
2024-04-30 16:52:14,447:INFO:Defining folds
2024-04-30 16:52:14,447:INFO:Declaring metric variables
2024-04-30 16:52:14,450:INFO:Importing untrained model
2024-04-30 16:52:14,453:INFO:Ridge Regression Imported successfully
2024-04-30 16:52:14,459:INFO:Starting cross validation
2024-04-30 16:52:14,460:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:14,607:INFO:Calculating mean and std
2024-04-30 16:52:14,607:INFO:Creating metrics dataframe
2024-04-30 16:52:14,607:INFO:Uploading results into container
2024-04-30 16:52:14,607:INFO:Uploading model into container now
2024-04-30 16:52:14,607:INFO:_master_model_container: 65
2024-04-30 16:52:14,607:INFO:_display_container: 8
2024-04-30 16:52:14,607:INFO:Ridge(random_state=7875)
2024-04-30 16:52:14,607:INFO:create_model() successfully completed......................................
2024-04-30 16:52:14,766:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:14,766:INFO:Creating metrics dataframe
2024-04-30 16:52:14,773:INFO:Initializing Elastic Net
2024-04-30 16:52:14,773:INFO:Total runtime is 0.018629459540049235 minutes
2024-04-30 16:52:14,779:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:14,779:INFO:Initializing create_model()
2024-04-30 16:52:14,779:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D704E150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:14,779:INFO:Checking exceptions
2024-04-30 16:52:14,779:INFO:Importing libraries
2024-04-30 16:52:14,779:INFO:Copying training dataset
2024-04-30 16:52:14,809:INFO:Defining folds
2024-04-30 16:52:14,809:INFO:Declaring metric variables
2024-04-30 16:52:14,809:INFO:Importing untrained model
2024-04-30 16:52:14,826:INFO:Elastic Net Imported successfully
2024-04-30 16:52:14,828:INFO:Starting cross validation
2024-04-30 16:52:14,828:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:14,991:INFO:Calculating mean and std
2024-04-30 16:52:14,991:INFO:Creating metrics dataframe
2024-04-30 16:52:14,991:INFO:Uploading results into container
2024-04-30 16:52:14,991:INFO:Uploading model into container now
2024-04-30 16:52:14,991:INFO:_master_model_container: 66
2024-04-30 16:52:14,991:INFO:_display_container: 8
2024-04-30 16:52:14,991:INFO:ElasticNet(random_state=7875)
2024-04-30 16:52:14,991:INFO:create_model() successfully completed......................................
2024-04-30 16:52:15,153:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:15,153:INFO:Creating metrics dataframe
2024-04-30 16:52:15,164:INFO:Initializing Least Angle Regression
2024-04-30 16:52:15,165:INFO:Total runtime is 0.025151248772939047 minutes
2024-04-30 16:52:15,169:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:15,169:INFO:Initializing create_model()
2024-04-30 16:52:15,169:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D704E150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:15,169:INFO:Checking exceptions
2024-04-30 16:52:15,170:INFO:Importing libraries
2024-04-30 16:52:15,170:INFO:Copying training dataset
2024-04-30 16:52:15,200:INFO:Defining folds
2024-04-30 16:52:15,200:INFO:Declaring metric variables
2024-04-30 16:52:15,204:INFO:Importing untrained model
2024-04-30 16:52:15,210:INFO:Least Angle Regression Imported successfully
2024-04-30 16:52:15,215:INFO:Starting cross validation
2024-04-30 16:52:15,215:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:15,409:INFO:Calculating mean and std
2024-04-30 16:52:15,425:INFO:Creating metrics dataframe
2024-04-30 16:52:15,427:INFO:Uploading results into container
2024-04-30 16:52:15,428:INFO:Uploading model into container now
2024-04-30 16:52:15,429:INFO:_master_model_container: 67
2024-04-30 16:52:15,429:INFO:_display_container: 8
2024-04-30 16:52:15,429:INFO:Lars(random_state=7875)
2024-04-30 16:52:15,429:INFO:create_model() successfully completed......................................
2024-04-30 16:52:15,575:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:15,575:INFO:Creating metrics dataframe
2024-04-30 16:52:15,592:INFO:Initializing Lasso Least Angle Regression
2024-04-30 16:52:15,592:INFO:Total runtime is 0.03227166334788005 minutes
2024-04-30 16:52:15,592:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:15,592:INFO:Initializing create_model()
2024-04-30 16:52:15,592:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D704E150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:15,592:INFO:Checking exceptions
2024-04-30 16:52:15,592:INFO:Importing libraries
2024-04-30 16:52:15,592:INFO:Copying training dataset
2024-04-30 16:52:15,626:INFO:Defining folds
2024-04-30 16:52:15,626:INFO:Declaring metric variables
2024-04-30 16:52:15,626:INFO:Importing untrained model
2024-04-30 16:52:15,626:INFO:Lasso Least Angle Regression Imported successfully
2024-04-30 16:52:15,626:INFO:Starting cross validation
2024-04-30 16:52:15,642:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:15,809:INFO:Calculating mean and std
2024-04-30 16:52:15,809:INFO:Creating metrics dataframe
2024-04-30 16:52:15,809:INFO:Uploading results into container
2024-04-30 16:52:15,809:INFO:Uploading model into container now
2024-04-30 16:52:15,809:INFO:_master_model_container: 68
2024-04-30 16:52:15,809:INFO:_display_container: 8
2024-04-30 16:52:15,809:INFO:LassoLars(random_state=7875)
2024-04-30 16:52:15,809:INFO:create_model() successfully completed......................................
2024-04-30 16:52:15,971:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:15,971:INFO:Creating metrics dataframe
2024-04-30 16:52:15,978:INFO:Initializing Orthogonal Matching Pursuit
2024-04-30 16:52:15,978:INFO:Total runtime is 0.038714031378428146 minutes
2024-04-30 16:52:15,978:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:15,978:INFO:Initializing create_model()
2024-04-30 16:52:15,978:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D704E150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:15,978:INFO:Checking exceptions
2024-04-30 16:52:15,978:INFO:Importing libraries
2024-04-30 16:52:15,978:INFO:Copying training dataset
2024-04-30 16:52:16,011:INFO:Defining folds
2024-04-30 16:52:16,011:INFO:Declaring metric variables
2024-04-30 16:52:16,025:INFO:Importing untrained model
2024-04-30 16:52:16,029:INFO:Orthogonal Matching Pursuit Imported successfully
2024-04-30 16:52:16,029:INFO:Starting cross validation
2024-04-30 16:52:16,029:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:16,193:INFO:Calculating mean and std
2024-04-30 16:52:16,194:INFO:Creating metrics dataframe
2024-04-30 16:52:16,195:INFO:Uploading results into container
2024-04-30 16:52:16,196:INFO:Uploading model into container now
2024-04-30 16:52:16,196:INFO:_master_model_container: 69
2024-04-30 16:52:16,196:INFO:_display_container: 8
2024-04-30 16:52:16,197:INFO:OrthogonalMatchingPursuit()
2024-04-30 16:52:16,197:INFO:create_model() successfully completed......................................
2024-04-30 16:52:16,331:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:16,342:INFO:Creating metrics dataframe
2024-04-30 16:52:16,352:INFO:Initializing Bayesian Ridge
2024-04-30 16:52:16,352:INFO:Total runtime is 0.04493586619695028 minutes
2024-04-30 16:52:16,356:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:16,356:INFO:Initializing create_model()
2024-04-30 16:52:16,356:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D704E150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:16,356:INFO:Checking exceptions
2024-04-30 16:52:16,356:INFO:Importing libraries
2024-04-30 16:52:16,356:INFO:Copying training dataset
2024-04-30 16:52:16,380:INFO:Defining folds
2024-04-30 16:52:16,380:INFO:Declaring metric variables
2024-04-30 16:52:16,383:INFO:Importing untrained model
2024-04-30 16:52:16,386:INFO:Bayesian Ridge Imported successfully
2024-04-30 16:52:16,392:INFO:Starting cross validation
2024-04-30 16:52:16,393:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:16,559:INFO:Calculating mean and std
2024-04-30 16:52:16,560:INFO:Creating metrics dataframe
2024-04-30 16:52:16,561:INFO:Uploading results into container
2024-04-30 16:52:16,562:INFO:Uploading model into container now
2024-04-30 16:52:16,562:INFO:_master_model_container: 70
2024-04-30 16:52:16,562:INFO:_display_container: 8
2024-04-30 16:52:16,563:INFO:BayesianRidge()
2024-04-30 16:52:16,563:INFO:create_model() successfully completed......................................
2024-04-30 16:52:16,710:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:16,710:INFO:Creating metrics dataframe
2024-04-30 16:52:16,726:INFO:Initializing Passive Aggressive Regressor
2024-04-30 16:52:16,726:INFO:Total runtime is 0.051179846127827965 minutes
2024-04-30 16:52:16,726:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:16,726:INFO:Initializing create_model()
2024-04-30 16:52:16,726:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D704E150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:16,726:INFO:Checking exceptions
2024-04-30 16:52:16,726:INFO:Importing libraries
2024-04-30 16:52:16,726:INFO:Copying training dataset
2024-04-30 16:52:16,756:INFO:Defining folds
2024-04-30 16:52:16,756:INFO:Declaring metric variables
2024-04-30 16:52:16,760:INFO:Importing untrained model
2024-04-30 16:52:16,764:INFO:Passive Aggressive Regressor Imported successfully
2024-04-30 16:52:16,769:INFO:Starting cross validation
2024-04-30 16:52:16,771:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:16,936:INFO:Calculating mean and std
2024-04-30 16:52:16,936:INFO:Creating metrics dataframe
2024-04-30 16:52:16,936:INFO:Uploading results into container
2024-04-30 16:52:16,936:INFO:Uploading model into container now
2024-04-30 16:52:16,942:INFO:_master_model_container: 71
2024-04-30 16:52:16,942:INFO:_display_container: 8
2024-04-30 16:52:16,942:INFO:PassiveAggressiveRegressor(random_state=7875)
2024-04-30 16:52:16,943:INFO:create_model() successfully completed......................................
2024-04-30 16:52:17,094:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:17,094:INFO:Creating metrics dataframe
2024-04-30 16:52:17,112:INFO:Initializing Huber Regressor
2024-04-30 16:52:17,112:INFO:Total runtime is 0.05760884682337443 minutes
2024-04-30 16:52:17,112:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:17,112:INFO:Initializing create_model()
2024-04-30 16:52:17,112:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D704E150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:17,112:INFO:Checking exceptions
2024-04-30 16:52:17,112:INFO:Importing libraries
2024-04-30 16:52:17,112:INFO:Copying training dataset
2024-04-30 16:52:17,153:INFO:Defining folds
2024-04-30 16:52:17,153:INFO:Declaring metric variables
2024-04-30 16:52:17,156:INFO:Importing untrained model
2024-04-30 16:52:17,159:INFO:Huber Regressor Imported successfully
2024-04-30 16:52:17,166:INFO:Starting cross validation
2024-04-30 16:52:17,167:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:17,391:INFO:Calculating mean and std
2024-04-30 16:52:17,391:INFO:Creating metrics dataframe
2024-04-30 16:52:17,391:INFO:Uploading results into container
2024-04-30 16:52:17,391:INFO:Uploading model into container now
2024-04-30 16:52:17,391:INFO:_master_model_container: 72
2024-04-30 16:52:17,391:INFO:_display_container: 8
2024-04-30 16:52:17,391:INFO:HuberRegressor()
2024-04-30 16:52:17,391:INFO:create_model() successfully completed......................................
2024-04-30 16:52:17,557:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:17,557:INFO:Creating metrics dataframe
2024-04-30 16:52:17,569:INFO:Initializing K Neighbors Regressor
2024-04-30 16:52:17,569:INFO:Total runtime is 0.06522723833719889 minutes
2024-04-30 16:52:17,573:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:17,574:INFO:Initializing create_model()
2024-04-30 16:52:17,574:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D704E150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:17,574:INFO:Checking exceptions
2024-04-30 16:52:17,574:INFO:Importing libraries
2024-04-30 16:52:17,575:INFO:Copying training dataset
2024-04-30 16:52:17,611:INFO:Defining folds
2024-04-30 16:52:17,611:INFO:Declaring metric variables
2024-04-30 16:52:17,611:INFO:Importing untrained model
2024-04-30 16:52:17,611:INFO:K Neighbors Regressor Imported successfully
2024-04-30 16:52:17,611:INFO:Starting cross validation
2024-04-30 16:52:17,626:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:17,892:INFO:Calculating mean and std
2024-04-30 16:52:17,892:INFO:Creating metrics dataframe
2024-04-30 16:52:17,892:INFO:Uploading results into container
2024-04-30 16:52:17,892:INFO:Uploading model into container now
2024-04-30 16:52:17,892:INFO:_master_model_container: 73
2024-04-30 16:52:17,892:INFO:_display_container: 8
2024-04-30 16:52:17,892:INFO:KNeighborsRegressor(n_jobs=-1)
2024-04-30 16:52:17,892:INFO:create_model() successfully completed......................................
2024-04-30 16:52:18,062:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:18,062:INFO:Creating metrics dataframe
2024-04-30 16:52:18,074:INFO:Initializing Decision Tree Regressor
2024-04-30 16:52:18,075:INFO:Total runtime is 0.0736505349477132 minutes
2024-04-30 16:52:18,077:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:18,077:INFO:Initializing create_model()
2024-04-30 16:52:18,077:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D704E150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:18,077:INFO:Checking exceptions
2024-04-30 16:52:18,077:INFO:Importing libraries
2024-04-30 16:52:18,077:INFO:Copying training dataset
2024-04-30 16:52:18,103:INFO:Defining folds
2024-04-30 16:52:18,103:INFO:Declaring metric variables
2024-04-30 16:52:18,106:INFO:Importing untrained model
2024-04-30 16:52:18,111:INFO:Decision Tree Regressor Imported successfully
2024-04-30 16:52:18,115:INFO:Starting cross validation
2024-04-30 16:52:18,115:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:18,292:INFO:Calculating mean and std
2024-04-30 16:52:18,292:INFO:Creating metrics dataframe
2024-04-30 16:52:18,292:INFO:Uploading results into container
2024-04-30 16:52:18,292:INFO:Uploading model into container now
2024-04-30 16:52:18,292:INFO:_master_model_container: 74
2024-04-30 16:52:18,292:INFO:_display_container: 8
2024-04-30 16:52:18,292:INFO:DecisionTreeRegressor(random_state=7875)
2024-04-30 16:52:18,292:INFO:create_model() successfully completed......................................
2024-04-30 16:52:18,449:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:18,449:INFO:Creating metrics dataframe
2024-04-30 16:52:18,461:INFO:Initializing Random Forest Regressor
2024-04-30 16:52:18,461:INFO:Total runtime is 0.08009515206019083 minutes
2024-04-30 16:52:18,465:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:18,465:INFO:Initializing create_model()
2024-04-30 16:52:18,465:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D704E150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:18,465:INFO:Checking exceptions
2024-04-30 16:52:18,465:INFO:Importing libraries
2024-04-30 16:52:18,466:INFO:Copying training dataset
2024-04-30 16:52:18,489:INFO:Defining folds
2024-04-30 16:52:18,490:INFO:Declaring metric variables
2024-04-30 16:52:18,491:INFO:Importing untrained model
2024-04-30 16:52:18,498:INFO:Random Forest Regressor Imported successfully
2024-04-30 16:52:18,498:INFO:Starting cross validation
2024-04-30 16:52:18,498:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:20,946:INFO:Calculating mean and std
2024-04-30 16:52:20,946:INFO:Creating metrics dataframe
2024-04-30 16:52:20,946:INFO:Uploading results into container
2024-04-30 16:52:20,946:INFO:Uploading model into container now
2024-04-30 16:52:20,946:INFO:_master_model_container: 75
2024-04-30 16:52:20,946:INFO:_display_container: 8
2024-04-30 16:52:20,946:INFO:RandomForestRegressor(n_jobs=-1, random_state=7875)
2024-04-30 16:52:20,946:INFO:create_model() successfully completed......................................
2024-04-30 16:52:21,112:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:21,113:INFO:Creating metrics dataframe
2024-04-30 16:52:21,126:INFO:Initializing Extra Trees Regressor
2024-04-30 16:52:21,126:INFO:Total runtime is 0.1245071291923523 minutes
2024-04-30 16:52:21,130:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:21,131:INFO:Initializing create_model()
2024-04-30 16:52:21,131:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D704E150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:21,131:INFO:Checking exceptions
2024-04-30 16:52:21,131:INFO:Importing libraries
2024-04-30 16:52:21,131:INFO:Copying training dataset
2024-04-30 16:52:21,147:INFO:Defining folds
2024-04-30 16:52:21,147:INFO:Declaring metric variables
2024-04-30 16:52:21,147:INFO:Importing untrained model
2024-04-30 16:52:21,162:INFO:Extra Trees Regressor Imported successfully
2024-04-30 16:52:21,165:INFO:Starting cross validation
2024-04-30 16:52:21,165:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:24,111:INFO:Calculating mean and std
2024-04-30 16:52:24,112:INFO:Creating metrics dataframe
2024-04-30 16:52:24,114:INFO:Uploading results into container
2024-04-30 16:52:24,115:INFO:Uploading model into container now
2024-04-30 16:52:24,115:INFO:_master_model_container: 76
2024-04-30 16:52:24,115:INFO:_display_container: 8
2024-04-30 16:52:24,115:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=7875)
2024-04-30 16:52:24,116:INFO:create_model() successfully completed......................................
2024-04-30 16:52:24,263:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:24,263:INFO:Creating metrics dataframe
2024-04-30 16:52:24,284:INFO:Initializing AdaBoost Regressor
2024-04-30 16:52:24,284:INFO:Total runtime is 0.17713871399561565 minutes
2024-04-30 16:52:24,288:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:24,288:INFO:Initializing create_model()
2024-04-30 16:52:24,288:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D704E150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:24,288:INFO:Checking exceptions
2024-04-30 16:52:24,288:INFO:Importing libraries
2024-04-30 16:52:24,289:INFO:Copying training dataset
2024-04-30 16:52:24,312:INFO:Defining folds
2024-04-30 16:52:24,312:INFO:Declaring metric variables
2024-04-30 16:52:24,315:INFO:Importing untrained model
2024-04-30 16:52:24,318:INFO:AdaBoost Regressor Imported successfully
2024-04-30 16:52:24,320:INFO:Starting cross validation
2024-04-30 16:52:24,320:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:24,995:INFO:Calculating mean and std
2024-04-30 16:52:24,996:INFO:Creating metrics dataframe
2024-04-30 16:52:24,997:INFO:Uploading results into container
2024-04-30 16:52:24,998:INFO:Uploading model into container now
2024-04-30 16:52:24,998:INFO:_master_model_container: 77
2024-04-30 16:52:24,998:INFO:_display_container: 8
2024-04-30 16:52:24,998:INFO:AdaBoostRegressor(random_state=7875)
2024-04-30 16:52:24,998:INFO:create_model() successfully completed......................................
2024-04-30 16:52:25,151:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:25,151:INFO:Creating metrics dataframe
2024-04-30 16:52:25,151:INFO:Initializing Gradient Boosting Regressor
2024-04-30 16:52:25,151:INFO:Total runtime is 0.19159027735392253 minutes
2024-04-30 16:52:25,171:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:25,171:INFO:Initializing create_model()
2024-04-30 16:52:25,171:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D704E150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:25,171:INFO:Checking exceptions
2024-04-30 16:52:25,171:INFO:Importing libraries
2024-04-30 16:52:25,171:INFO:Copying training dataset
2024-04-30 16:52:25,195:INFO:Defining folds
2024-04-30 16:52:25,196:INFO:Declaring metric variables
2024-04-30 16:52:25,199:INFO:Importing untrained model
2024-04-30 16:52:25,203:INFO:Gradient Boosting Regressor Imported successfully
2024-04-30 16:52:25,210:INFO:Starting cross validation
2024-04-30 16:52:25,211:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:26,012:INFO:Calculating mean and std
2024-04-30 16:52:26,012:INFO:Creating metrics dataframe
2024-04-30 16:52:26,014:INFO:Uploading results into container
2024-04-30 16:52:26,014:INFO:Uploading model into container now
2024-04-30 16:52:26,014:INFO:_master_model_container: 78
2024-04-30 16:52:26,014:INFO:_display_container: 8
2024-04-30 16:52:26,015:INFO:GradientBoostingRegressor(random_state=7875)
2024-04-30 16:52:26,015:INFO:create_model() successfully completed......................................
2024-04-30 16:52:26,168:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:26,169:INFO:Creating metrics dataframe
2024-04-30 16:52:26,180:INFO:Initializing Extreme Gradient Boosting
2024-04-30 16:52:26,181:INFO:Total runtime is 0.20876095294952393 minutes
2024-04-30 16:52:26,184:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:26,184:INFO:Initializing create_model()
2024-04-30 16:52:26,185:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D704E150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:26,185:INFO:Checking exceptions
2024-04-30 16:52:26,185:INFO:Importing libraries
2024-04-30 16:52:26,185:INFO:Copying training dataset
2024-04-30 16:52:26,211:INFO:Defining folds
2024-04-30 16:52:26,211:INFO:Declaring metric variables
2024-04-30 16:52:26,214:INFO:Importing untrained model
2024-04-30 16:52:26,219:INFO:Extreme Gradient Boosting Imported successfully
2024-04-30 16:52:26,223:INFO:Starting cross validation
2024-04-30 16:52:26,223:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:26,736:INFO:Calculating mean and std
2024-04-30 16:52:26,736:INFO:Creating metrics dataframe
2024-04-30 16:52:26,736:INFO:Uploading results into container
2024-04-30 16:52:26,736:INFO:Uploading model into container now
2024-04-30 16:52:26,736:INFO:_master_model_container: 79
2024-04-30 16:52:26,736:INFO:_display_container: 8
2024-04-30 16:52:26,736:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=7875, ...)
2024-04-30 16:52:26,736:INFO:create_model() successfully completed......................................
2024-04-30 16:52:26,899:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:26,899:INFO:Creating metrics dataframe
2024-04-30 16:52:26,913:INFO:Initializing Light Gradient Boosting Machine
2024-04-30 16:52:26,914:INFO:Total runtime is 0.22096983989079794 minutes
2024-04-30 16:52:26,917:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:26,917:INFO:Initializing create_model()
2024-04-30 16:52:26,918:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D704E150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:26,918:INFO:Checking exceptions
2024-04-30 16:52:26,918:INFO:Importing libraries
2024-04-30 16:52:26,918:INFO:Copying training dataset
2024-04-30 16:52:26,942:INFO:Defining folds
2024-04-30 16:52:26,942:INFO:Declaring metric variables
2024-04-30 16:52:26,942:INFO:Importing untrained model
2024-04-30 16:52:26,942:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-30 16:52:26,958:INFO:Starting cross validation
2024-04-30 16:52:26,959:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:27,957:INFO:Calculating mean and std
2024-04-30 16:52:27,957:INFO:Creating metrics dataframe
2024-04-30 16:52:27,957:INFO:Uploading results into container
2024-04-30 16:52:27,957:INFO:Uploading model into container now
2024-04-30 16:52:27,957:INFO:_master_model_container: 80
2024-04-30 16:52:27,957:INFO:_display_container: 8
2024-04-30 16:52:27,957:INFO:LGBMRegressor(n_jobs=-1, random_state=7875)
2024-04-30 16:52:27,957:INFO:create_model() successfully completed......................................
2024-04-30 16:52:28,154:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:28,154:INFO:Creating metrics dataframe
2024-04-30 16:52:28,175:INFO:Initializing Dummy Regressor
2024-04-30 16:52:28,175:INFO:Total runtime is 0.24199326038360597 minutes
2024-04-30 16:52:28,175:INFO:SubProcess create_model() called ==================================
2024-04-30 16:52:28,175:INFO:Initializing create_model()
2024-04-30 16:52:28,175:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000228D704E150>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:28,175:INFO:Checking exceptions
2024-04-30 16:52:28,175:INFO:Importing libraries
2024-04-30 16:52:28,175:INFO:Copying training dataset
2024-04-30 16:52:28,213:INFO:Defining folds
2024-04-30 16:52:28,213:INFO:Declaring metric variables
2024-04-30 16:52:28,216:INFO:Importing untrained model
2024-04-30 16:52:28,218:INFO:Dummy Regressor Imported successfully
2024-04-30 16:52:28,225:INFO:Starting cross validation
2024-04-30 16:52:28,226:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 16:52:28,351:INFO:Calculating mean and std
2024-04-30 16:52:28,351:INFO:Creating metrics dataframe
2024-04-30 16:52:28,351:INFO:Uploading results into container
2024-04-30 16:52:28,351:INFO:Uploading model into container now
2024-04-30 16:52:28,351:INFO:_master_model_container: 81
2024-04-30 16:52:28,351:INFO:_display_container: 8
2024-04-30 16:52:28,351:INFO:DummyRegressor()
2024-04-30 16:52:28,351:INFO:create_model() successfully completed......................................
2024-04-30 16:52:28,513:INFO:SubProcess create_model() end ==================================
2024-04-30 16:52:28,513:INFO:Creating metrics dataframe
2024-04-30 16:52:28,538:INFO:Initializing create_model()
2024-04-30 16:52:28,538:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000228D4BC9390>, estimator=GradientBoostingRegressor(random_state=7875), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 16:52:28,538:INFO:Checking exceptions
2024-04-30 16:52:28,539:INFO:Importing libraries
2024-04-30 16:52:28,539:INFO:Copying training dataset
2024-04-30 16:52:28,560:INFO:Defining folds
2024-04-30 16:52:28,560:INFO:Declaring metric variables
2024-04-30 16:52:28,560:INFO:Importing untrained model
2024-04-30 16:52:28,560:INFO:Declaring custom model
2024-04-30 16:52:28,560:INFO:Gradient Boosting Regressor Imported successfully
2024-04-30 16:52:28,560:INFO:Cross validation set to False
2024-04-30 16:52:28,560:INFO:Fitting Model
2024-04-30 16:52:28,837:INFO:GradientBoostingRegressor(random_state=7875)
2024-04-30 16:52:28,837:INFO:create_model() successfully completed......................................
2024-04-30 16:52:29,027:INFO:_master_model_container: 81
2024-04-30 16:52:29,027:INFO:_display_container: 8
2024-04-30 16:52:29,027:INFO:GradientBoostingRegressor(random_state=7875)
2024-04-30 16:52:29,027:INFO:compare_models() successfully completed......................................
2024-05-01 08:59:10,984:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 08:59:10,984:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 08:59:10,984:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 08:59:10,984:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 09:07:05,908:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 09:07:05,908:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 09:07:05,908:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 09:07:05,908:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 09:07:25,694:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 09:07:25,694:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 09:07:25,694:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 09:07:25,694:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 09:08:43,511:INFO:PyCaret RegressionExperiment
2024-05-01 09:08:43,512:INFO:Logging name: reg-default-name
2024-05-01 09:08:43,512:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-01 09:08:43,512:INFO:version 3.3.2
2024-05-01 09:08:43,512:INFO:Initializing setup()
2024-05-01 09:08:43,512:INFO:self.USI: 5498
2024-05-01 09:08:43,512:INFO:self._variable_keys: {'memory', 'USI', 'seed', 'html_param', '_ml_usecase', 'y_test', 'exp_name_log', 'X_train', 'y_train', '_available_plots', 'fold_groups_param', 'exp_id', 'gpu_param', 'logging_param', 'n_jobs_param', 'gpu_n_jobs_param', 'fold_generator', 'idx', 'X', 'fold_shuffle_param', 'target_param', 'log_plots_param', 'X_test', 'data', 'transform_target_param', 'y', 'pipeline'}
2024-05-01 09:08:43,512:INFO:Checking environment
2024-05-01 09:08:43,512:INFO:python_version: 3.11.5
2024-05-01 09:08:43,512:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-05-01 09:08:43,512:INFO:machine: AMD64
2024-05-01 09:08:43,512:INFO:platform: Windows-10-10.0.19045-SP0
2024-05-01 09:08:43,513:INFO:Memory: svmem(total=17087496192, available=10404073472, percent=39.1, used=6683422720, free=10404073472)
2024-05-01 09:08:43,513:INFO:Physical Core: 4
2024-05-01 09:08:43,513:INFO:Logical Core: 8
2024-05-01 09:08:43,513:INFO:Checking libraries
2024-05-01 09:08:43,513:INFO:System:
2024-05-01 09:08:43,513:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-05-01 09:08:43,513:INFO:executable: C:\Users\1104-27\anaconda3\python.exe
2024-05-01 09:08:43,513:INFO:   machine: Windows-10-10.0.19045-SP0
2024-05-01 09:08:43,513:INFO:PyCaret required dependencies:
2024-05-01 09:08:44,434:INFO:                 pip: 23.2.1
2024-05-01 09:08:44,434:INFO:          setuptools: 68.0.0
2024-05-01 09:08:44,434:INFO:             pycaret: 3.3.2
2024-05-01 09:08:44,434:INFO:             IPython: 8.15.0
2024-05-01 09:08:44,434:INFO:          ipywidgets: 8.0.4
2024-05-01 09:08:44,434:INFO:                tqdm: 4.65.0
2024-05-01 09:08:44,434:INFO:               numpy: 1.24.3
2024-05-01 09:08:44,434:INFO:              pandas: 2.0.3
2024-05-01 09:08:44,434:INFO:              jinja2: 3.1.2
2024-05-01 09:08:44,435:INFO:               scipy: 1.11.1
2024-05-01 09:08:44,435:INFO:              joblib: 1.2.0
2024-05-01 09:08:44,435:INFO:             sklearn: 1.4.2
2024-05-01 09:08:44,435:INFO:                pyod: 1.1.3
2024-05-01 09:08:44,435:INFO:            imblearn: 0.12.0
2024-05-01 09:08:44,435:INFO:   category_encoders: 2.6.3
2024-05-01 09:08:44,435:INFO:            lightgbm: 4.2.0
2024-05-01 09:08:44,435:INFO:               numba: 0.57.1
2024-05-01 09:08:44,435:INFO:            requests: 2.31.0
2024-05-01 09:08:44,435:INFO:          matplotlib: 3.7.2
2024-05-01 09:08:44,435:INFO:          scikitplot: 0.3.7
2024-05-01 09:08:44,435:INFO:         yellowbrick: 1.5
2024-05-01 09:08:44,435:INFO:              plotly: 5.21.0
2024-05-01 09:08:44,435:INFO:    plotly-resampler: Not installed
2024-05-01 09:08:44,435:INFO:             kaleido: 0.2.1
2024-05-01 09:08:44,435:INFO:           schemdraw: 0.15
2024-05-01 09:08:44,435:INFO:         statsmodels: 0.14.0
2024-05-01 09:08:44,435:INFO:              sktime: 0.26.0
2024-05-01 09:08:44,436:INFO:               tbats: 1.1.3
2024-05-01 09:08:44,436:INFO:            pmdarima: 2.0.4
2024-05-01 09:08:44,436:INFO:              psutil: 5.9.0
2024-05-01 09:08:44,436:INFO:          markupsafe: 2.1.1
2024-05-01 09:08:44,436:INFO:             pickle5: Not installed
2024-05-01 09:08:44,436:INFO:         cloudpickle: 2.2.1
2024-05-01 09:08:44,436:INFO:         deprecation: 2.1.0
2024-05-01 09:08:44,436:INFO:              xxhash: 2.0.2
2024-05-01 09:08:44,436:INFO:           wurlitzer: Not installed
2024-05-01 09:08:44,436:INFO:PyCaret optional dependencies:
2024-05-01 09:08:44,529:INFO:                shap: Not installed
2024-05-01 09:08:44,529:INFO:           interpret: Not installed
2024-05-01 09:08:44,529:INFO:                umap: Not installed
2024-05-01 09:08:44,529:INFO:     ydata_profiling: Not installed
2024-05-01 09:08:44,529:INFO:  explainerdashboard: Not installed
2024-05-01 09:08:44,530:INFO:             autoviz: Not installed
2024-05-01 09:08:44,530:INFO:           fairlearn: Not installed
2024-05-01 09:08:44,530:INFO:          deepchecks: Not installed
2024-05-01 09:08:44,530:INFO:             xgboost: 2.0.3
2024-05-01 09:08:44,530:INFO:            catboost: Not installed
2024-05-01 09:08:44,530:INFO:              kmodes: Not installed
2024-05-01 09:08:44,530:INFO:             mlxtend: 0.23.0
2024-05-01 09:08:44,530:INFO:       statsforecast: Not installed
2024-05-01 09:08:44,530:INFO:        tune_sklearn: Not installed
2024-05-01 09:08:44,530:INFO:                 ray: Not installed
2024-05-01 09:08:44,530:INFO:            hyperopt: Not installed
2024-05-01 09:08:44,530:INFO:              optuna: Not installed
2024-05-01 09:08:44,530:INFO:               skopt: Not installed
2024-05-01 09:08:44,530:INFO:              mlflow: Not installed
2024-05-01 09:08:44,530:INFO:              gradio: Not installed
2024-05-01 09:08:44,530:INFO:             fastapi: Not installed
2024-05-01 09:08:44,530:INFO:             uvicorn: Not installed
2024-05-01 09:08:44,530:INFO:              m2cgen: Not installed
2024-05-01 09:08:44,530:INFO:           evidently: Not installed
2024-05-01 09:08:44,530:INFO:               fugue: Not installed
2024-05-01 09:08:44,530:INFO:           streamlit: Not installed
2024-05-01 09:08:44,531:INFO:             prophet: Not installed
2024-05-01 09:08:44,531:INFO:None
2024-05-01 09:08:44,531:INFO:Set up data.
2024-05-01 09:08:44,539:INFO:Set up folding strategy.
2024-05-01 09:08:44,539:INFO:Set up train/test split.
2024-05-01 09:08:44,556:INFO:Set up index.
2024-05-01 09:08:44,556:INFO:Assigning column types.
2024-05-01 09:08:44,590:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-01 09:08:44,591:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-01 09:08:44,594:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-01 09:08:44,598:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-01 09:08:44,668:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-01 09:08:44,714:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-01 09:08:44,714:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-01 09:08:44,717:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 09:08:44,717:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-01 09:08:44,721:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-01 09:08:44,728:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-01 09:08:44,800:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-01 09:08:44,842:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-01 09:08:44,843:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-01 09:08:44,845:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 09:08:44,845:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-01 09:08:44,850:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-01 09:08:44,854:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-01 09:08:44,921:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-01 09:08:44,965:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-01 09:08:44,966:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-01 09:08:44,969:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 09:08:44,973:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-01 09:08:44,978:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-01 09:08:45,040:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-01 09:08:45,073:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-01 09:08:45,073:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-01 09:08:45,073:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 09:08:45,073:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-01 09:08:45,090:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-01 09:08:45,165:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-01 09:08:45,205:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-01 09:08:45,206:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-01 09:08:45,209:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 09:08:45,217:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-01 09:08:45,284:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-01 09:08:45,327:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-01 09:08:45,327:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-01 09:08:45,329:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 09:08:45,330:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-01 09:08:45,405:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-01 09:08:45,439:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-01 09:08:45,439:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-01 09:08:45,439:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 09:08:45,534:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-01 09:08:45,578:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-01 09:08:45,579:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-01 09:08:45,581:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 09:08:45,582:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-01 09:08:45,665:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-01 09:08:45,706:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-01 09:08:45,709:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 09:08:45,774:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-01 09:08:45,824:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-01 09:08:45,824:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 09:08:45,824:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-01 09:08:45,941:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-01 09:08:45,941:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 09:08:46,060:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-01 09:08:46,062:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 09:08:46,073:INFO:Preparing preprocessing pipeline...
2024-05-01 09:08:46,073:INFO:Set up simple imputation.
2024-05-01 09:08:46,141:INFO:Finished creating preprocessing pipeline.
2024-05-01 09:08:46,158:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\1104-27\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering',
                                             'steering_remote', 'leahter_seat',
                                             'driver_elec_seat',
                                             'pass_elec_seat', 'back_elec_seat',
                                             'driver_memory_seat',
                                             'massage_seat',
                                             'supervision_cluster',
                                             'paddle_shift', 'hi_pass',
                                             'pass_memory_seat',
                                             'back_heated_seat', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2024-05-01 09:08:46,158:INFO:Creating final display dataframe.
2024-05-01 09:08:46,431:INFO:Setup _display_container:                     Description             Value
0                    Session id              7479
1                        Target             price
2                   Target type        Regression
3           Original data shape        (1977, 99)
4        Transformed data shape        (1977, 99)
5   Transformed train set shape        (1581, 99)
6    Transformed test set shape         (396, 99)
7              Numeric features                82
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              5498
2024-05-01 09:08:46,558:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-01 09:08:46,558:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 09:08:46,675:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-01 09:08:46,675:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 09:08:46,675:INFO:setup() successfully completed in 3.17s...............
2024-05-01 09:08:57,106:INFO:gpu_param set to False
2024-05-01 09:08:57,231:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-01 09:08:57,231:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 09:08:57,336:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-01 09:08:57,351:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 09:09:17,438:INFO:Initializing compare_models()
2024-05-01 09:09:17,438:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002572CBF0050>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002572CBF0050>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-05-01 09:09:17,438:INFO:Checking exceptions
2024-05-01 09:09:17,445:INFO:Preparing display monitor
2024-05-01 09:09:17,475:INFO:Initializing Linear Regression
2024-05-01 09:09:17,475:INFO:Total runtime is 0.0 minutes
2024-05-01 09:09:17,479:INFO:SubProcess create_model() called ==================================
2024-05-01 09:09:17,480:INFO:Initializing create_model()
2024-05-01 09:09:17,480:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002572CBF0050>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572F8AF450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:09:17,480:INFO:Checking exceptions
2024-05-01 09:09:17,480:INFO:Importing libraries
2024-05-01 09:09:17,480:INFO:Copying training dataset
2024-05-01 09:09:17,506:INFO:Defining folds
2024-05-01 09:09:17,506:INFO:Declaring metric variables
2024-05-01 09:09:17,506:INFO:Importing untrained model
2024-05-01 09:09:17,506:INFO:Linear Regression Imported successfully
2024-05-01 09:09:17,506:INFO:Starting cross validation
2024-05-01 09:09:17,527:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:09:24,880:INFO:Calculating mean and std
2024-05-01 09:09:24,880:INFO:Creating metrics dataframe
2024-05-01 09:09:24,880:INFO:Uploading results into container
2024-05-01 09:09:24,880:INFO:Uploading model into container now
2024-05-01 09:09:24,880:INFO:_master_model_container: 1
2024-05-01 09:09:24,880:INFO:_display_container: 2
2024-05-01 09:09:24,880:INFO:LinearRegression(n_jobs=-1)
2024-05-01 09:09:24,880:INFO:create_model() successfully completed......................................
2024-05-01 09:09:24,967:INFO:SubProcess create_model() end ==================================
2024-05-01 09:09:24,967:INFO:Creating metrics dataframe
2024-05-01 09:09:24,982:INFO:Initializing Lasso Regression
2024-05-01 09:09:24,982:INFO:Total runtime is 0.12511401573816935 minutes
2024-05-01 09:09:24,982:INFO:SubProcess create_model() called ==================================
2024-05-01 09:09:24,982:INFO:Initializing create_model()
2024-05-01 09:09:24,982:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002572CBF0050>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572F8AF450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:09:24,982:INFO:Checking exceptions
2024-05-01 09:09:24,982:INFO:Importing libraries
2024-05-01 09:09:24,982:INFO:Copying training dataset
2024-05-01 09:09:25,022:INFO:Defining folds
2024-05-01 09:09:25,022:INFO:Declaring metric variables
2024-05-01 09:09:25,022:INFO:Importing untrained model
2024-05-01 09:09:25,032:INFO:Lasso Regression Imported successfully
2024-05-01 09:09:25,032:INFO:Starting cross validation
2024-05-01 09:09:25,046:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:09:25,243:INFO:Calculating mean and std
2024-05-01 09:09:25,243:INFO:Creating metrics dataframe
2024-05-01 09:09:25,243:INFO:Uploading results into container
2024-05-01 09:09:25,243:INFO:Uploading model into container now
2024-05-01 09:09:25,243:INFO:_master_model_container: 2
2024-05-01 09:09:25,243:INFO:_display_container: 2
2024-05-01 09:09:25,243:INFO:Lasso(random_state=7479)
2024-05-01 09:09:25,243:INFO:create_model() successfully completed......................................
2024-05-01 09:09:25,317:INFO:SubProcess create_model() end ==================================
2024-05-01 09:09:25,330:INFO:Creating metrics dataframe
2024-05-01 09:09:25,340:INFO:Initializing Ridge Regression
2024-05-01 09:09:25,341:INFO:Total runtime is 0.13107836246490479 minutes
2024-05-01 09:09:25,344:INFO:SubProcess create_model() called ==================================
2024-05-01 09:09:25,344:INFO:Initializing create_model()
2024-05-01 09:09:25,344:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002572CBF0050>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572F8AF450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:09:25,345:INFO:Checking exceptions
2024-05-01 09:09:25,345:INFO:Importing libraries
2024-05-01 09:09:25,345:INFO:Copying training dataset
2024-05-01 09:09:25,370:INFO:Defining folds
2024-05-01 09:09:25,370:INFO:Declaring metric variables
2024-05-01 09:09:25,373:INFO:Importing untrained model
2024-05-01 09:09:25,376:INFO:Ridge Regression Imported successfully
2024-05-01 09:09:25,383:INFO:Starting cross validation
2024-05-01 09:09:25,384:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:09:25,536:INFO:Calculating mean and std
2024-05-01 09:09:25,536:INFO:Creating metrics dataframe
2024-05-01 09:09:25,538:INFO:Uploading results into container
2024-05-01 09:09:25,538:INFO:Uploading model into container now
2024-05-01 09:09:25,539:INFO:_master_model_container: 3
2024-05-01 09:09:25,539:INFO:_display_container: 2
2024-05-01 09:09:25,539:INFO:Ridge(random_state=7479)
2024-05-01 09:09:25,540:INFO:create_model() successfully completed......................................
2024-05-01 09:09:25,615:INFO:SubProcess create_model() end ==================================
2024-05-01 09:09:25,615:INFO:Creating metrics dataframe
2024-05-01 09:09:25,615:INFO:Initializing Elastic Net
2024-05-01 09:09:25,615:INFO:Total runtime is 0.1356535037358602 minutes
2024-05-01 09:09:25,631:INFO:SubProcess create_model() called ==================================
2024-05-01 09:09:25,631:INFO:Initializing create_model()
2024-05-01 09:09:25,631:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002572CBF0050>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572F8AF450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:09:25,631:INFO:Checking exceptions
2024-05-01 09:09:25,631:INFO:Importing libraries
2024-05-01 09:09:25,631:INFO:Copying training dataset
2024-05-01 09:09:25,652:INFO:Defining folds
2024-05-01 09:09:25,652:INFO:Declaring metric variables
2024-05-01 09:09:25,652:INFO:Importing untrained model
2024-05-01 09:09:25,666:INFO:Elastic Net Imported successfully
2024-05-01 09:09:25,666:INFO:Starting cross validation
2024-05-01 09:09:25,666:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:09:25,846:INFO:Calculating mean and std
2024-05-01 09:09:25,847:INFO:Creating metrics dataframe
2024-05-01 09:09:25,848:INFO:Uploading results into container
2024-05-01 09:09:25,848:INFO:Uploading model into container now
2024-05-01 09:09:25,848:INFO:_master_model_container: 4
2024-05-01 09:09:25,848:INFO:_display_container: 2
2024-05-01 09:09:25,848:INFO:ElasticNet(random_state=7479)
2024-05-01 09:09:25,848:INFO:create_model() successfully completed......................................
2024-05-01 09:09:25,931:INFO:SubProcess create_model() end ==================================
2024-05-01 09:09:25,931:INFO:Creating metrics dataframe
2024-05-01 09:09:25,931:INFO:Initializing Least Angle Regression
2024-05-01 09:09:25,931:INFO:Total runtime is 0.14092281659444172 minutes
2024-05-01 09:09:25,931:INFO:SubProcess create_model() called ==================================
2024-05-01 09:09:25,931:INFO:Initializing create_model()
2024-05-01 09:09:25,931:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002572CBF0050>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572F8AF450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:09:25,931:INFO:Checking exceptions
2024-05-01 09:09:25,931:INFO:Importing libraries
2024-05-01 09:09:25,931:INFO:Copying training dataset
2024-05-01 09:09:25,966:INFO:Defining folds
2024-05-01 09:09:25,966:INFO:Declaring metric variables
2024-05-01 09:09:25,966:INFO:Importing untrained model
2024-05-01 09:09:25,966:INFO:Least Angle Regression Imported successfully
2024-05-01 09:09:25,983:INFO:Starting cross validation
2024-05-01 09:09:25,984:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:09:26,147:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 102 iterations, i.e. alpha=3.808e+00, with an active set of 80 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-05-01 09:09:26,148:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 106 iterations, i.e. alpha=3.321e+00, with an active set of 83 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-05-01 09:09:26,150:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 109 iterations, i.e. alpha=2.973e+00, with an active set of 85 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-05-01 09:09:26,151:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 109 iterations, i.e. alpha=2.787e+00, with an active set of 85 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-05-01 09:09:26,151:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 110 iterations, i.e. alpha=2.327e+00, with an active set of 86 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-05-01 09:09:26,152:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 112 iterations, i.e. alpha=1.448e+00, with an active set of 88 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-05-01 09:09:26,152:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 113 iterations, i.e. alpha=1.226e+00, with an active set of 89 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-05-01 09:09:26,152:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 116 iterations, i.e. alpha=2.849e+00, with an active set of 91 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-05-01 09:09:26,153:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 116 iterations, i.e. alpha=8.578e-01, with an active set of 91 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-05-01 09:09:26,153:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 117 iterations, i.e. alpha=7.011e-01, with an active set of 92 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-05-01 09:09:26,153:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 117 iterations, i.e. alpha=2.024e-01, with an active set of 92 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-05-01 09:09:26,153:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 118 iterations, i.e. alpha=1.621e-01, with an active set of 93 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-05-01 09:09:26,154:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 119 iterations, i.e. alpha=1.235e-01, with an active set of 94 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-05-01 09:09:26,154:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 120 iterations, i.e. alpha=9.959e-03, with an active set of 95 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-05-01 09:09:26,154:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 120 iterations, i.e. alpha=3.017e-03, with an active set of 95 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-05-01 09:09:26,155:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 121 iterations, i.e. alpha=3.485e-04, with an active set of 96 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-05-01 09:09:26,155:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 122 iterations, i.e. alpha=1.264e-05, with an active set of 97 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2024-05-01 09:09:26,219:INFO:Calculating mean and std
2024-05-01 09:09:26,220:INFO:Creating metrics dataframe
2024-05-01 09:09:26,221:INFO:Uploading results into container
2024-05-01 09:09:26,222:INFO:Uploading model into container now
2024-05-01 09:09:26,222:INFO:_master_model_container: 5
2024-05-01 09:09:26,222:INFO:_display_container: 2
2024-05-01 09:09:26,223:INFO:Lars(random_state=7479)
2024-05-01 09:09:26,223:INFO:create_model() successfully completed......................................
2024-05-01 09:09:26,298:INFO:SubProcess create_model() end ==================================
2024-05-01 09:09:26,298:INFO:Creating metrics dataframe
2024-05-01 09:09:26,314:INFO:Initializing Lasso Least Angle Regression
2024-05-01 09:09:26,314:INFO:Total runtime is 0.14731763203938802 minutes
2024-05-01 09:09:26,314:INFO:SubProcess create_model() called ==================================
2024-05-01 09:09:26,314:INFO:Initializing create_model()
2024-05-01 09:09:26,314:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002572CBF0050>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572F8AF450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:09:26,314:INFO:Checking exceptions
2024-05-01 09:09:26,314:INFO:Importing libraries
2024-05-01 09:09:26,314:INFO:Copying training dataset
2024-05-01 09:09:26,348:INFO:Defining folds
2024-05-01 09:09:26,348:INFO:Declaring metric variables
2024-05-01 09:09:26,348:INFO:Importing untrained model
2024-05-01 09:09:26,348:INFO:Lasso Least Angle Regression Imported successfully
2024-05-01 09:09:26,368:INFO:Starting cross validation
2024-05-01 09:09:26,368:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:09:26,548:INFO:Calculating mean and std
2024-05-01 09:09:26,548:INFO:Creating metrics dataframe
2024-05-01 09:09:26,548:INFO:Uploading results into container
2024-05-01 09:09:26,548:INFO:Uploading model into container now
2024-05-01 09:09:26,548:INFO:_master_model_container: 6
2024-05-01 09:09:26,548:INFO:_display_container: 2
2024-05-01 09:09:26,548:INFO:LassoLars(random_state=7479)
2024-05-01 09:09:26,548:INFO:create_model() successfully completed......................................
2024-05-01 09:09:26,632:INFO:SubProcess create_model() end ==================================
2024-05-01 09:09:26,632:INFO:Creating metrics dataframe
2024-05-01 09:09:26,632:INFO:Initializing Orthogonal Matching Pursuit
2024-05-01 09:09:26,632:INFO:Total runtime is 0.15260254542032878 minutes
2024-05-01 09:09:26,648:INFO:SubProcess create_model() called ==================================
2024-05-01 09:09:26,648:INFO:Initializing create_model()
2024-05-01 09:09:26,648:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002572CBF0050>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572F8AF450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:09:26,648:INFO:Checking exceptions
2024-05-01 09:09:26,648:INFO:Importing libraries
2024-05-01 09:09:26,648:INFO:Copying training dataset
2024-05-01 09:09:26,670:INFO:Defining folds
2024-05-01 09:09:26,670:INFO:Declaring metric variables
2024-05-01 09:09:26,670:INFO:Importing untrained model
2024-05-01 09:09:26,682:INFO:Orthogonal Matching Pursuit Imported successfully
2024-05-01 09:09:26,685:INFO:Starting cross validation
2024-05-01 09:09:26,685:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:09:26,842:INFO:Calculating mean and std
2024-05-01 09:09:26,843:INFO:Creating metrics dataframe
2024-05-01 09:09:26,845:INFO:Uploading results into container
2024-05-01 09:09:26,845:INFO:Uploading model into container now
2024-05-01 09:09:26,845:INFO:_master_model_container: 7
2024-05-01 09:09:26,845:INFO:_display_container: 2
2024-05-01 09:09:26,846:INFO:OrthogonalMatchingPursuit()
2024-05-01 09:09:26,846:INFO:create_model() successfully completed......................................
2024-05-01 09:09:26,929:INFO:SubProcess create_model() end ==================================
2024-05-01 09:09:26,929:INFO:Creating metrics dataframe
2024-05-01 09:09:26,939:INFO:Initializing Bayesian Ridge
2024-05-01 09:09:26,939:INFO:Total runtime is 0.15772281090418497 minutes
2024-05-01 09:09:26,942:INFO:SubProcess create_model() called ==================================
2024-05-01 09:09:26,943:INFO:Initializing create_model()
2024-05-01 09:09:26,943:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002572CBF0050>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572F8AF450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:09:26,943:INFO:Checking exceptions
2024-05-01 09:09:26,943:INFO:Importing libraries
2024-05-01 09:09:26,943:INFO:Copying training dataset
2024-05-01 09:09:26,970:INFO:Defining folds
2024-05-01 09:09:26,970:INFO:Declaring metric variables
2024-05-01 09:09:26,973:INFO:Importing untrained model
2024-05-01 09:09:26,976:INFO:Bayesian Ridge Imported successfully
2024-05-01 09:09:26,981:INFO:Starting cross validation
2024-05-01 09:09:26,983:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:09:27,148:INFO:Calculating mean and std
2024-05-01 09:09:27,148:INFO:Creating metrics dataframe
2024-05-01 09:09:27,148:INFO:Uploading results into container
2024-05-01 09:09:27,148:INFO:Uploading model into container now
2024-05-01 09:09:27,148:INFO:_master_model_container: 8
2024-05-01 09:09:27,148:INFO:_display_container: 2
2024-05-01 09:09:27,148:INFO:BayesianRidge()
2024-05-01 09:09:27,148:INFO:create_model() successfully completed......................................
2024-05-01 09:09:27,232:INFO:SubProcess create_model() end ==================================
2024-05-01 09:09:27,232:INFO:Creating metrics dataframe
2024-05-01 09:09:27,249:INFO:Initializing Passive Aggressive Regressor
2024-05-01 09:09:27,249:INFO:Total runtime is 0.1628894527753194 minutes
2024-05-01 09:09:27,249:INFO:SubProcess create_model() called ==================================
2024-05-01 09:09:27,249:INFO:Initializing create_model()
2024-05-01 09:09:27,249:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002572CBF0050>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572F8AF450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:09:27,249:INFO:Checking exceptions
2024-05-01 09:09:27,249:INFO:Importing libraries
2024-05-01 09:09:27,249:INFO:Copying training dataset
2024-05-01 09:09:27,282:INFO:Defining folds
2024-05-01 09:09:27,282:INFO:Declaring metric variables
2024-05-01 09:09:27,282:INFO:Importing untrained model
2024-05-01 09:09:27,282:INFO:Passive Aggressive Regressor Imported successfully
2024-05-01 09:09:27,298:INFO:Starting cross validation
2024-05-01 09:09:27,299:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:09:27,464:INFO:Calculating mean and std
2024-05-01 09:09:27,464:INFO:Creating metrics dataframe
2024-05-01 09:09:27,464:INFO:Uploading results into container
2024-05-01 09:09:27,464:INFO:Uploading model into container now
2024-05-01 09:09:27,464:INFO:_master_model_container: 9
2024-05-01 09:09:27,464:INFO:_display_container: 2
2024-05-01 09:09:27,464:INFO:PassiveAggressiveRegressor(random_state=7479)
2024-05-01 09:09:27,464:INFO:create_model() successfully completed......................................
2024-05-01 09:09:27,548:INFO:SubProcess create_model() end ==================================
2024-05-01 09:09:27,548:INFO:Creating metrics dataframe
2024-05-01 09:09:27,548:INFO:Initializing Huber Regressor
2024-05-01 09:09:27,548:INFO:Total runtime is 0.1678723692893982 minutes
2024-05-01 09:09:27,563:INFO:SubProcess create_model() called ==================================
2024-05-01 09:09:27,563:INFO:Initializing create_model()
2024-05-01 09:09:27,563:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002572CBF0050>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572F8AF450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:09:27,563:INFO:Checking exceptions
2024-05-01 09:09:27,563:INFO:Importing libraries
2024-05-01 09:09:27,563:INFO:Copying training dataset
2024-05-01 09:09:27,588:INFO:Defining folds
2024-05-01 09:09:27,588:INFO:Declaring metric variables
2024-05-01 09:09:27,588:INFO:Importing untrained model
2024-05-01 09:09:27,600:INFO:Huber Regressor Imported successfully
2024-05-01 09:09:27,601:INFO:Starting cross validation
2024-05-01 09:09:27,601:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:09:27,905:INFO:Calculating mean and std
2024-05-01 09:09:27,905:INFO:Creating metrics dataframe
2024-05-01 09:09:27,905:INFO:Uploading results into container
2024-05-01 09:09:27,916:INFO:Uploading model into container now
2024-05-01 09:09:27,916:INFO:_master_model_container: 10
2024-05-01 09:09:27,916:INFO:_display_container: 2
2024-05-01 09:09:27,916:INFO:HuberRegressor()
2024-05-01 09:09:27,916:INFO:create_model() successfully completed......................................
2024-05-01 09:09:27,999:INFO:SubProcess create_model() end ==================================
2024-05-01 09:09:27,999:INFO:Creating metrics dataframe
2024-05-01 09:09:27,999:INFO:Initializing K Neighbors Regressor
2024-05-01 09:09:27,999:INFO:Total runtime is 0.17540176312128702 minutes
2024-05-01 09:09:28,015:INFO:SubProcess create_model() called ==================================
2024-05-01 09:09:28,016:INFO:Initializing create_model()
2024-05-01 09:09:28,016:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002572CBF0050>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572F8AF450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:09:28,016:INFO:Checking exceptions
2024-05-01 09:09:28,016:INFO:Importing libraries
2024-05-01 09:09:28,016:INFO:Copying training dataset
2024-05-01 09:09:28,039:INFO:Defining folds
2024-05-01 09:09:28,039:INFO:Declaring metric variables
2024-05-01 09:09:28,039:INFO:Importing untrained model
2024-05-01 09:09:28,050:INFO:K Neighbors Regressor Imported successfully
2024-05-01 09:09:28,050:INFO:Starting cross validation
2024-05-01 09:09:28,050:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:09:28,433:INFO:Calculating mean and std
2024-05-01 09:09:28,433:INFO:Creating metrics dataframe
2024-05-01 09:09:28,433:INFO:Uploading results into container
2024-05-01 09:09:28,433:INFO:Uploading model into container now
2024-05-01 09:09:28,433:INFO:_master_model_container: 11
2024-05-01 09:09:28,433:INFO:_display_container: 2
2024-05-01 09:09:28,433:INFO:KNeighborsRegressor(n_jobs=-1)
2024-05-01 09:09:28,433:INFO:create_model() successfully completed......................................
2024-05-01 09:09:28,517:INFO:SubProcess create_model() end ==================================
2024-05-01 09:09:28,517:INFO:Creating metrics dataframe
2024-05-01 09:09:28,539:INFO:Initializing Decision Tree Regressor
2024-05-01 09:09:28,539:INFO:Total runtime is 0.18439691066741942 minutes
2024-05-01 09:09:28,542:INFO:SubProcess create_model() called ==================================
2024-05-01 09:09:28,542:INFO:Initializing create_model()
2024-05-01 09:09:28,542:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002572CBF0050>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572F8AF450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:09:28,542:INFO:Checking exceptions
2024-05-01 09:09:28,542:INFO:Importing libraries
2024-05-01 09:09:28,542:INFO:Copying training dataset
2024-05-01 09:09:28,567:INFO:Defining folds
2024-05-01 09:09:28,567:INFO:Declaring metric variables
2024-05-01 09:09:28,567:INFO:Importing untrained model
2024-05-01 09:09:28,567:INFO:Decision Tree Regressor Imported successfully
2024-05-01 09:09:28,567:INFO:Starting cross validation
2024-05-01 09:09:28,567:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:09:28,781:INFO:Calculating mean and std
2024-05-01 09:09:28,782:INFO:Creating metrics dataframe
2024-05-01 09:09:28,783:INFO:Uploading results into container
2024-05-01 09:09:28,783:INFO:Uploading model into container now
2024-05-01 09:09:28,783:INFO:_master_model_container: 12
2024-05-01 09:09:28,783:INFO:_display_container: 2
2024-05-01 09:09:28,783:INFO:DecisionTreeRegressor(random_state=7479)
2024-05-01 09:09:28,783:INFO:create_model() successfully completed......................................
2024-05-01 09:09:28,856:INFO:SubProcess create_model() end ==================================
2024-05-01 09:09:28,867:INFO:Creating metrics dataframe
2024-05-01 09:09:28,867:INFO:Initializing Random Forest Regressor
2024-05-01 09:09:28,867:INFO:Total runtime is 0.18986093997955322 minutes
2024-05-01 09:09:28,867:INFO:SubProcess create_model() called ==================================
2024-05-01 09:09:28,867:INFO:Initializing create_model()
2024-05-01 09:09:28,867:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002572CBF0050>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572F8AF450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:09:28,867:INFO:Checking exceptions
2024-05-01 09:09:28,883:INFO:Importing libraries
2024-05-01 09:09:28,883:INFO:Copying training dataset
2024-05-01 09:09:28,909:INFO:Defining folds
2024-05-01 09:09:28,909:INFO:Declaring metric variables
2024-05-01 09:09:28,909:INFO:Importing untrained model
2024-05-01 09:09:28,919:INFO:Random Forest Regressor Imported successfully
2024-05-01 09:09:28,919:INFO:Starting cross validation
2024-05-01 09:09:28,919:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:09:32,338:INFO:Calculating mean and std
2024-05-01 09:09:32,340:INFO:Creating metrics dataframe
2024-05-01 09:09:32,341:INFO:Uploading results into container
2024-05-01 09:09:32,342:INFO:Uploading model into container now
2024-05-01 09:09:32,342:INFO:_master_model_container: 13
2024-05-01 09:09:32,342:INFO:_display_container: 2
2024-05-01 09:09:32,343:INFO:RandomForestRegressor(n_jobs=-1, random_state=7479)
2024-05-01 09:09:32,343:INFO:create_model() successfully completed......................................
2024-05-01 09:09:32,434:INFO:SubProcess create_model() end ==================================
2024-05-01 09:09:32,434:INFO:Creating metrics dataframe
2024-05-01 09:09:32,448:INFO:Initializing Extra Trees Regressor
2024-05-01 09:09:32,449:INFO:Total runtime is 0.24955258766810098 minutes
2024-05-01 09:09:32,452:INFO:SubProcess create_model() called ==================================
2024-05-01 09:09:32,453:INFO:Initializing create_model()
2024-05-01 09:09:32,453:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002572CBF0050>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572F8AF450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:09:32,453:INFO:Checking exceptions
2024-05-01 09:09:32,453:INFO:Importing libraries
2024-05-01 09:09:32,453:INFO:Copying training dataset
2024-05-01 09:09:32,479:INFO:Defining folds
2024-05-01 09:09:32,479:INFO:Declaring metric variables
2024-05-01 09:09:32,483:INFO:Importing untrained model
2024-05-01 09:09:32,486:INFO:Extra Trees Regressor Imported successfully
2024-05-01 09:09:32,491:INFO:Starting cross validation
2024-05-01 09:09:32,491:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:09:36,507:INFO:Calculating mean and std
2024-05-01 09:09:36,508:INFO:Creating metrics dataframe
2024-05-01 09:09:36,508:INFO:Uploading results into container
2024-05-01 09:09:36,508:INFO:Uploading model into container now
2024-05-01 09:09:36,508:INFO:_master_model_container: 14
2024-05-01 09:09:36,508:INFO:_display_container: 2
2024-05-01 09:09:36,508:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=7479)
2024-05-01 09:09:36,508:INFO:create_model() successfully completed......................................
2024-05-01 09:09:36,591:INFO:SubProcess create_model() end ==================================
2024-05-01 09:09:36,591:INFO:Creating metrics dataframe
2024-05-01 09:09:36,591:INFO:Initializing AdaBoost Regressor
2024-05-01 09:09:36,607:INFO:Total runtime is 0.31860124270121254 minutes
2024-05-01 09:09:36,610:INFO:SubProcess create_model() called ==================================
2024-05-01 09:09:36,610:INFO:Initializing create_model()
2024-05-01 09:09:36,610:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002572CBF0050>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572F8AF450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:09:36,610:INFO:Checking exceptions
2024-05-01 09:09:36,610:INFO:Importing libraries
2024-05-01 09:09:36,610:INFO:Copying training dataset
2024-05-01 09:09:36,641:INFO:Defining folds
2024-05-01 09:09:36,641:INFO:Declaring metric variables
2024-05-01 09:09:36,641:INFO:Importing untrained model
2024-05-01 09:09:36,641:INFO:AdaBoost Regressor Imported successfully
2024-05-01 09:09:36,658:INFO:Starting cross validation
2024-05-01 09:09:36,659:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:09:37,499:INFO:Calculating mean and std
2024-05-01 09:09:37,499:INFO:Creating metrics dataframe
2024-05-01 09:09:37,499:INFO:Uploading results into container
2024-05-01 09:09:37,499:INFO:Uploading model into container now
2024-05-01 09:09:37,499:INFO:_master_model_container: 15
2024-05-01 09:09:37,499:INFO:_display_container: 2
2024-05-01 09:09:37,499:INFO:AdaBoostRegressor(random_state=7479)
2024-05-01 09:09:37,499:INFO:create_model() successfully completed......................................
2024-05-01 09:09:37,591:INFO:SubProcess create_model() end ==================================
2024-05-01 09:09:37,591:INFO:Creating metrics dataframe
2024-05-01 09:09:37,607:INFO:Initializing Gradient Boosting Regressor
2024-05-01 09:09:37,607:INFO:Total runtime is 0.33552080392837524 minutes
2024-05-01 09:09:37,607:INFO:SubProcess create_model() called ==================================
2024-05-01 09:09:37,607:INFO:Initializing create_model()
2024-05-01 09:09:37,607:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002572CBF0050>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572F8AF450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:09:37,607:INFO:Checking exceptions
2024-05-01 09:09:37,607:INFO:Importing libraries
2024-05-01 09:09:37,607:INFO:Copying training dataset
2024-05-01 09:09:37,632:INFO:Defining folds
2024-05-01 09:09:37,632:INFO:Declaring metric variables
2024-05-01 09:09:37,632:INFO:Importing untrained model
2024-05-01 09:09:37,632:INFO:Gradient Boosting Regressor Imported successfully
2024-05-01 09:09:37,647:INFO:Starting cross validation
2024-05-01 09:09:37,647:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:09:38,694:INFO:Calculating mean and std
2024-05-01 09:09:38,694:INFO:Creating metrics dataframe
2024-05-01 09:09:38,694:INFO:Uploading results into container
2024-05-01 09:09:38,694:INFO:Uploading model into container now
2024-05-01 09:09:38,694:INFO:_master_model_container: 16
2024-05-01 09:09:38,694:INFO:_display_container: 2
2024-05-01 09:09:38,694:INFO:GradientBoostingRegressor(random_state=7479)
2024-05-01 09:09:38,694:INFO:create_model() successfully completed......................................
2024-05-01 09:09:38,786:INFO:SubProcess create_model() end ==================================
2024-05-01 09:09:38,786:INFO:Creating metrics dataframe
2024-05-01 09:09:38,801:INFO:Initializing Extreme Gradient Boosting
2024-05-01 09:09:38,801:INFO:Total runtime is 0.35542845726013184 minutes
2024-05-01 09:09:38,804:INFO:SubProcess create_model() called ==================================
2024-05-01 09:09:38,804:INFO:Initializing create_model()
2024-05-01 09:09:38,804:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002572CBF0050>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572F8AF450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:09:38,805:INFO:Checking exceptions
2024-05-01 09:09:38,805:INFO:Importing libraries
2024-05-01 09:09:38,805:INFO:Copying training dataset
2024-05-01 09:09:38,838:INFO:Defining folds
2024-05-01 09:09:38,838:INFO:Declaring metric variables
2024-05-01 09:09:38,841:INFO:Importing untrained model
2024-05-01 09:09:38,847:INFO:Extreme Gradient Boosting Imported successfully
2024-05-01 09:09:38,855:INFO:Starting cross validation
2024-05-01 09:09:38,856:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:09:39,488:INFO:Calculating mean and std
2024-05-01 09:09:39,488:INFO:Creating metrics dataframe
2024-05-01 09:09:39,488:INFO:Uploading results into container
2024-05-01 09:09:39,488:INFO:Uploading model into container now
2024-05-01 09:09:39,488:INFO:_master_model_container: 17
2024-05-01 09:09:39,488:INFO:_display_container: 2
2024-05-01 09:09:39,488:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=7479, ...)
2024-05-01 09:09:39,488:INFO:create_model() successfully completed......................................
2024-05-01 09:09:39,576:INFO:SubProcess create_model() end ==================================
2024-05-01 09:09:39,576:INFO:Creating metrics dataframe
2024-05-01 09:09:39,592:INFO:Initializing Light Gradient Boosting Machine
2024-05-01 09:09:39,592:INFO:Total runtime is 0.36861084699630736 minutes
2024-05-01 09:09:39,595:INFO:SubProcess create_model() called ==================================
2024-05-01 09:09:39,595:INFO:Initializing create_model()
2024-05-01 09:09:39,595:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002572CBF0050>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572F8AF450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:09:39,595:INFO:Checking exceptions
2024-05-01 09:09:39,595:INFO:Importing libraries
2024-05-01 09:09:39,595:INFO:Copying training dataset
2024-05-01 09:09:39,617:INFO:Defining folds
2024-05-01 09:09:39,617:INFO:Declaring metric variables
2024-05-01 09:09:39,617:INFO:Importing untrained model
2024-05-01 09:09:39,627:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-01 09:09:39,631:INFO:Starting cross validation
2024-05-01 09:09:39,631:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:09:40,669:INFO:Calculating mean and std
2024-05-01 09:09:40,671:INFO:Creating metrics dataframe
2024-05-01 09:09:40,674:INFO:Uploading results into container
2024-05-01 09:09:40,675:INFO:Uploading model into container now
2024-05-01 09:09:40,676:INFO:_master_model_container: 18
2024-05-01 09:09:40,676:INFO:_display_container: 2
2024-05-01 09:09:40,676:INFO:LGBMRegressor(n_jobs=-1, random_state=7479)
2024-05-01 09:09:40,677:INFO:create_model() successfully completed......................................
2024-05-01 09:09:40,796:INFO:SubProcess create_model() end ==================================
2024-05-01 09:09:40,796:INFO:Creating metrics dataframe
2024-05-01 09:09:40,809:INFO:Initializing Dummy Regressor
2024-05-01 09:09:40,809:INFO:Total runtime is 0.3888874093691508 minutes
2024-05-01 09:09:40,812:INFO:SubProcess create_model() called ==================================
2024-05-01 09:09:40,813:INFO:Initializing create_model()
2024-05-01 09:09:40,813:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002572CBF0050>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572F8AF450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:09:40,813:INFO:Checking exceptions
2024-05-01 09:09:40,813:INFO:Importing libraries
2024-05-01 09:09:40,813:INFO:Copying training dataset
2024-05-01 09:09:40,838:INFO:Defining folds
2024-05-01 09:09:40,839:INFO:Declaring metric variables
2024-05-01 09:09:40,842:INFO:Importing untrained model
2024-05-01 09:09:40,844:INFO:Dummy Regressor Imported successfully
2024-05-01 09:09:40,851:INFO:Starting cross validation
2024-05-01 09:09:40,851:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:09:40,996:INFO:Calculating mean and std
2024-05-01 09:09:40,996:INFO:Creating metrics dataframe
2024-05-01 09:09:40,996:INFO:Uploading results into container
2024-05-01 09:09:40,996:INFO:Uploading model into container now
2024-05-01 09:09:40,996:INFO:_master_model_container: 19
2024-05-01 09:09:40,996:INFO:_display_container: 2
2024-05-01 09:09:40,996:INFO:DummyRegressor()
2024-05-01 09:09:40,996:INFO:create_model() successfully completed......................................
2024-05-01 09:09:41,079:INFO:SubProcess create_model() end ==================================
2024-05-01 09:09:41,079:INFO:Creating metrics dataframe
2024-05-01 09:09:41,096:INFO:Initializing create_model()
2024-05-01 09:09:41,096:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002572CBF0050>, estimator=GradientBoostingRegressor(random_state=7479), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:09:41,096:INFO:Checking exceptions
2024-05-01 09:09:41,096:INFO:Importing libraries
2024-05-01 09:09:41,096:INFO:Copying training dataset
2024-05-01 09:09:41,134:INFO:Defining folds
2024-05-01 09:09:41,134:INFO:Declaring metric variables
2024-05-01 09:09:41,134:INFO:Importing untrained model
2024-05-01 09:09:41,134:INFO:Declaring custom model
2024-05-01 09:09:41,135:INFO:Gradient Boosting Regressor Imported successfully
2024-05-01 09:09:41,135:INFO:Cross validation set to False
2024-05-01 09:09:41,135:INFO:Fitting Model
2024-05-01 09:09:41,502:INFO:GradientBoostingRegressor(random_state=7479)
2024-05-01 09:09:41,502:INFO:create_model() successfully completed......................................
2024-05-01 09:09:41,577:INFO:Initializing create_model()
2024-05-01 09:09:41,577:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002572CBF0050>, estimator=LGBMRegressor(n_jobs=-1, random_state=7479), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:09:41,577:INFO:Checking exceptions
2024-05-01 09:09:41,577:INFO:Importing libraries
2024-05-01 09:09:41,577:INFO:Copying training dataset
2024-05-01 09:09:41,618:INFO:Defining folds
2024-05-01 09:09:41,618:INFO:Declaring metric variables
2024-05-01 09:09:41,619:INFO:Importing untrained model
2024-05-01 09:09:41,619:INFO:Declaring custom model
2024-05-01 09:09:41,619:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-01 09:09:41,620:INFO:Cross validation set to False
2024-05-01 09:09:41,620:INFO:Fitting Model
2024-05-01 09:09:41,646:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.001176 seconds.
2024-05-01 09:09:41,646:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-05-01 09:09:41,646:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-05-01 09:09:41,646:INFO:[LightGBM] [Info] Total Bins 460
2024-05-01 09:09:41,646:INFO:[LightGBM] [Info] Number of data points in the train set: 1581, number of used features: 94
2024-05-01 09:09:41,646:INFO:[LightGBM] [Info] Start training from score 1678.150538
2024-05-01 09:09:41,746:INFO:LGBMRegressor(n_jobs=-1, random_state=7479)
2024-05-01 09:09:41,746:INFO:create_model() successfully completed......................................
2024-05-01 09:09:41,880:INFO:Initializing create_model()
2024-05-01 09:09:41,880:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002572CBF0050>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=7479), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:09:41,880:INFO:Checking exceptions
2024-05-01 09:09:41,880:INFO:Importing libraries
2024-05-01 09:09:41,880:INFO:Copying training dataset
2024-05-01 09:09:41,897:INFO:Defining folds
2024-05-01 09:09:41,912:INFO:Declaring metric variables
2024-05-01 09:09:41,912:INFO:Importing untrained model
2024-05-01 09:09:41,912:INFO:Declaring custom model
2024-05-01 09:09:41,913:INFO:Extra Trees Regressor Imported successfully
2024-05-01 09:09:41,914:INFO:Cross validation set to False
2024-05-01 09:09:41,914:INFO:Fitting Model
2024-05-01 09:09:42,380:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=7479)
2024-05-01 09:09:42,380:INFO:create_model() successfully completed......................................
2024-05-01 09:09:42,464:INFO:Initializing create_model()
2024-05-01 09:09:42,464:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002572CBF0050>, estimator=RandomForestRegressor(n_jobs=-1, random_state=7479), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:09:42,464:INFO:Checking exceptions
2024-05-01 09:09:42,464:INFO:Importing libraries
2024-05-01 09:09:42,464:INFO:Copying training dataset
2024-05-01 09:09:42,501:INFO:Defining folds
2024-05-01 09:09:42,501:INFO:Declaring metric variables
2024-05-01 09:09:42,501:INFO:Importing untrained model
2024-05-01 09:09:42,501:INFO:Declaring custom model
2024-05-01 09:09:42,501:INFO:Random Forest Regressor Imported successfully
2024-05-01 09:09:42,501:INFO:Cross validation set to False
2024-05-01 09:09:42,501:INFO:Fitting Model
2024-05-01 09:09:42,904:INFO:RandomForestRegressor(n_jobs=-1, random_state=7479)
2024-05-01 09:09:42,904:INFO:create_model() successfully completed......................................
2024-05-01 09:09:42,993:INFO:Initializing create_model()
2024-05-01 09:09:42,993:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002572CBF0050>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=7479, ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:09:42,993:INFO:Checking exceptions
2024-05-01 09:09:42,994:INFO:Importing libraries
2024-05-01 09:09:42,995:INFO:Copying training dataset
2024-05-01 09:09:43,026:INFO:Defining folds
2024-05-01 09:09:43,026:INFO:Declaring metric variables
2024-05-01 09:09:43,026:INFO:Importing untrained model
2024-05-01 09:09:43,026:INFO:Declaring custom model
2024-05-01 09:09:43,028:INFO:Extreme Gradient Boosting Imported successfully
2024-05-01 09:09:43,028:INFO:Cross validation set to False
2024-05-01 09:09:43,029:INFO:Fitting Model
2024-05-01 09:09:43,252:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=7479, ...)
2024-05-01 09:09:43,252:INFO:create_model() successfully completed......................................
2024-05-01 09:09:43,418:INFO:_master_model_container: 19
2024-05-01 09:09:43,418:INFO:_display_container: 2
2024-05-01 09:09:43,418:INFO:[GradientBoostingRegressor(random_state=7479), LGBMRegressor(n_jobs=-1, random_state=7479), ExtraTreesRegressor(n_jobs=-1, random_state=7479), RandomForestRegressor(n_jobs=-1, random_state=7479), XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=7479, ...)]
2024-05-01 09:09:43,418:INFO:compare_models() successfully completed......................................
2024-05-01 09:11:54,072:INFO:Initializing blend_models()
2024-05-01 09:11:54,072:INFO:blend_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002572CBF0050>, estimator_list=[GradientBoostingRegressor(random_state=7479), LGBMRegressor(n_jobs=-1, random_state=7479), ExtraTreesRegressor(n_jobs=-1, random_state=7479), RandomForestRegressor(n_jobs=-1, random_state=7479), XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=7479, ...)], fold=10, round=4, choose_better=False, optimize=RMSE, method=auto, weights=None, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-05-01 09:11:54,073:INFO:Checking exceptions
2024-05-01 09:11:54,100:INFO:Importing libraries
2024-05-01 09:11:54,100:INFO:Copying training dataset
2024-05-01 09:11:54,100:INFO:Getting model names
2024-05-01 09:11:54,100:INFO:SubProcess create_model() called ==================================
2024-05-01 09:11:54,116:INFO:Initializing create_model()
2024-05-01 09:11:54,116:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002572CBF0050>, estimator=VotingRegressor(estimators=[('Gradient Boosting Regressor',
                             GradientBoostingRegressor(random_state=7479)),
                            ('Light Gradient Boosting Machine',
                             LGBMRegressor(n_jobs=-1, random_state=7479)),
                            ('Extra Trees Regressor',
                             ExtraTreesRegressor(n_jobs=-1, random_state=7479)),
                            ('Random Forest Regressor',
                             RandomForestRegressor(n_jobs=-1,
                                                   random_state=7479)),
                            ('Extreme Gradient Boos...
                                          gamma=None, grow_policy=None,
                                          importance_type=None,
                                          interaction_constraints=None,
                                          learning_rate=None, max_bin=None,
                                          max_cat_threshold=None,
                                          max_cat_to_onehot=None,
                                          max_delta_step=None, max_depth=None,
                                          max_leaves=None,
                                          min_child_weight=None, missing=nan,
                                          monotone_constraints=None,
                                          multi_strategy=None,
                                          n_estimators=None, n_jobs=-1,
                                          num_parallel_tree=None,
                                          random_state=7479, ...))],
                n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572CC77010>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:11:54,116:INFO:Checking exceptions
2024-05-01 09:11:54,116:INFO:Importing libraries
2024-05-01 09:11:54,116:INFO:Copying training dataset
2024-05-01 09:11:54,145:INFO:Defining folds
2024-05-01 09:11:54,145:INFO:Declaring metric variables
2024-05-01 09:11:54,148:INFO:Importing untrained model
2024-05-01 09:11:54,148:INFO:Declaring custom model
2024-05-01 09:11:54,155:INFO:Voting Regressor Imported successfully
2024-05-01 09:11:54,162:INFO:Starting cross validation
2024-05-01 09:11:54,163:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:12:04,116:INFO:Calculating mean and std
2024-05-01 09:12:04,116:INFO:Creating metrics dataframe
2024-05-01 09:12:04,132:INFO:Finalizing model
2024-05-01 09:12:05,291:INFO:Uploading results into container
2024-05-01 09:12:05,291:INFO:Uploading model into container now
2024-05-01 09:12:05,291:INFO:_master_model_container: 20
2024-05-01 09:12:05,291:INFO:_display_container: 3
2024-05-01 09:12:05,326:INFO:VotingRegressor(estimators=[('Gradient Boosting Regressor',
                             GradientBoostingRegressor(random_state=7479)),
                            ('Light Gradient Boosting Machine',
                             LGBMRegressor(n_jobs=-1, random_state=7479)),
                            ('Extra Trees Regressor',
                             ExtraTreesRegressor(n_jobs=-1, random_state=7479)),
                            ('Random Forest Regressor',
                             RandomForestRegressor(n_jobs=-1,
                                                   random_state=7479)),
                            ('Extreme Gradient Boos...
                                          gamma=None, grow_policy=None,
                                          importance_type=None,
                                          interaction_constraints=None,
                                          learning_rate=None, max_bin=None,
                                          max_cat_threshold=None,
                                          max_cat_to_onehot=None,
                                          max_delta_step=None, max_depth=None,
                                          max_leaves=None,
                                          min_child_weight=None, missing=nan,
                                          monotone_constraints=None,
                                          multi_strategy=None,
                                          n_estimators=None, n_jobs=-1,
                                          num_parallel_tree=None,
                                          random_state=7479, ...))],
                n_jobs=-1)
2024-05-01 09:12:05,327:INFO:create_model() successfully completed......................................
2024-05-01 09:12:05,457:INFO:SubProcess create_model() end ==================================
2024-05-01 09:12:05,477:INFO:_master_model_container: 20
2024-05-01 09:12:05,477:INFO:_display_container: 3
2024-05-01 09:12:05,492:INFO:VotingRegressor(estimators=[('Gradient Boosting Regressor',
                             GradientBoostingRegressor(random_state=7479)),
                            ('Light Gradient Boosting Machine',
                             LGBMRegressor(n_jobs=-1, random_state=7479)),
                            ('Extra Trees Regressor',
                             ExtraTreesRegressor(n_jobs=-1, random_state=7479)),
                            ('Random Forest Regressor',
                             RandomForestRegressor(n_jobs=-1,
                                                   random_state=7479)),
                            ('Extreme Gradient Boos...
                                          gamma=None, grow_policy=None,
                                          importance_type=None,
                                          interaction_constraints=None,
                                          learning_rate=None, max_bin=None,
                                          max_cat_threshold=None,
                                          max_cat_to_onehot=None,
                                          max_delta_step=None, max_depth=None,
                                          max_leaves=None,
                                          min_child_weight=None, missing=nan,
                                          monotone_constraints=None,
                                          multi_strategy=None,
                                          n_estimators=None, n_jobs=-1,
                                          num_parallel_tree=None,
                                          random_state=7479, ...))],
                n_jobs=-1)
2024-05-01 09:12:05,493:INFO:blend_models() successfully completed......................................
2024-05-01 09:16:26,368:INFO:Initializing finalize_model()
2024-05-01 09:16:26,369:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002572CBF0050>, estimator=VotingRegressor(estimators=[('Gradient Boosting Regressor',
                             GradientBoostingRegressor(random_state=7479)),
                            ('Light Gradient Boosting Machine',
                             LGBMRegressor(n_jobs=-1, random_state=7479)),
                            ('Extra Trees Regressor',
                             ExtraTreesRegressor(n_jobs=-1, random_state=7479)),
                            ('Random Forest Regressor',
                             RandomForestRegressor(n_jobs=-1,
                                                   random_state=7479)),
                            ('Extreme Gradient Boos...
                                          gamma=None, grow_policy=None,
                                          importance_type=None,
                                          interaction_constraints=None,
                                          learning_rate=None, max_bin=None,
                                          max_cat_threshold=None,
                                          max_cat_to_onehot=None,
                                          max_delta_step=None, max_depth=None,
                                          max_leaves=None,
                                          min_child_weight=None, missing=nan,
                                          monotone_constraints=None,
                                          multi_strategy=None,
                                          n_estimators=None, n_jobs=-1,
                                          num_parallel_tree=None,
                                          random_state=7479, ...))],
                n_jobs=-1), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-01 09:16:26,369:INFO:Finalizing VotingRegressor(estimators=[('Gradient Boosting Regressor',
                             GradientBoostingRegressor(random_state=7479)),
                            ('Light Gradient Boosting Machine',
                             LGBMRegressor(n_jobs=-1, random_state=7479)),
                            ('Extra Trees Regressor',
                             ExtraTreesRegressor(n_jobs=-1, random_state=7479)),
                            ('Random Forest Regressor',
                             RandomForestRegressor(n_jobs=-1,
                                                   random_state=7479)),
                            ('Extreme Gradient Boos...
                                          gamma=None, grow_policy=None,
                                          importance_type=None,
                                          interaction_constraints=None,
                                          learning_rate=None, max_bin=None,
                                          max_cat_threshold=None,
                                          max_cat_to_onehot=None,
                                          max_delta_step=None, max_depth=None,
                                          max_leaves=None,
                                          min_child_weight=None, missing=nan,
                                          monotone_constraints=None,
                                          multi_strategy=None,
                                          n_estimators=None, n_jobs=-1,
                                          num_parallel_tree=None,
                                          random_state=7479, ...))],
                n_jobs=-1)
2024-05-01 09:16:26,399:INFO:Initializing create_model()
2024-05-01 09:16:26,399:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002572CBF0050>, estimator=VotingRegressor(estimators=[('Gradient Boosting Regressor',
                             GradientBoostingRegressor(random_state=7479)),
                            ('Light Gradient Boosting Machine',
                             LGBMRegressor(n_jobs=-1, random_state=7479)),
                            ('Extra Trees Regressor',
                             ExtraTreesRegressor(n_jobs=-1, random_state=7479)),
                            ('Random Forest Regressor',
                             RandomForestRegressor(n_jobs=-1,
                                                   random_state=7479)),
                            ('Extreme Gradient Boos...
                                          gamma=None, grow_policy=None,
                                          importance_type=None,
                                          interaction_constraints=None,
                                          learning_rate=None, max_bin=None,
                                          max_cat_threshold=None,
                                          max_cat_to_onehot=None,
                                          max_delta_step=None, max_depth=None,
                                          max_leaves=None,
                                          min_child_weight=None, missing=nan,
                                          monotone_constraints=None,
                                          multi_strategy=None,
                                          n_estimators=None, n_jobs=-1,
                                          num_parallel_tree=None,
                                          random_state=7479, ...))],
                n_jobs=-1), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:16:26,399:INFO:Checking exceptions
2024-05-01 09:16:26,400:INFO:Importing libraries
2024-05-01 09:16:26,401:INFO:Copying training dataset
2024-05-01 09:16:26,402:INFO:Defining folds
2024-05-01 09:16:26,402:INFO:Declaring metric variables
2024-05-01 09:16:26,402:INFO:Importing untrained model
2024-05-01 09:16:26,402:INFO:Declaring custom model
2024-05-01 09:16:26,405:INFO:Voting Regressor Imported successfully
2024-05-01 09:16:26,405:INFO:Cross validation set to False
2024-05-01 09:16:26,405:INFO:Fitting Model
2024-05-01 09:16:28,786:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering',
                                             'steering_remote', 'leahter_seat',
                                             'driver...
                                                           grow_policy=None,
                                                           importance_type=None,
                                                           interaction_constraints=None,
                                                           learning_rate=None,
                                                           max_bin=None,
                                                           max_cat_threshold=None,
                                                           max_cat_to_onehot=None,
                                                           max_delta_step=None,
                                                           max_depth=None,
                                                           max_leaves=None,
                                                           min_child_weight=None,
                                                           missing=nan,
                                                           monotone_constraints=None,
                                                           multi_strategy=None,
                                                           n_estimators=None,
                                                           n_jobs=-1,
                                                           num_parallel_tree=None,
                                                           random_state=7479, ...))],
                                 n_jobs=-1))])
2024-05-01 09:16:28,786:INFO:create_model() successfully completed......................................
2024-05-01 09:16:28,903:INFO:_master_model_container: 20
2024-05-01 09:16:28,903:INFO:_display_container: 3
2024-05-01 09:16:28,936:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering',
                                             'steering_remote', 'leahter_seat',
                                             'driver...
                                                           grow_policy=None,
                                                           importance_type=None,
                                                           interaction_constraints=None,
                                                           learning_rate=None,
                                                           max_bin=None,
                                                           max_cat_threshold=None,
                                                           max_cat_to_onehot=None,
                                                           max_delta_step=None,
                                                           max_depth=None,
                                                           max_leaves=None,
                                                           min_child_weight=None,
                                                           missing=nan,
                                                           monotone_constraints=None,
                                                           multi_strategy=None,
                                                           n_estimators=None,
                                                           n_jobs=-1,
                                                           num_parallel_tree=None,
                                                           random_state=7479, ...))],
                                 n_jobs=-1))])
2024-05-01 09:16:28,936:INFO:finalize_model() successfully completed......................................
2024-05-01 09:18:45,984:INFO:PyCaret RegressionExperiment
2024-05-01 09:18:45,984:INFO:Logging name: reg-default-name
2024-05-01 09:18:45,984:INFO:ML Usecase: MLUsecase.REGRESSION
2024-05-01 09:18:45,985:INFO:version 3.3.2
2024-05-01 09:18:45,985:INFO:Initializing setup()
2024-05-01 09:18:45,985:INFO:self.USI: a21e
2024-05-01 09:18:45,985:INFO:self._variable_keys: {'memory', 'USI', 'seed', 'html_param', '_ml_usecase', 'y_test', 'exp_name_log', 'X_train', 'y_train', '_available_plots', 'fold_groups_param', 'exp_id', 'gpu_param', 'logging_param', 'n_jobs_param', 'gpu_n_jobs_param', 'fold_generator', 'idx', 'X', 'fold_shuffle_param', 'target_param', 'log_plots_param', 'X_test', 'data', 'transform_target_param', 'y', 'pipeline'}
2024-05-01 09:18:45,985:INFO:Checking environment
2024-05-01 09:18:45,985:INFO:python_version: 3.11.5
2024-05-01 09:18:45,985:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-05-01 09:18:45,985:INFO:machine: AMD64
2024-05-01 09:18:45,985:INFO:platform: Windows-10-10.0.19045-SP0
2024-05-01 09:18:45,985:INFO:Memory: svmem(total=17087496192, available=9490280448, percent=44.5, used=7597215744, free=9490280448)
2024-05-01 09:18:45,985:INFO:Physical Core: 4
2024-05-01 09:18:45,985:INFO:Logical Core: 8
2024-05-01 09:18:45,985:INFO:Checking libraries
2024-05-01 09:18:45,985:INFO:System:
2024-05-01 09:18:45,985:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-05-01 09:18:45,986:INFO:executable: C:\Users\1104-27\anaconda3\python.exe
2024-05-01 09:18:45,986:INFO:   machine: Windows-10-10.0.19045-SP0
2024-05-01 09:18:45,986:INFO:PyCaret required dependencies:
2024-05-01 09:18:45,986:INFO:                 pip: 23.2.1
2024-05-01 09:18:45,986:INFO:          setuptools: 68.0.0
2024-05-01 09:18:45,986:INFO:             pycaret: 3.3.2
2024-05-01 09:18:45,986:INFO:             IPython: 8.15.0
2024-05-01 09:18:45,986:INFO:          ipywidgets: 8.0.4
2024-05-01 09:18:45,986:INFO:                tqdm: 4.65.0
2024-05-01 09:18:45,986:INFO:               numpy: 1.24.3
2024-05-01 09:18:45,986:INFO:              pandas: 2.0.3
2024-05-01 09:18:45,986:INFO:              jinja2: 3.1.2
2024-05-01 09:18:45,986:INFO:               scipy: 1.11.1
2024-05-01 09:18:45,986:INFO:              joblib: 1.2.0
2024-05-01 09:18:45,986:INFO:             sklearn: 1.4.2
2024-05-01 09:18:45,986:INFO:                pyod: 1.1.3
2024-05-01 09:18:45,986:INFO:            imblearn: 0.12.0
2024-05-01 09:18:45,986:INFO:   category_encoders: 2.6.3
2024-05-01 09:18:45,986:INFO:            lightgbm: 4.2.0
2024-05-01 09:18:45,987:INFO:               numba: 0.57.1
2024-05-01 09:18:45,987:INFO:            requests: 2.31.0
2024-05-01 09:18:45,987:INFO:          matplotlib: 3.7.2
2024-05-01 09:18:45,987:INFO:          scikitplot: 0.3.7
2024-05-01 09:18:45,987:INFO:         yellowbrick: 1.5
2024-05-01 09:18:45,987:INFO:              plotly: 5.21.0
2024-05-01 09:18:45,987:INFO:    plotly-resampler: Not installed
2024-05-01 09:18:45,987:INFO:             kaleido: 0.2.1
2024-05-01 09:18:45,987:INFO:           schemdraw: 0.15
2024-05-01 09:18:45,987:INFO:         statsmodels: 0.14.0
2024-05-01 09:18:45,988:INFO:              sktime: 0.26.0
2024-05-01 09:18:45,988:INFO:               tbats: 1.1.3
2024-05-01 09:18:45,988:INFO:            pmdarima: 2.0.4
2024-05-01 09:18:45,988:INFO:              psutil: 5.9.0
2024-05-01 09:18:45,988:INFO:          markupsafe: 2.1.1
2024-05-01 09:18:45,988:INFO:             pickle5: Not installed
2024-05-01 09:18:45,988:INFO:         cloudpickle: 2.2.1
2024-05-01 09:18:45,988:INFO:         deprecation: 2.1.0
2024-05-01 09:18:45,988:INFO:              xxhash: 2.0.2
2024-05-01 09:18:45,988:INFO:           wurlitzer: Not installed
2024-05-01 09:18:45,988:INFO:PyCaret optional dependencies:
2024-05-01 09:18:45,988:INFO:                shap: Not installed
2024-05-01 09:18:45,988:INFO:           interpret: Not installed
2024-05-01 09:18:45,988:INFO:                umap: Not installed
2024-05-01 09:18:45,988:INFO:     ydata_profiling: Not installed
2024-05-01 09:18:45,988:INFO:  explainerdashboard: Not installed
2024-05-01 09:18:45,988:INFO:             autoviz: Not installed
2024-05-01 09:18:45,989:INFO:           fairlearn: Not installed
2024-05-01 09:18:45,989:INFO:          deepchecks: Not installed
2024-05-01 09:18:45,989:INFO:             xgboost: 2.0.3
2024-05-01 09:18:45,989:INFO:            catboost: Not installed
2024-05-01 09:18:45,989:INFO:              kmodes: Not installed
2024-05-01 09:18:45,989:INFO:             mlxtend: 0.23.0
2024-05-01 09:18:45,989:INFO:       statsforecast: Not installed
2024-05-01 09:18:45,989:INFO:        tune_sklearn: Not installed
2024-05-01 09:18:45,989:INFO:                 ray: Not installed
2024-05-01 09:18:45,989:INFO:            hyperopt: Not installed
2024-05-01 09:18:45,989:INFO:              optuna: Not installed
2024-05-01 09:18:45,989:INFO:               skopt: Not installed
2024-05-01 09:18:45,989:INFO:              mlflow: Not installed
2024-05-01 09:18:45,989:INFO:              gradio: Not installed
2024-05-01 09:18:45,989:INFO:             fastapi: Not installed
2024-05-01 09:18:45,989:INFO:             uvicorn: Not installed
2024-05-01 09:18:45,989:INFO:              m2cgen: Not installed
2024-05-01 09:18:45,989:INFO:           evidently: Not installed
2024-05-01 09:18:45,989:INFO:               fugue: Not installed
2024-05-01 09:18:45,990:INFO:           streamlit: Not installed
2024-05-01 09:18:45,990:INFO:             prophet: Not installed
2024-05-01 09:18:45,990:INFO:None
2024-05-01 09:18:45,990:INFO:Set up data.
2024-05-01 09:18:46,007:INFO:Set up folding strategy.
2024-05-01 09:18:46,007:INFO:Set up train/test split.
2024-05-01 09:18:46,026:INFO:Set up index.
2024-05-01 09:18:46,027:INFO:Assigning column types.
2024-05-01 09:18:46,042:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-01 09:18:46,042:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-01 09:18:46,047:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-01 09:18:46,051:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-01 09:18:46,103:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-01 09:18:46,150:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-01 09:18:46,150:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-01 09:18:46,150:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 09:18:46,150:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-05-01 09:18:46,150:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-01 09:18:46,166:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-01 09:18:46,224:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-01 09:18:46,274:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-01 09:18:46,274:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-01 09:18:46,274:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 09:18:46,274:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-05-01 09:18:46,274:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-01 09:18:46,274:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-01 09:18:46,340:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-01 09:18:46,390:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-01 09:18:46,390:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-01 09:18:46,390:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 09:18:46,390:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-05-01 09:18:46,390:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-01 09:18:46,474:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-01 09:18:46,507:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-01 09:18:46,507:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-01 09:18:46,507:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 09:18:46,507:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-05-01 09:18:46,524:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-01 09:18:46,591:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-01 09:18:46,624:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-01 09:18:46,624:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-01 09:18:46,624:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 09:18:46,641:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-05-01 09:18:46,707:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-01 09:18:46,741:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-01 09:18:46,741:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-01 09:18:46,741:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 09:18:46,741:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-05-01 09:18:46,832:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-01 09:18:46,874:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-01 09:18:46,874:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-01 09:18:46,874:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 09:18:46,941:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-01 09:18:46,991:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-01 09:18:46,991:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-01 09:18:46,991:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 09:18:46,991:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-01 09:18:47,074:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-01 09:18:47,108:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-01 09:18:47,108:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 09:18:47,191:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-05-01 09:18:47,238:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-01 09:18:47,241:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 09:18:47,241:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-05-01 09:18:47,358:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-01 09:18:47,358:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 09:18:47,475:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-01 09:18:47,475:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 09:18:47,475:INFO:Preparing preprocessing pipeline...
2024-05-01 09:18:47,475:INFO:Set up simple imputation.
2024-05-01 09:18:47,542:INFO:Finished creating preprocessing pipeline.
2024-05-01 09:18:47,542:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\1104-27\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering',
                                             'steering_remote', 'leahter_seat',
                                             'driver_elec_seat',
                                             'pass_elec_seat', 'back_elec_seat',
                                             'driver_memory_seat',
                                             'massage_seat',
                                             'supervision_cluster',
                                             'paddle_shift', 'hi_pass',
                                             'pass_memory_seat',
                                             'back_heated_seat', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2024-05-01 09:18:47,542:INFO:Creating final display dataframe.
2024-05-01 09:18:47,792:INFO:Setup _display_container:                     Description             Value
0                    Session id              4724
1                        Target             price
2                   Target type        Regression
3           Original data shape        (1977, 99)
4        Transformed data shape        (1977, 99)
5   Transformed train set shape        (1581, 99)
6    Transformed test set shape         (396, 99)
7              Numeric features                82
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              a21e
2024-05-01 09:18:47,924:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-01 09:18:47,924:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 09:18:48,033:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-01 09:18:48,033:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 09:18:48,033:INFO:setup() successfully completed in 2.05s...............
2024-05-01 09:18:48,048:INFO:gpu_param set to False
2024-05-01 09:18:48,155:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-01 09:18:48,171:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 09:18:48,290:INFO:Soft dependency imported: xgboost: 2.0.3
2024-05-01 09:18:48,292:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 09:18:48,301:INFO:Initializing compare_models()
2024-05-01 09:18:48,301:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-05-01 09:18:48,301:INFO:Checking exceptions
2024-05-01 09:18:48,315:INFO:Preparing display monitor
2024-05-01 09:18:48,332:INFO:Initializing Linear Regression
2024-05-01 09:18:48,332:INFO:Total runtime is 0.0 minutes
2024-05-01 09:18:48,343:INFO:SubProcess create_model() called ==================================
2024-05-01 09:18:48,343:INFO:Initializing create_model()
2024-05-01 09:18:48,343:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025733CF5D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:18:48,343:INFO:Checking exceptions
2024-05-01 09:18:48,343:INFO:Importing libraries
2024-05-01 09:18:48,343:INFO:Copying training dataset
2024-05-01 09:18:48,363:INFO:Defining folds
2024-05-01 09:18:48,363:INFO:Declaring metric variables
2024-05-01 09:18:48,363:INFO:Importing untrained model
2024-05-01 09:18:48,363:INFO:Linear Regression Imported successfully
2024-05-01 09:18:48,376:INFO:Starting cross validation
2024-05-01 09:18:48,376:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:18:48,642:INFO:Calculating mean and std
2024-05-01 09:18:48,642:INFO:Creating metrics dataframe
2024-05-01 09:18:48,642:INFO:Uploading results into container
2024-05-01 09:18:48,642:INFO:Uploading model into container now
2024-05-01 09:18:48,642:INFO:_master_model_container: 1
2024-05-01 09:18:48,642:INFO:_display_container: 2
2024-05-01 09:18:48,642:INFO:LinearRegression(n_jobs=-1)
2024-05-01 09:18:48,642:INFO:create_model() successfully completed......................................
2024-05-01 09:18:48,776:INFO:SubProcess create_model() end ==================================
2024-05-01 09:18:48,776:INFO:Creating metrics dataframe
2024-05-01 09:18:48,793:INFO:Initializing Lasso Regression
2024-05-01 09:18:48,793:INFO:Total runtime is 0.007682339350382487 minutes
2024-05-01 09:18:48,793:INFO:SubProcess create_model() called ==================================
2024-05-01 09:18:48,793:INFO:Initializing create_model()
2024-05-01 09:18:48,793:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025733CF5D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:18:48,793:INFO:Checking exceptions
2024-05-01 09:18:48,793:INFO:Importing libraries
2024-05-01 09:18:48,793:INFO:Copying training dataset
2024-05-01 09:18:48,843:INFO:Defining folds
2024-05-01 09:18:48,843:INFO:Declaring metric variables
2024-05-01 09:18:48,843:INFO:Importing untrained model
2024-05-01 09:18:48,843:INFO:Lasso Regression Imported successfully
2024-05-01 09:18:48,859:INFO:Starting cross validation
2024-05-01 09:18:48,861:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:18:49,210:INFO:Calculating mean and std
2024-05-01 09:18:49,210:INFO:Creating metrics dataframe
2024-05-01 09:18:49,210:INFO:Uploading results into container
2024-05-01 09:18:49,210:INFO:Uploading model into container now
2024-05-01 09:18:49,210:INFO:_master_model_container: 2
2024-05-01 09:18:49,210:INFO:_display_container: 2
2024-05-01 09:18:49,210:INFO:Lasso(random_state=4724)
2024-05-01 09:18:49,210:INFO:create_model() successfully completed......................................
2024-05-01 09:18:49,327:INFO:SubProcess create_model() end ==================================
2024-05-01 09:18:49,327:INFO:Creating metrics dataframe
2024-05-01 09:18:49,344:INFO:Initializing Ridge Regression
2024-05-01 09:18:49,344:INFO:Total runtime is 0.0168643315633138 minutes
2024-05-01 09:18:49,344:INFO:SubProcess create_model() called ==================================
2024-05-01 09:18:49,344:INFO:Initializing create_model()
2024-05-01 09:18:49,344:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025733CF5D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:18:49,344:INFO:Checking exceptions
2024-05-01 09:18:49,344:INFO:Importing libraries
2024-05-01 09:18:49,344:INFO:Copying training dataset
2024-05-01 09:18:49,377:INFO:Defining folds
2024-05-01 09:18:49,377:INFO:Declaring metric variables
2024-05-01 09:18:49,377:INFO:Importing untrained model
2024-05-01 09:18:49,377:INFO:Ridge Regression Imported successfully
2024-05-01 09:18:49,394:INFO:Starting cross validation
2024-05-01 09:18:49,395:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:18:53,197:INFO:Calculating mean and std
2024-05-01 09:18:53,197:INFO:Creating metrics dataframe
2024-05-01 09:18:53,197:INFO:Uploading results into container
2024-05-01 09:18:53,197:INFO:Uploading model into container now
2024-05-01 09:18:53,197:INFO:_master_model_container: 3
2024-05-01 09:18:53,197:INFO:_display_container: 2
2024-05-01 09:18:53,197:INFO:Ridge(random_state=4724)
2024-05-01 09:18:53,197:INFO:create_model() successfully completed......................................
2024-05-01 09:18:53,348:INFO:SubProcess create_model() end ==================================
2024-05-01 09:18:53,348:INFO:Creating metrics dataframe
2024-05-01 09:18:53,348:INFO:Initializing Elastic Net
2024-05-01 09:18:53,348:INFO:Total runtime is 0.08359822829564412 minutes
2024-05-01 09:18:53,364:INFO:SubProcess create_model() called ==================================
2024-05-01 09:18:53,364:INFO:Initializing create_model()
2024-05-01 09:18:53,364:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025733CF5D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:18:53,364:INFO:Checking exceptions
2024-05-01 09:18:53,364:INFO:Importing libraries
2024-05-01 09:18:53,364:INFO:Copying training dataset
2024-05-01 09:18:53,386:INFO:Defining folds
2024-05-01 09:18:53,386:INFO:Declaring metric variables
2024-05-01 09:18:53,386:INFO:Importing untrained model
2024-05-01 09:18:53,398:INFO:Elastic Net Imported successfully
2024-05-01 09:18:53,400:INFO:Starting cross validation
2024-05-01 09:18:53,400:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:18:53,564:INFO:Calculating mean and std
2024-05-01 09:18:53,564:INFO:Creating metrics dataframe
2024-05-01 09:18:53,581:INFO:Uploading results into container
2024-05-01 09:18:53,581:INFO:Uploading model into container now
2024-05-01 09:18:53,581:INFO:_master_model_container: 4
2024-05-01 09:18:53,581:INFO:_display_container: 2
2024-05-01 09:18:53,581:INFO:ElasticNet(random_state=4724)
2024-05-01 09:18:53,581:INFO:create_model() successfully completed......................................
2024-05-01 09:18:53,698:INFO:SubProcess create_model() end ==================================
2024-05-01 09:18:53,698:INFO:Creating metrics dataframe
2024-05-01 09:18:53,698:INFO:Initializing Least Angle Regression
2024-05-01 09:18:53,698:INFO:Total runtime is 0.08943519194920857 minutes
2024-05-01 09:18:53,713:INFO:SubProcess create_model() called ==================================
2024-05-01 09:18:53,714:INFO:Initializing create_model()
2024-05-01 09:18:53,714:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025733CF5D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:18:53,714:INFO:Checking exceptions
2024-05-01 09:18:53,714:INFO:Importing libraries
2024-05-01 09:18:53,714:INFO:Copying training dataset
2024-05-01 09:18:53,737:INFO:Defining folds
2024-05-01 09:18:53,737:INFO:Declaring metric variables
2024-05-01 09:18:53,737:INFO:Importing untrained model
2024-05-01 09:18:53,737:INFO:Least Angle Regression Imported successfully
2024-05-01 09:18:53,752:INFO:Starting cross validation
2024-05-01 09:18:53,752:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:18:53,944:INFO:Calculating mean and std
2024-05-01 09:18:53,944:INFO:Creating metrics dataframe
2024-05-01 09:18:53,944:INFO:Uploading results into container
2024-05-01 09:18:53,944:INFO:Uploading model into container now
2024-05-01 09:18:53,944:INFO:_master_model_container: 5
2024-05-01 09:18:53,944:INFO:_display_container: 2
2024-05-01 09:18:53,944:INFO:Lars(random_state=4724)
2024-05-01 09:18:53,944:INFO:create_model() successfully completed......................................
2024-05-01 09:18:54,046:INFO:SubProcess create_model() end ==================================
2024-05-01 09:18:54,061:INFO:Creating metrics dataframe
2024-05-01 09:18:54,061:INFO:Initializing Lasso Least Angle Regression
2024-05-01 09:18:54,061:INFO:Total runtime is 0.09549144506454467 minutes
2024-05-01 09:18:54,061:INFO:SubProcess create_model() called ==================================
2024-05-01 09:18:54,061:INFO:Initializing create_model()
2024-05-01 09:18:54,061:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025733CF5D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:18:54,061:INFO:Checking exceptions
2024-05-01 09:18:54,061:INFO:Importing libraries
2024-05-01 09:18:54,061:INFO:Copying training dataset
2024-05-01 09:18:54,102:INFO:Defining folds
2024-05-01 09:18:54,102:INFO:Declaring metric variables
2024-05-01 09:18:54,105:INFO:Importing untrained model
2024-05-01 09:18:54,108:INFO:Lasso Least Angle Regression Imported successfully
2024-05-01 09:18:54,114:INFO:Starting cross validation
2024-05-01 09:18:54,114:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:18:54,282:INFO:Calculating mean and std
2024-05-01 09:18:54,282:INFO:Creating metrics dataframe
2024-05-01 09:18:54,282:INFO:Uploading results into container
2024-05-01 09:18:54,282:INFO:Uploading model into container now
2024-05-01 09:18:54,282:INFO:_master_model_container: 6
2024-05-01 09:18:54,282:INFO:_display_container: 2
2024-05-01 09:18:54,282:INFO:LassoLars(random_state=4724)
2024-05-01 09:18:54,282:INFO:create_model() successfully completed......................................
2024-05-01 09:18:54,398:INFO:SubProcess create_model() end ==================================
2024-05-01 09:18:54,398:INFO:Creating metrics dataframe
2024-05-01 09:18:54,398:INFO:Initializing Orthogonal Matching Pursuit
2024-05-01 09:18:54,398:INFO:Total runtime is 0.10111155112584432 minutes
2024-05-01 09:18:54,415:INFO:SubProcess create_model() called ==================================
2024-05-01 09:18:54,415:INFO:Initializing create_model()
2024-05-01 09:18:54,415:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025733CF5D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:18:54,415:INFO:Checking exceptions
2024-05-01 09:18:54,415:INFO:Importing libraries
2024-05-01 09:18:54,415:INFO:Copying training dataset
2024-05-01 09:18:54,438:INFO:Defining folds
2024-05-01 09:18:54,438:INFO:Declaring metric variables
2024-05-01 09:18:54,438:INFO:Importing untrained model
2024-05-01 09:18:54,438:INFO:Orthogonal Matching Pursuit Imported successfully
2024-05-01 09:18:54,453:INFO:Starting cross validation
2024-05-01 09:18:54,453:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:18:54,616:INFO:Calculating mean and std
2024-05-01 09:18:54,616:INFO:Creating metrics dataframe
2024-05-01 09:18:54,616:INFO:Uploading results into container
2024-05-01 09:18:54,616:INFO:Uploading model into container now
2024-05-01 09:18:54,616:INFO:_master_model_container: 7
2024-05-01 09:18:54,616:INFO:_display_container: 2
2024-05-01 09:18:54,616:INFO:OrthogonalMatchingPursuit()
2024-05-01 09:18:54,616:INFO:create_model() successfully completed......................................
2024-05-01 09:18:54,715:INFO:SubProcess create_model() end ==================================
2024-05-01 09:18:54,715:INFO:Creating metrics dataframe
2024-05-01 09:18:54,733:INFO:Initializing Bayesian Ridge
2024-05-01 09:18:54,733:INFO:Total runtime is 0.10668871800104776 minutes
2024-05-01 09:18:54,734:INFO:SubProcess create_model() called ==================================
2024-05-01 09:18:54,734:INFO:Initializing create_model()
2024-05-01 09:18:54,734:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025733CF5D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:18:54,734:INFO:Checking exceptions
2024-05-01 09:18:54,734:INFO:Importing libraries
2024-05-01 09:18:54,734:INFO:Copying training dataset
2024-05-01 09:18:54,755:INFO:Defining folds
2024-05-01 09:18:54,755:INFO:Declaring metric variables
2024-05-01 09:18:54,755:INFO:Importing untrained model
2024-05-01 09:18:54,768:INFO:Bayesian Ridge Imported successfully
2024-05-01 09:18:54,768:INFO:Starting cross validation
2024-05-01 09:18:54,768:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:18:54,949:INFO:Calculating mean and std
2024-05-01 09:18:54,949:INFO:Creating metrics dataframe
2024-05-01 09:18:54,949:INFO:Uploading results into container
2024-05-01 09:18:54,949:INFO:Uploading model into container now
2024-05-01 09:18:54,949:INFO:_master_model_container: 8
2024-05-01 09:18:54,949:INFO:_display_container: 2
2024-05-01 09:18:54,965:INFO:BayesianRidge()
2024-05-01 09:18:54,965:INFO:create_model() successfully completed......................................
2024-05-01 09:18:55,073:INFO:SubProcess create_model() end ==================================
2024-05-01 09:18:55,073:INFO:Creating metrics dataframe
2024-05-01 09:18:55,082:INFO:Initializing Passive Aggressive Regressor
2024-05-01 09:18:55,082:INFO:Total runtime is 0.1125124136606852 minutes
2024-05-01 09:18:55,082:INFO:SubProcess create_model() called ==================================
2024-05-01 09:18:55,082:INFO:Initializing create_model()
2024-05-01 09:18:55,082:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025733CF5D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:18:55,082:INFO:Checking exceptions
2024-05-01 09:18:55,082:INFO:Importing libraries
2024-05-01 09:18:55,082:INFO:Copying training dataset
2024-05-01 09:18:55,118:INFO:Defining folds
2024-05-01 09:18:55,118:INFO:Declaring metric variables
2024-05-01 09:18:55,118:INFO:Importing untrained model
2024-05-01 09:18:55,118:INFO:Passive Aggressive Regressor Imported successfully
2024-05-01 09:18:55,118:INFO:Starting cross validation
2024-05-01 09:18:55,133:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:18:55,300:INFO:Calculating mean and std
2024-05-01 09:18:55,300:INFO:Creating metrics dataframe
2024-05-01 09:18:55,300:INFO:Uploading results into container
2024-05-01 09:18:55,300:INFO:Uploading model into container now
2024-05-01 09:18:55,300:INFO:_master_model_container: 9
2024-05-01 09:18:55,300:INFO:_display_container: 2
2024-05-01 09:18:55,300:INFO:PassiveAggressiveRegressor(random_state=4724)
2024-05-01 09:18:55,300:INFO:create_model() successfully completed......................................
2024-05-01 09:18:55,417:INFO:SubProcess create_model() end ==================================
2024-05-01 09:18:55,417:INFO:Creating metrics dataframe
2024-05-01 09:18:55,417:INFO:Initializing Huber Regressor
2024-05-01 09:18:55,417:INFO:Total runtime is 0.11808032194773355 minutes
2024-05-01 09:18:55,435:INFO:SubProcess create_model() called ==================================
2024-05-01 09:18:55,435:INFO:Initializing create_model()
2024-05-01 09:18:55,435:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025733CF5D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:18:55,435:INFO:Checking exceptions
2024-05-01 09:18:55,435:INFO:Importing libraries
2024-05-01 09:18:55,435:INFO:Copying training dataset
2024-05-01 09:18:55,456:INFO:Defining folds
2024-05-01 09:18:55,456:INFO:Declaring metric variables
2024-05-01 09:18:55,456:INFO:Importing untrained model
2024-05-01 09:18:55,467:INFO:Huber Regressor Imported successfully
2024-05-01 09:18:55,469:INFO:Starting cross validation
2024-05-01 09:18:55,469:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:18:55,733:INFO:Calculating mean and std
2024-05-01 09:18:55,733:INFO:Creating metrics dataframe
2024-05-01 09:18:55,733:INFO:Uploading results into container
2024-05-01 09:18:55,733:INFO:Uploading model into container now
2024-05-01 09:18:55,749:INFO:_master_model_container: 10
2024-05-01 09:18:55,749:INFO:_display_container: 2
2024-05-01 09:18:55,749:INFO:HuberRegressor()
2024-05-01 09:18:55,750:INFO:create_model() successfully completed......................................
2024-05-01 09:18:55,855:INFO:SubProcess create_model() end ==================================
2024-05-01 09:18:55,855:INFO:Creating metrics dataframe
2024-05-01 09:18:55,875:INFO:Initializing K Neighbors Regressor
2024-05-01 09:18:55,875:INFO:Total runtime is 0.12571849822998046 minutes
2024-05-01 09:18:55,878:INFO:SubProcess create_model() called ==================================
2024-05-01 09:18:55,879:INFO:Initializing create_model()
2024-05-01 09:18:55,879:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025733CF5D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:18:55,879:INFO:Checking exceptions
2024-05-01 09:18:55,879:INFO:Importing libraries
2024-05-01 09:18:55,879:INFO:Copying training dataset
2024-05-01 09:18:55,906:INFO:Defining folds
2024-05-01 09:18:55,906:INFO:Declaring metric variables
2024-05-01 09:18:55,909:INFO:Importing untrained model
2024-05-01 09:18:55,912:INFO:K Neighbors Regressor Imported successfully
2024-05-01 09:18:55,916:INFO:Starting cross validation
2024-05-01 09:18:55,917:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:18:56,230:INFO:Calculating mean and std
2024-05-01 09:18:56,232:INFO:Creating metrics dataframe
2024-05-01 09:18:56,234:INFO:Uploading results into container
2024-05-01 09:18:56,235:INFO:Uploading model into container now
2024-05-01 09:18:56,235:INFO:_master_model_container: 11
2024-05-01 09:18:56,235:INFO:_display_container: 2
2024-05-01 09:18:56,235:INFO:KNeighborsRegressor(n_jobs=-1)
2024-05-01 09:18:56,236:INFO:create_model() successfully completed......................................
2024-05-01 09:18:56,349:INFO:SubProcess create_model() end ==================================
2024-05-01 09:18:56,349:INFO:Creating metrics dataframe
2024-05-01 09:18:56,362:INFO:Initializing Decision Tree Regressor
2024-05-01 09:18:56,362:INFO:Total runtime is 0.13383310635884602 minutes
2024-05-01 09:18:56,366:INFO:SubProcess create_model() called ==================================
2024-05-01 09:18:56,366:INFO:Initializing create_model()
2024-05-01 09:18:56,367:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025733CF5D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:18:56,367:INFO:Checking exceptions
2024-05-01 09:18:56,367:INFO:Importing libraries
2024-05-01 09:18:56,367:INFO:Copying training dataset
2024-05-01 09:18:56,392:INFO:Defining folds
2024-05-01 09:18:56,392:INFO:Declaring metric variables
2024-05-01 09:18:56,395:INFO:Importing untrained model
2024-05-01 09:18:56,398:INFO:Decision Tree Regressor Imported successfully
2024-05-01 09:18:56,404:INFO:Starting cross validation
2024-05-01 09:18:56,405:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:18:56,601:INFO:Calculating mean and std
2024-05-01 09:18:56,601:INFO:Creating metrics dataframe
2024-05-01 09:18:56,601:INFO:Uploading results into container
2024-05-01 09:18:56,601:INFO:Uploading model into container now
2024-05-01 09:18:56,601:INFO:_master_model_container: 12
2024-05-01 09:18:56,601:INFO:_display_container: 2
2024-05-01 09:18:56,601:INFO:DecisionTreeRegressor(random_state=4724)
2024-05-01 09:18:56,601:INFO:create_model() successfully completed......................................
2024-05-01 09:18:56,723:INFO:SubProcess create_model() end ==================================
2024-05-01 09:18:56,723:INFO:Creating metrics dataframe
2024-05-01 09:18:56,736:INFO:Initializing Random Forest Regressor
2024-05-01 09:18:56,736:INFO:Total runtime is 0.14006701310475667 minutes
2024-05-01 09:18:56,740:INFO:SubProcess create_model() called ==================================
2024-05-01 09:18:56,741:INFO:Initializing create_model()
2024-05-01 09:18:56,741:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025733CF5D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:18:56,741:INFO:Checking exceptions
2024-05-01 09:18:56,741:INFO:Importing libraries
2024-05-01 09:18:56,741:INFO:Copying training dataset
2024-05-01 09:18:56,767:INFO:Defining folds
2024-05-01 09:18:56,767:INFO:Declaring metric variables
2024-05-01 09:18:56,767:INFO:Importing untrained model
2024-05-01 09:18:56,767:INFO:Random Forest Regressor Imported successfully
2024-05-01 09:18:56,767:INFO:Starting cross validation
2024-05-01 09:18:56,767:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:19:00,304:INFO:Calculating mean and std
2024-05-01 09:19:00,304:INFO:Creating metrics dataframe
2024-05-01 09:19:00,304:INFO:Uploading results into container
2024-05-01 09:19:00,304:INFO:Uploading model into container now
2024-05-01 09:19:00,304:INFO:_master_model_container: 13
2024-05-01 09:19:00,304:INFO:_display_container: 2
2024-05-01 09:19:00,304:INFO:RandomForestRegressor(n_jobs=-1, random_state=4724)
2024-05-01 09:19:00,304:INFO:create_model() successfully completed......................................
2024-05-01 09:19:00,421:INFO:SubProcess create_model() end ==================================
2024-05-01 09:19:00,421:INFO:Creating metrics dataframe
2024-05-01 09:19:00,438:INFO:Initializing Extra Trees Regressor
2024-05-01 09:19:00,438:INFO:Total runtime is 0.20176726977030435 minutes
2024-05-01 09:19:00,438:INFO:SubProcess create_model() called ==================================
2024-05-01 09:19:00,438:INFO:Initializing create_model()
2024-05-01 09:19:00,438:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025733CF5D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:19:00,438:INFO:Checking exceptions
2024-05-01 09:19:00,438:INFO:Importing libraries
2024-05-01 09:19:00,438:INFO:Copying training dataset
2024-05-01 09:19:00,471:INFO:Defining folds
2024-05-01 09:19:00,471:INFO:Declaring metric variables
2024-05-01 09:19:00,471:INFO:Importing untrained model
2024-05-01 09:19:00,471:INFO:Extra Trees Regressor Imported successfully
2024-05-01 09:19:00,471:INFO:Starting cross validation
2024-05-01 09:19:00,487:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:19:04,508:INFO:Calculating mean and std
2024-05-01 09:19:04,524:INFO:Creating metrics dataframe
2024-05-01 09:19:04,525:INFO:Uploading results into container
2024-05-01 09:19:04,525:INFO:Uploading model into container now
2024-05-01 09:19:04,525:INFO:_master_model_container: 14
2024-05-01 09:19:04,525:INFO:_display_container: 2
2024-05-01 09:19:04,525:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4724)
2024-05-01 09:19:04,525:INFO:create_model() successfully completed......................................
2024-05-01 09:19:04,643:INFO:SubProcess create_model() end ==================================
2024-05-01 09:19:04,643:INFO:Creating metrics dataframe
2024-05-01 09:19:04,643:INFO:Initializing AdaBoost Regressor
2024-05-01 09:19:04,643:INFO:Total runtime is 0.2718475341796875 minutes
2024-05-01 09:19:04,659:INFO:SubProcess create_model() called ==================================
2024-05-01 09:19:04,659:INFO:Initializing create_model()
2024-05-01 09:19:04,659:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025733CF5D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:19:04,659:INFO:Checking exceptions
2024-05-01 09:19:04,659:INFO:Importing libraries
2024-05-01 09:19:04,659:INFO:Copying training dataset
2024-05-01 09:19:04,681:INFO:Defining folds
2024-05-01 09:19:04,681:INFO:Declaring metric variables
2024-05-01 09:19:04,681:INFO:Importing untrained model
2024-05-01 09:19:04,695:INFO:AdaBoost Regressor Imported successfully
2024-05-01 09:19:04,695:INFO:Starting cross validation
2024-05-01 09:19:04,695:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:19:05,578:INFO:Calculating mean and std
2024-05-01 09:19:05,578:INFO:Creating metrics dataframe
2024-05-01 09:19:05,578:INFO:Uploading results into container
2024-05-01 09:19:05,578:INFO:Uploading model into container now
2024-05-01 09:19:05,578:INFO:_master_model_container: 15
2024-05-01 09:19:05,578:INFO:_display_container: 2
2024-05-01 09:19:05,578:INFO:AdaBoostRegressor(random_state=4724)
2024-05-01 09:19:05,578:INFO:create_model() successfully completed......................................
2024-05-01 09:19:05,693:INFO:SubProcess create_model() end ==================================
2024-05-01 09:19:05,693:INFO:Creating metrics dataframe
2024-05-01 09:19:05,713:INFO:Initializing Gradient Boosting Regressor
2024-05-01 09:19:05,713:INFO:Total runtime is 0.28968235254287716 minutes
2024-05-01 09:19:05,713:INFO:SubProcess create_model() called ==================================
2024-05-01 09:19:05,713:INFO:Initializing create_model()
2024-05-01 09:19:05,713:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025733CF5D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:19:05,713:INFO:Checking exceptions
2024-05-01 09:19:05,713:INFO:Importing libraries
2024-05-01 09:19:05,713:INFO:Copying training dataset
2024-05-01 09:19:05,743:INFO:Defining folds
2024-05-01 09:19:05,743:INFO:Declaring metric variables
2024-05-01 09:19:05,743:INFO:Importing untrained model
2024-05-01 09:19:05,743:INFO:Gradient Boosting Regressor Imported successfully
2024-05-01 09:19:05,743:INFO:Starting cross validation
2024-05-01 09:19:05,743:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:19:06,811:INFO:Calculating mean and std
2024-05-01 09:19:06,811:INFO:Creating metrics dataframe
2024-05-01 09:19:06,811:INFO:Uploading results into container
2024-05-01 09:19:06,811:INFO:Uploading model into container now
2024-05-01 09:19:06,827:INFO:_master_model_container: 16
2024-05-01 09:19:06,827:INFO:_display_container: 2
2024-05-01 09:19:06,827:INFO:GradientBoostingRegressor(random_state=4724)
2024-05-01 09:19:06,827:INFO:create_model() successfully completed......................................
2024-05-01 09:19:06,944:INFO:SubProcess create_model() end ==================================
2024-05-01 09:19:06,944:INFO:Creating metrics dataframe
2024-05-01 09:19:06,944:INFO:Initializing Extreme Gradient Boosting
2024-05-01 09:19:06,944:INFO:Total runtime is 0.3102103153864542 minutes
2024-05-01 09:19:06,961:INFO:SubProcess create_model() called ==================================
2024-05-01 09:19:06,961:INFO:Initializing create_model()
2024-05-01 09:19:06,961:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025733CF5D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:19:06,961:INFO:Checking exceptions
2024-05-01 09:19:06,961:INFO:Importing libraries
2024-05-01 09:19:06,961:INFO:Copying training dataset
2024-05-01 09:19:06,985:INFO:Defining folds
2024-05-01 09:19:06,985:INFO:Declaring metric variables
2024-05-01 09:19:06,996:INFO:Importing untrained model
2024-05-01 09:19:06,997:INFO:Extreme Gradient Boosting Imported successfully
2024-05-01 09:19:06,997:INFO:Starting cross validation
2024-05-01 09:19:06,997:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:19:07,619:INFO:Calculating mean and std
2024-05-01 09:19:07,619:INFO:Creating metrics dataframe
2024-05-01 09:19:07,629:INFO:Uploading results into container
2024-05-01 09:19:07,630:INFO:Uploading model into container now
2024-05-01 09:19:07,630:INFO:_master_model_container: 17
2024-05-01 09:19:07,631:INFO:_display_container: 2
2024-05-01 09:19:07,631:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...)
2024-05-01 09:19:07,633:INFO:create_model() successfully completed......................................
2024-05-01 09:19:07,745:INFO:SubProcess create_model() end ==================================
2024-05-01 09:19:07,745:INFO:Creating metrics dataframe
2024-05-01 09:19:07,761:INFO:Initializing Light Gradient Boosting Machine
2024-05-01 09:19:07,761:INFO:Total runtime is 0.3238194108009338 minutes
2024-05-01 09:19:07,762:INFO:SubProcess create_model() called ==================================
2024-05-01 09:19:07,762:INFO:Initializing create_model()
2024-05-01 09:19:07,762:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025733CF5D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:19:07,762:INFO:Checking exceptions
2024-05-01 09:19:07,762:INFO:Importing libraries
2024-05-01 09:19:07,762:INFO:Copying training dataset
2024-05-01 09:19:07,784:INFO:Defining folds
2024-05-01 09:19:07,784:INFO:Declaring metric variables
2024-05-01 09:19:07,784:INFO:Importing untrained model
2024-05-01 09:19:07,798:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-01 09:19:07,798:INFO:Starting cross validation
2024-05-01 09:19:07,798:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:19:08,829:INFO:Calculating mean and std
2024-05-01 09:19:08,829:INFO:Creating metrics dataframe
2024-05-01 09:19:08,829:INFO:Uploading results into container
2024-05-01 09:19:08,845:INFO:Uploading model into container now
2024-05-01 09:19:08,846:INFO:_master_model_container: 18
2024-05-01 09:19:08,846:INFO:_display_container: 2
2024-05-01 09:19:08,847:INFO:LGBMRegressor(n_jobs=-1, random_state=4724)
2024-05-01 09:19:08,847:INFO:create_model() successfully completed......................................
2024-05-01 09:19:08,980:INFO:SubProcess create_model() end ==================================
2024-05-01 09:19:08,980:INFO:Creating metrics dataframe
2024-05-01 09:19:08,996:INFO:Initializing Dummy Regressor
2024-05-01 09:19:08,996:INFO:Total runtime is 0.34441115458806354 minutes
2024-05-01 09:19:08,996:INFO:SubProcess create_model() called ==================================
2024-05-01 09:19:08,996:INFO:Initializing create_model()
2024-05-01 09:19:08,996:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025733CF5D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:19:08,996:INFO:Checking exceptions
2024-05-01 09:19:08,996:INFO:Importing libraries
2024-05-01 09:19:08,996:INFO:Copying training dataset
2024-05-01 09:19:09,034:INFO:Defining folds
2024-05-01 09:19:09,034:INFO:Declaring metric variables
2024-05-01 09:19:09,034:INFO:Importing untrained model
2024-05-01 09:19:09,047:INFO:Dummy Regressor Imported successfully
2024-05-01 09:19:09,047:INFO:Starting cross validation
2024-05-01 09:19:09,047:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:19:09,197:INFO:Calculating mean and std
2024-05-01 09:19:09,197:INFO:Creating metrics dataframe
2024-05-01 09:19:09,214:INFO:Uploading results into container
2024-05-01 09:19:09,214:INFO:Uploading model into container now
2024-05-01 09:19:09,214:INFO:_master_model_container: 19
2024-05-01 09:19:09,214:INFO:_display_container: 2
2024-05-01 09:19:09,214:INFO:DummyRegressor()
2024-05-01 09:19:09,214:INFO:create_model() successfully completed......................................
2024-05-01 09:19:09,330:INFO:SubProcess create_model() end ==================================
2024-05-01 09:19:09,330:INFO:Creating metrics dataframe
2024-05-01 09:19:09,347:INFO:Initializing create_model()
2024-05-01 09:19:09,347:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=GradientBoostingRegressor(random_state=4724), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:19:09,347:INFO:Checking exceptions
2024-05-01 09:19:09,347:INFO:Importing libraries
2024-05-01 09:19:09,347:INFO:Copying training dataset
2024-05-01 09:19:09,383:INFO:Defining folds
2024-05-01 09:19:09,383:INFO:Declaring metric variables
2024-05-01 09:19:09,383:INFO:Importing untrained model
2024-05-01 09:19:09,383:INFO:Declaring custom model
2024-05-01 09:19:09,383:INFO:Gradient Boosting Regressor Imported successfully
2024-05-01 09:19:09,383:INFO:Cross validation set to False
2024-05-01 09:19:09,383:INFO:Fitting Model
2024-05-01 09:19:09,766:INFO:GradientBoostingRegressor(random_state=4724)
2024-05-01 09:19:09,766:INFO:create_model() successfully completed......................................
2024-05-01 09:19:09,900:INFO:Initializing create_model()
2024-05-01 09:19:09,900:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=LGBMRegressor(n_jobs=-1, random_state=4724), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:19:09,900:INFO:Checking exceptions
2024-05-01 09:19:09,900:INFO:Importing libraries
2024-05-01 09:19:09,900:INFO:Copying training dataset
2024-05-01 09:19:09,932:INFO:Defining folds
2024-05-01 09:19:09,932:INFO:Declaring metric variables
2024-05-01 09:19:09,933:INFO:Importing untrained model
2024-05-01 09:19:09,933:INFO:Declaring custom model
2024-05-01 09:19:09,933:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-01 09:19:09,934:INFO:Cross validation set to False
2024-05-01 09:19:09,934:INFO:Fitting Model
2024-05-01 09:19:09,963:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000978 seconds.
2024-05-01 09:19:09,963:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-05-01 09:19:09,963:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-05-01 09:19:09,963:INFO:[LightGBM] [Info] Total Bins 457
2024-05-01 09:19:09,963:INFO:[LightGBM] [Info] Number of data points in the train set: 1581, number of used features: 93
2024-05-01 09:19:09,963:INFO:[LightGBM] [Info] Start training from score 1686.320051
2024-05-01 09:19:10,042:INFO:LGBMRegressor(n_jobs=-1, random_state=4724)
2024-05-01 09:19:10,042:INFO:create_model() successfully completed......................................
2024-05-01 09:19:10,216:INFO:Initializing create_model()
2024-05-01 09:19:10,216:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:19:10,216:INFO:Checking exceptions
2024-05-01 09:19:10,218:INFO:Importing libraries
2024-05-01 09:19:10,218:INFO:Copying training dataset
2024-05-01 09:19:10,236:INFO:Defining folds
2024-05-01 09:19:10,236:INFO:Declaring metric variables
2024-05-01 09:19:10,236:INFO:Importing untrained model
2024-05-01 09:19:10,236:INFO:Declaring custom model
2024-05-01 09:19:10,236:INFO:Extreme Gradient Boosting Imported successfully
2024-05-01 09:19:10,248:INFO:Cross validation set to False
2024-05-01 09:19:10,248:INFO:Fitting Model
2024-05-01 09:19:10,468:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...)
2024-05-01 09:19:10,468:INFO:create_model() successfully completed......................................
2024-05-01 09:19:10,631:INFO:Initializing create_model()
2024-05-01 09:19:10,631:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4724), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:19:10,631:INFO:Checking exceptions
2024-05-01 09:19:10,631:INFO:Importing libraries
2024-05-01 09:19:10,631:INFO:Copying training dataset
2024-05-01 09:19:10,668:INFO:Defining folds
2024-05-01 09:19:10,668:INFO:Declaring metric variables
2024-05-01 09:19:10,668:INFO:Importing untrained model
2024-05-01 09:19:10,668:INFO:Declaring custom model
2024-05-01 09:19:10,668:INFO:Random Forest Regressor Imported successfully
2024-05-01 09:19:10,668:INFO:Cross validation set to False
2024-05-01 09:19:10,668:INFO:Fitting Model
2024-05-01 09:19:11,065:INFO:RandomForestRegressor(n_jobs=-1, random_state=4724)
2024-05-01 09:19:11,065:INFO:create_model() successfully completed......................................
2024-05-01 09:19:11,182:INFO:Initializing create_model()
2024-05-01 09:19:11,182:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=4724), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:19:11,182:INFO:Checking exceptions
2024-05-01 09:19:11,182:INFO:Importing libraries
2024-05-01 09:19:11,182:INFO:Copying training dataset
2024-05-01 09:19:11,201:INFO:Defining folds
2024-05-01 09:19:11,215:INFO:Declaring metric variables
2024-05-01 09:19:11,215:INFO:Importing untrained model
2024-05-01 09:19:11,215:INFO:Declaring custom model
2024-05-01 09:19:11,216:INFO:Extra Trees Regressor Imported successfully
2024-05-01 09:19:11,216:INFO:Cross validation set to False
2024-05-01 09:19:11,216:INFO:Fitting Model
2024-05-01 09:19:11,665:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4724)
2024-05-01 09:19:11,665:INFO:create_model() successfully completed......................................
2024-05-01 09:19:11,820:INFO:_master_model_container: 19
2024-05-01 09:19:11,820:INFO:_display_container: 2
2024-05-01 09:19:11,820:INFO:[GradientBoostingRegressor(random_state=4724), LGBMRegressor(n_jobs=-1, random_state=4724), XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...), RandomForestRegressor(n_jobs=-1, random_state=4724), ExtraTreesRegressor(n_jobs=-1, random_state=4724)]
2024-05-01 09:19:11,820:INFO:compare_models() successfully completed......................................
2024-05-01 09:19:11,841:INFO:Initializing blend_models()
2024-05-01 09:19:11,841:INFO:blend_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator_list=[GradientBoostingRegressor(random_state=4724), LGBMRegressor(n_jobs=-1, random_state=4724), XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...), RandomForestRegressor(n_jobs=-1, random_state=4724), ExtraTreesRegressor(n_jobs=-1, random_state=4724)], fold=10, round=4, choose_better=False, optimize=RMSE, method=auto, weights=None, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-05-01 09:19:11,841:INFO:Checking exceptions
2024-05-01 09:19:11,867:INFO:Importing libraries
2024-05-01 09:19:11,868:INFO:Copying training dataset
2024-05-01 09:19:11,871:INFO:Getting model names
2024-05-01 09:19:11,871:INFO:SubProcess create_model() called ==================================
2024-05-01 09:19:11,886:INFO:Initializing create_model()
2024-05-01 09:19:11,886:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=VotingRegressor(estimators=[('Gradient Boosting Regressor',
                             GradientBoostingRegressor(random_state=4724)),
                            ('Light Gradient Boosting Machine',
                             LGBMRegressor(n_jobs=-1, random_state=4724)),
                            ('Extreme Gradient Boosting',
                             XGBRegressor(base_score=None, booster='gbtree',
                                          callbacks=None,
                                          colsample_bylevel=None,
                                          colsample_bynode=None,
                                          colsample_bytree=None, device='cpu',
                                          ear...
                                          max_delta_step=None, max_depth=None,
                                          max_leaves=None,
                                          min_child_weight=None, missing=nan,
                                          monotone_constraints=None,
                                          multi_strategy=None,
                                          n_estimators=None, n_jobs=-1,
                                          num_parallel_tree=None,
                                          random_state=4724, ...)),
                            ('Random Forest Regressor',
                             RandomForestRegressor(n_jobs=-1,
                                                   random_state=4724)),
                            ('Extra Trees Regressor',
                             ExtraTreesRegressor(n_jobs=-1,
                                                 random_state=4724))],
                n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572F8BD350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:19:11,886:INFO:Checking exceptions
2024-05-01 09:19:11,887:INFO:Importing libraries
2024-05-01 09:19:11,887:INFO:Copying training dataset
2024-05-01 09:19:11,916:INFO:Defining folds
2024-05-01 09:19:11,916:INFO:Declaring metric variables
2024-05-01 09:19:11,919:INFO:Importing untrained model
2024-05-01 09:19:11,919:INFO:Declaring custom model
2024-05-01 09:19:11,924:INFO:Voting Regressor Imported successfully
2024-05-01 09:19:11,930:INFO:Starting cross validation
2024-05-01 09:19:11,931:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:19:24,578:INFO:Calculating mean and std
2024-05-01 09:19:24,578:INFO:Creating metrics dataframe
2024-05-01 09:19:24,600:INFO:Finalizing model
2024-05-01 09:19:25,855:INFO:Uploading results into container
2024-05-01 09:19:25,855:INFO:Uploading model into container now
2024-05-01 09:19:25,855:INFO:_master_model_container: 20
2024-05-01 09:19:25,855:INFO:_display_container: 3
2024-05-01 09:19:25,885:INFO:VotingRegressor(estimators=[('Gradient Boosting Regressor',
                             GradientBoostingRegressor(random_state=4724)),
                            ('Light Gradient Boosting Machine',
                             LGBMRegressor(n_jobs=-1, random_state=4724)),
                            ('Extreme Gradient Boosting',
                             XGBRegressor(base_score=None, booster='gbtree',
                                          callbacks=None,
                                          colsample_bylevel=None,
                                          colsample_bynode=None,
                                          colsample_bytree=None, device='cpu',
                                          ear...
                                          max_delta_step=None, max_depth=None,
                                          max_leaves=None,
                                          min_child_weight=None, missing=nan,
                                          monotone_constraints=None,
                                          multi_strategy=None,
                                          n_estimators=None, n_jobs=-1,
                                          num_parallel_tree=None,
                                          random_state=4724, ...)),
                            ('Random Forest Regressor',
                             RandomForestRegressor(n_jobs=-1,
                                                   random_state=4724)),
                            ('Extra Trees Regressor',
                             ExtraTreesRegressor(n_jobs=-1,
                                                 random_state=4724))],
                n_jobs=-1)
2024-05-01 09:19:25,885:INFO:create_model() successfully completed......................................
2024-05-01 09:19:26,079:INFO:SubProcess create_model() end ==================================
2024-05-01 09:19:26,080:INFO:_master_model_container: 20
2024-05-01 09:19:26,080:INFO:_display_container: 3
2024-05-01 09:19:26,108:INFO:VotingRegressor(estimators=[('Gradient Boosting Regressor',
                             GradientBoostingRegressor(random_state=4724)),
                            ('Light Gradient Boosting Machine',
                             LGBMRegressor(n_jobs=-1, random_state=4724)),
                            ('Extreme Gradient Boosting',
                             XGBRegressor(base_score=None, booster='gbtree',
                                          callbacks=None,
                                          colsample_bylevel=None,
                                          colsample_bynode=None,
                                          colsample_bytree=None, device='cpu',
                                          ear...
                                          max_delta_step=None, max_depth=None,
                                          max_leaves=None,
                                          min_child_weight=None, missing=nan,
                                          monotone_constraints=None,
                                          multi_strategy=None,
                                          n_estimators=None, n_jobs=-1,
                                          num_parallel_tree=None,
                                          random_state=4724, ...)),
                            ('Random Forest Regressor',
                             RandomForestRegressor(n_jobs=-1,
                                                   random_state=4724)),
                            ('Extra Trees Regressor',
                             ExtraTreesRegressor(n_jobs=-1,
                                                 random_state=4724))],
                n_jobs=-1)
2024-05-01 09:19:26,108:INFO:blend_models() successfully completed......................................
2024-05-01 09:19:26,316:INFO:Initializing finalize_model()
2024-05-01 09:19:26,316:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=VotingRegressor(estimators=[('Gradient Boosting Regressor',
                             GradientBoostingRegressor(random_state=4724)),
                            ('Light Gradient Boosting Machine',
                             LGBMRegressor(n_jobs=-1, random_state=4724)),
                            ('Extreme Gradient Boosting',
                             XGBRegressor(base_score=None, booster='gbtree',
                                          callbacks=None,
                                          colsample_bylevel=None,
                                          colsample_bynode=None,
                                          colsample_bytree=None, device='cpu',
                                          ear...
                                          max_delta_step=None, max_depth=None,
                                          max_leaves=None,
                                          min_child_weight=None, missing=nan,
                                          monotone_constraints=None,
                                          multi_strategy=None,
                                          n_estimators=None, n_jobs=-1,
                                          num_parallel_tree=None,
                                          random_state=4724, ...)),
                            ('Random Forest Regressor',
                             RandomForestRegressor(n_jobs=-1,
                                                   random_state=4724)),
                            ('Extra Trees Regressor',
                             ExtraTreesRegressor(n_jobs=-1,
                                                 random_state=4724))],
                n_jobs=-1), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-01 09:19:26,335:INFO:Finalizing VotingRegressor(estimators=[('Gradient Boosting Regressor',
                             GradientBoostingRegressor(random_state=4724)),
                            ('Light Gradient Boosting Machine',
                             LGBMRegressor(n_jobs=-1, random_state=4724)),
                            ('Extreme Gradient Boosting',
                             XGBRegressor(base_score=None, booster='gbtree',
                                          callbacks=None,
                                          colsample_bylevel=None,
                                          colsample_bynode=None,
                                          colsample_bytree=None, device='cpu',
                                          ear...
                                          max_delta_step=None, max_depth=None,
                                          max_leaves=None,
                                          min_child_weight=None, missing=nan,
                                          monotone_constraints=None,
                                          multi_strategy=None,
                                          n_estimators=None, n_jobs=-1,
                                          num_parallel_tree=None,
                                          random_state=4724, ...)),
                            ('Random Forest Regressor',
                             RandomForestRegressor(n_jobs=-1,
                                                   random_state=4724)),
                            ('Extra Trees Regressor',
                             ExtraTreesRegressor(n_jobs=-1,
                                                 random_state=4724))],
                n_jobs=-1)
2024-05-01 09:19:26,363:INFO:Initializing create_model()
2024-05-01 09:19:26,363:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=VotingRegressor(estimators=[('Gradient Boosting Regressor',
                             GradientBoostingRegressor(random_state=4724)),
                            ('Light Gradient Boosting Machine',
                             LGBMRegressor(n_jobs=-1, random_state=4724)),
                            ('Extreme Gradient Boosting',
                             XGBRegressor(base_score=None, booster='gbtree',
                                          callbacks=None,
                                          colsample_bylevel=None,
                                          colsample_bynode=None,
                                          colsample_bytree=None, device='cpu',
                                          ear...
                                          max_delta_step=None, max_depth=None,
                                          max_leaves=None,
                                          min_child_weight=None, missing=nan,
                                          monotone_constraints=None,
                                          multi_strategy=None,
                                          n_estimators=None, n_jobs=-1,
                                          num_parallel_tree=None,
                                          random_state=4724, ...)),
                            ('Random Forest Regressor',
                             RandomForestRegressor(n_jobs=-1,
                                                   random_state=4724)),
                            ('Extra Trees Regressor',
                             ExtraTreesRegressor(n_jobs=-1,
                                                 random_state=4724))],
                n_jobs=-1), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:19:26,363:INFO:Checking exceptions
2024-05-01 09:19:26,379:INFO:Importing libraries
2024-05-01 09:19:26,379:INFO:Copying training dataset
2024-05-01 09:19:26,379:INFO:Defining folds
2024-05-01 09:19:26,379:INFO:Declaring metric variables
2024-05-01 09:19:26,379:INFO:Importing untrained model
2024-05-01 09:19:26,379:INFO:Declaring custom model
2024-05-01 09:19:26,379:INFO:Voting Regressor Imported successfully
2024-05-01 09:19:26,379:INFO:Cross validation set to False
2024-05-01 09:19:26,379:INFO:Fitting Model
2024-05-01 09:19:29,003:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering',
                                             'steering_remote', 'leahter_seat',
                                             'driver...
                                                           max_depth=None,
                                                           max_leaves=None,
                                                           min_child_weight=None,
                                                           missing=nan,
                                                           monotone_constraints=None,
                                                           multi_strategy=None,
                                                           n_estimators=None,
                                                           n_jobs=-1,
                                                           num_parallel_tree=None,
                                                           random_state=4724, ...)),
                                             ('Random Forest Regressor',
                                              RandomForestRegressor(n_jobs=-1,
                                                                    random_state=4724)),
                                             ('Extra Trees Regressor',
                                              ExtraTreesRegressor(n_jobs=-1,
                                                                  random_state=4724))],
                                 n_jobs=-1))])
2024-05-01 09:19:29,003:INFO:create_model() successfully completed......................................
2024-05-01 09:19:29,117:INFO:_master_model_container: 20
2024-05-01 09:19:29,117:INFO:_display_container: 3
2024-05-01 09:19:29,150:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering',
                                             'steering_remote', 'leahter_seat',
                                             'driver...
                                                           max_depth=None,
                                                           max_leaves=None,
                                                           min_child_weight=None,
                                                           missing=nan,
                                                           monotone_constraints=None,
                                                           multi_strategy=None,
                                                           n_estimators=None,
                                                           n_jobs=-1,
                                                           num_parallel_tree=None,
                                                           random_state=4724, ...)),
                                             ('Random Forest Regressor',
                                              RandomForestRegressor(n_jobs=-1,
                                                                    random_state=4724)),
                                             ('Extra Trees Regressor',
                                              ExtraTreesRegressor(n_jobs=-1,
                                                                  random_state=4724))],
                                 n_jobs=-1))])
2024-05-01 09:19:29,150:INFO:finalize_model() successfully completed......................................
2024-05-01 09:19:41,932:INFO:Initializing predict_model()
2024-05-01 09:19:41,932:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering',
                                             'steering_remote', 'leahter_seat',
                                             'driver...
                                                           max_depth=None,
                                                           max_leaves=None,
                                                           min_child_weight=None,
                                                           missing=nan,
                                                           monotone_constraints=None,
                                                           multi_strategy=None,
                                                           n_estimators=None,
                                                           n_jobs=-1,
                                                           num_parallel_tree=None,
                                                           random_state=4724, ...)),
                                             ('Random Forest Regressor',
                                              RandomForestRegressor(n_jobs=-1,
                                                                    random_state=4724)),
                                             ('Extra Trees Regressor',
                                              ExtraTreesRegressor(n_jobs=-1,
                                                                  random_state=4724))],
                                 n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025733C625C0>)
2024-05-01 09:19:41,932:INFO:Checking exceptions
2024-05-01 09:19:41,932:INFO:Preloading libraries
2024-05-01 09:19:41,932:INFO:Set up data.
2024-05-01 09:19:41,961:INFO:Set up index.
2024-05-01 09:24:34,089:INFO:Initializing ensemble_model()
2024-05-01 09:24:34,089:INFO:ensemble_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=[GradientBoostingRegressor(random_state=4724), LGBMRegressor(n_jobs=-1, random_state=4724), XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...), RandomForestRegressor(n_jobs=-1, random_state=4724), ExtraTreesRegressor(n_jobs=-1, random_state=4724)], method=Boosting, fold=10, n_estimators=10, round=4, choose_better=False, optimize=RMSE, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-05-01 09:24:34,089:INFO:Checking exceptions
2024-05-01 09:25:28,999:INFO:Initializing ensemble_model()
2024-05-01 09:25:29,000:INFO:ensemble_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=[GradientBoostingRegressor(random_state=4724), LGBMRegressor(n_jobs=-1, random_state=4724), XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...), RandomForestRegressor(n_jobs=-1, random_state=4724), ExtraTreesRegressor(n_jobs=-1, random_state=4724)], method=Bagging, fold=10, n_estimators=10, round=4, choose_better=False, optimize=RMSE, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-05-01 09:25:29,000:INFO:Checking exceptions
2024-05-01 09:27:38,409:INFO:Initializing compare_models()
2024-05-01 09:27:38,409:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, include=None, exclude=et, fold=None, round=4, cross_validation=True, sort=R2, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, 'include': None, 'exclude': 'et', 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-05-01 09:27:38,409:INFO:Checking exceptions
2024-05-01 09:27:38,420:INFO:Preparing display monitor
2024-05-01 09:27:38,440:INFO:Initializing Linear Regression
2024-05-01 09:27:38,440:INFO:Total runtime is 0.0 minutes
2024-05-01 09:27:38,440:INFO:SubProcess create_model() called ==================================
2024-05-01 09:27:38,440:INFO:Initializing create_model()
2024-05-01 09:27:38,440:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025744D20110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:27:38,440:INFO:Checking exceptions
2024-05-01 09:27:38,440:INFO:Importing libraries
2024-05-01 09:27:38,440:INFO:Copying training dataset
2024-05-01 09:27:38,475:INFO:Defining folds
2024-05-01 09:27:38,475:INFO:Declaring metric variables
2024-05-01 09:27:38,489:INFO:Importing untrained model
2024-05-01 09:27:38,489:INFO:Linear Regression Imported successfully
2024-05-01 09:27:38,489:INFO:Starting cross validation
2024-05-01 09:27:38,489:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:27:46,912:INFO:Calculating mean and std
2024-05-01 09:27:46,914:INFO:Creating metrics dataframe
2024-05-01 09:27:46,914:INFO:Uploading results into container
2024-05-01 09:27:46,914:INFO:Uploading model into container now
2024-05-01 09:27:46,914:INFO:_master_model_container: 21
2024-05-01 09:27:46,914:INFO:_display_container: 4
2024-05-01 09:27:46,914:INFO:LinearRegression(n_jobs=-1)
2024-05-01 09:27:46,914:INFO:create_model() successfully completed......................................
2024-05-01 09:27:47,180:INFO:SubProcess create_model() end ==================================
2024-05-01 09:27:47,180:INFO:Creating metrics dataframe
2024-05-01 09:27:47,180:INFO:Initializing Lasso Regression
2024-05-01 09:27:47,180:INFO:Total runtime is 0.145672611395518 minutes
2024-05-01 09:27:47,197:INFO:SubProcess create_model() called ==================================
2024-05-01 09:27:47,197:INFO:Initializing create_model()
2024-05-01 09:27:47,197:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025744D20110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:27:47,197:INFO:Checking exceptions
2024-05-01 09:27:47,197:INFO:Importing libraries
2024-05-01 09:27:47,197:INFO:Copying training dataset
2024-05-01 09:27:47,234:INFO:Defining folds
2024-05-01 09:27:47,234:INFO:Declaring metric variables
2024-05-01 09:27:47,234:INFO:Importing untrained model
2024-05-01 09:27:47,234:INFO:Lasso Regression Imported successfully
2024-05-01 09:27:47,247:INFO:Starting cross validation
2024-05-01 09:27:47,249:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:27:47,481:INFO:Calculating mean and std
2024-05-01 09:27:47,481:INFO:Creating metrics dataframe
2024-05-01 09:27:47,481:INFO:Uploading results into container
2024-05-01 09:27:47,481:INFO:Uploading model into container now
2024-05-01 09:27:47,481:INFO:_master_model_container: 22
2024-05-01 09:27:47,481:INFO:_display_container: 4
2024-05-01 09:27:47,481:INFO:Lasso(random_state=4724)
2024-05-01 09:27:47,481:INFO:create_model() successfully completed......................................
2024-05-01 09:27:47,731:INFO:SubProcess create_model() end ==================================
2024-05-01 09:27:47,731:INFO:Creating metrics dataframe
2024-05-01 09:27:47,731:INFO:Initializing Ridge Regression
2024-05-01 09:27:47,731:INFO:Total runtime is 0.15484731594721476 minutes
2024-05-01 09:27:47,751:INFO:SubProcess create_model() called ==================================
2024-05-01 09:27:47,751:INFO:Initializing create_model()
2024-05-01 09:27:47,751:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025744D20110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:27:47,751:INFO:Checking exceptions
2024-05-01 09:27:47,751:INFO:Importing libraries
2024-05-01 09:27:47,751:INFO:Copying training dataset
2024-05-01 09:27:47,783:INFO:Defining folds
2024-05-01 09:27:47,783:INFO:Declaring metric variables
2024-05-01 09:27:47,786:INFO:Importing untrained model
2024-05-01 09:27:47,786:INFO:Ridge Regression Imported successfully
2024-05-01 09:27:47,786:INFO:Starting cross validation
2024-05-01 09:27:47,798:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:27:47,964:INFO:Calculating mean and std
2024-05-01 09:27:47,964:INFO:Creating metrics dataframe
2024-05-01 09:27:47,964:INFO:Uploading results into container
2024-05-01 09:27:47,964:INFO:Uploading model into container now
2024-05-01 09:27:47,964:INFO:_master_model_container: 23
2024-05-01 09:27:47,964:INFO:_display_container: 4
2024-05-01 09:27:47,964:INFO:Ridge(random_state=4724)
2024-05-01 09:27:47,964:INFO:create_model() successfully completed......................................
2024-05-01 09:27:48,215:INFO:SubProcess create_model() end ==================================
2024-05-01 09:27:48,215:INFO:Creating metrics dataframe
2024-05-01 09:27:48,215:INFO:Initializing Elastic Net
2024-05-01 09:27:48,215:INFO:Total runtime is 0.1629107157389323 minutes
2024-05-01 09:27:48,234:INFO:SubProcess create_model() called ==================================
2024-05-01 09:27:48,235:INFO:Initializing create_model()
2024-05-01 09:27:48,235:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025744D20110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:27:48,235:INFO:Checking exceptions
2024-05-01 09:27:48,235:INFO:Importing libraries
2024-05-01 09:27:48,235:INFO:Copying training dataset
2024-05-01 09:27:48,259:INFO:Defining folds
2024-05-01 09:27:48,259:INFO:Declaring metric variables
2024-05-01 09:27:48,265:INFO:Importing untrained model
2024-05-01 09:27:48,265:INFO:Elastic Net Imported successfully
2024-05-01 09:27:48,265:INFO:Starting cross validation
2024-05-01 09:27:48,265:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:27:48,457:INFO:Calculating mean and std
2024-05-01 09:27:48,457:INFO:Creating metrics dataframe
2024-05-01 09:27:48,457:INFO:Uploading results into container
2024-05-01 09:27:48,457:INFO:Uploading model into container now
2024-05-01 09:27:48,457:INFO:_master_model_container: 24
2024-05-01 09:27:48,457:INFO:_display_container: 4
2024-05-01 09:27:48,457:INFO:ElasticNet(random_state=4724)
2024-05-01 09:27:48,457:INFO:create_model() successfully completed......................................
2024-05-01 09:27:48,699:INFO:SubProcess create_model() end ==================================
2024-05-01 09:27:48,699:INFO:Creating metrics dataframe
2024-05-01 09:27:48,718:INFO:Initializing Least Angle Regression
2024-05-01 09:27:48,718:INFO:Total runtime is 0.17130114634831747 minutes
2024-05-01 09:27:48,718:INFO:SubProcess create_model() called ==================================
2024-05-01 09:27:48,718:INFO:Initializing create_model()
2024-05-01 09:27:48,718:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025744D20110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:27:48,718:INFO:Checking exceptions
2024-05-01 09:27:48,718:INFO:Importing libraries
2024-05-01 09:27:48,718:INFO:Copying training dataset
2024-05-01 09:27:48,749:INFO:Defining folds
2024-05-01 09:27:48,749:INFO:Declaring metric variables
2024-05-01 09:27:48,749:INFO:Importing untrained model
2024-05-01 09:27:48,749:INFO:Least Angle Regression Imported successfully
2024-05-01 09:27:48,771:INFO:Starting cross validation
2024-05-01 09:27:48,773:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:27:48,965:INFO:Calculating mean and std
2024-05-01 09:27:48,965:INFO:Creating metrics dataframe
2024-05-01 09:27:48,965:INFO:Uploading results into container
2024-05-01 09:27:48,965:INFO:Uploading model into container now
2024-05-01 09:27:48,965:INFO:_master_model_container: 25
2024-05-01 09:27:48,965:INFO:_display_container: 4
2024-05-01 09:27:48,981:INFO:Lars(random_state=4724)
2024-05-01 09:27:48,981:INFO:create_model() successfully completed......................................
2024-05-01 09:27:49,231:INFO:SubProcess create_model() end ==================================
2024-05-01 09:27:49,232:INFO:Creating metrics dataframe
2024-05-01 09:27:49,232:INFO:Initializing Lasso Least Angle Regression
2024-05-01 09:27:49,232:INFO:Total runtime is 0.1798734148343404 minutes
2024-05-01 09:27:49,249:INFO:SubProcess create_model() called ==================================
2024-05-01 09:27:49,249:INFO:Initializing create_model()
2024-05-01 09:27:49,249:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025744D20110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:27:49,249:INFO:Checking exceptions
2024-05-01 09:27:49,249:INFO:Importing libraries
2024-05-01 09:27:49,249:INFO:Copying training dataset
2024-05-01 09:27:49,276:INFO:Defining folds
2024-05-01 09:27:49,276:INFO:Declaring metric variables
2024-05-01 09:27:49,276:INFO:Importing untrained model
2024-05-01 09:27:49,286:INFO:Lasso Least Angle Regression Imported successfully
2024-05-01 09:27:49,286:INFO:Starting cross validation
2024-05-01 09:27:49,286:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:27:49,483:INFO:Calculating mean and std
2024-05-01 09:27:49,483:INFO:Creating metrics dataframe
2024-05-01 09:27:49,483:INFO:Uploading results into container
2024-05-01 09:27:49,483:INFO:Uploading model into container now
2024-05-01 09:27:49,483:INFO:_master_model_container: 26
2024-05-01 09:27:49,483:INFO:_display_container: 4
2024-05-01 09:27:49,483:INFO:LassoLars(random_state=4724)
2024-05-01 09:27:49,483:INFO:create_model() successfully completed......................................
2024-05-01 09:27:49,733:INFO:SubProcess create_model() end ==================================
2024-05-01 09:27:49,733:INFO:Creating metrics dataframe
2024-05-01 09:27:49,733:INFO:Initializing Orthogonal Matching Pursuit
2024-05-01 09:27:49,749:INFO:Total runtime is 0.18847413460413615 minutes
2024-05-01 09:27:49,753:INFO:SubProcess create_model() called ==================================
2024-05-01 09:27:49,753:INFO:Initializing create_model()
2024-05-01 09:27:49,753:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025744D20110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:27:49,753:INFO:Checking exceptions
2024-05-01 09:27:49,753:INFO:Importing libraries
2024-05-01 09:27:49,753:INFO:Copying training dataset
2024-05-01 09:27:49,783:INFO:Defining folds
2024-05-01 09:27:49,783:INFO:Declaring metric variables
2024-05-01 09:27:49,783:INFO:Importing untrained model
2024-05-01 09:27:49,783:INFO:Orthogonal Matching Pursuit Imported successfully
2024-05-01 09:27:49,783:INFO:Starting cross validation
2024-05-01 09:27:49,799:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:27:49,966:INFO:Calculating mean and std
2024-05-01 09:27:49,966:INFO:Creating metrics dataframe
2024-05-01 09:27:49,966:INFO:Uploading results into container
2024-05-01 09:27:49,966:INFO:Uploading model into container now
2024-05-01 09:27:49,966:INFO:_master_model_container: 27
2024-05-01 09:27:49,966:INFO:_display_container: 4
2024-05-01 09:27:49,966:INFO:OrthogonalMatchingPursuit()
2024-05-01 09:27:49,966:INFO:create_model() successfully completed......................................
2024-05-01 09:27:50,217:INFO:SubProcess create_model() end ==================================
2024-05-01 09:27:50,217:INFO:Creating metrics dataframe
2024-05-01 09:27:50,237:INFO:Initializing Bayesian Ridge
2024-05-01 09:27:50,237:INFO:Total runtime is 0.19660751422246298 minutes
2024-05-01 09:27:50,237:INFO:SubProcess create_model() called ==================================
2024-05-01 09:27:50,237:INFO:Initializing create_model()
2024-05-01 09:27:50,237:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025744D20110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:27:50,237:INFO:Checking exceptions
2024-05-01 09:27:50,237:INFO:Importing libraries
2024-05-01 09:27:50,237:INFO:Copying training dataset
2024-05-01 09:27:50,267:INFO:Defining folds
2024-05-01 09:27:50,267:INFO:Declaring metric variables
2024-05-01 09:27:50,267:INFO:Importing untrained model
2024-05-01 09:27:50,267:INFO:Bayesian Ridge Imported successfully
2024-05-01 09:27:50,287:INFO:Starting cross validation
2024-05-01 09:27:50,288:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:27:50,459:INFO:Calculating mean and std
2024-05-01 09:27:50,459:INFO:Creating metrics dataframe
2024-05-01 09:27:50,459:INFO:Uploading results into container
2024-05-01 09:27:50,459:INFO:Uploading model into container now
2024-05-01 09:27:50,459:INFO:_master_model_container: 28
2024-05-01 09:27:50,459:INFO:_display_container: 4
2024-05-01 09:27:50,459:INFO:BayesianRidge()
2024-05-01 09:27:50,459:INFO:create_model() successfully completed......................................
2024-05-01 09:27:50,717:INFO:SubProcess create_model() end ==================================
2024-05-01 09:27:50,717:INFO:Creating metrics dataframe
2024-05-01 09:27:50,717:INFO:Initializing Passive Aggressive Regressor
2024-05-01 09:27:50,717:INFO:Total runtime is 0.20461847384770712 minutes
2024-05-01 09:27:50,734:INFO:SubProcess create_model() called ==================================
2024-05-01 09:27:50,734:INFO:Initializing create_model()
2024-05-01 09:27:50,734:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025744D20110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:27:50,734:INFO:Checking exceptions
2024-05-01 09:27:50,734:INFO:Importing libraries
2024-05-01 09:27:50,734:INFO:Copying training dataset
2024-05-01 09:27:50,768:INFO:Defining folds
2024-05-01 09:27:50,768:INFO:Declaring metric variables
2024-05-01 09:27:50,768:INFO:Importing untrained model
2024-05-01 09:27:50,768:INFO:Passive Aggressive Regressor Imported successfully
2024-05-01 09:27:50,786:INFO:Starting cross validation
2024-05-01 09:27:50,787:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:27:50,948:INFO:Calculating mean and std
2024-05-01 09:27:50,948:INFO:Creating metrics dataframe
2024-05-01 09:27:50,948:INFO:Uploading results into container
2024-05-01 09:27:50,948:INFO:Uploading model into container now
2024-05-01 09:27:50,948:INFO:_master_model_container: 29
2024-05-01 09:27:50,948:INFO:_display_container: 4
2024-05-01 09:27:50,948:INFO:PassiveAggressiveRegressor(random_state=4724)
2024-05-01 09:27:50,948:INFO:create_model() successfully completed......................................
2024-05-01 09:27:51,202:INFO:SubProcess create_model() end ==================================
2024-05-01 09:27:51,202:INFO:Creating metrics dataframe
2024-05-01 09:27:51,224:INFO:Initializing Huber Regressor
2024-05-01 09:27:51,224:INFO:Total runtime is 0.21305760542551677 minutes
2024-05-01 09:27:51,234:INFO:SubProcess create_model() called ==================================
2024-05-01 09:27:51,235:INFO:Initializing create_model()
2024-05-01 09:27:51,236:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025744D20110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:27:51,236:INFO:Checking exceptions
2024-05-01 09:27:51,236:INFO:Importing libraries
2024-05-01 09:27:51,236:INFO:Copying training dataset
2024-05-01 09:27:51,258:INFO:Defining folds
2024-05-01 09:27:51,273:INFO:Declaring metric variables
2024-05-01 09:27:51,273:INFO:Importing untrained model
2024-05-01 09:27:51,273:INFO:Huber Regressor Imported successfully
2024-05-01 09:27:51,286:INFO:Starting cross validation
2024-05-01 09:27:51,287:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:27:51,603:INFO:Calculating mean and std
2024-05-01 09:27:51,603:INFO:Creating metrics dataframe
2024-05-01 09:27:51,603:INFO:Uploading results into container
2024-05-01 09:27:51,603:INFO:Uploading model into container now
2024-05-01 09:27:51,603:INFO:_master_model_container: 30
2024-05-01 09:27:51,618:INFO:_display_container: 4
2024-05-01 09:27:51,618:INFO:HuberRegressor()
2024-05-01 09:27:51,618:INFO:create_model() successfully completed......................................
2024-05-01 09:27:51,869:INFO:SubProcess create_model() end ==================================
2024-05-01 09:27:51,869:INFO:Creating metrics dataframe
2024-05-01 09:27:51,869:INFO:Initializing K Neighbors Regressor
2024-05-01 09:27:51,869:INFO:Total runtime is 0.2238220016161601 minutes
2024-05-01 09:27:51,886:INFO:SubProcess create_model() called ==================================
2024-05-01 09:27:51,886:INFO:Initializing create_model()
2024-05-01 09:27:51,886:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025744D20110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:27:51,886:INFO:Checking exceptions
2024-05-01 09:27:51,886:INFO:Importing libraries
2024-05-01 09:27:51,886:INFO:Copying training dataset
2024-05-01 09:27:51,911:INFO:Defining folds
2024-05-01 09:27:51,911:INFO:Declaring metric variables
2024-05-01 09:27:51,921:INFO:Importing untrained model
2024-05-01 09:27:51,924:INFO:K Neighbors Regressor Imported successfully
2024-05-01 09:27:51,924:INFO:Starting cross validation
2024-05-01 09:27:51,924:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:27:52,368:INFO:Calculating mean and std
2024-05-01 09:27:52,368:INFO:Creating metrics dataframe
2024-05-01 09:27:52,368:INFO:Uploading results into container
2024-05-01 09:27:52,368:INFO:Uploading model into container now
2024-05-01 09:27:52,368:INFO:_master_model_container: 31
2024-05-01 09:27:52,368:INFO:_display_container: 4
2024-05-01 09:27:52,368:INFO:KNeighborsRegressor(n_jobs=-1)
2024-05-01 09:27:52,368:INFO:create_model() successfully completed......................................
2024-05-01 09:27:52,642:INFO:SubProcess create_model() end ==================================
2024-05-01 09:27:52,642:INFO:Creating metrics dataframe
2024-05-01 09:27:52,656:INFO:Initializing Decision Tree Regressor
2024-05-01 09:27:52,656:INFO:Total runtime is 0.2369334181149801 minutes
2024-05-01 09:27:52,656:INFO:SubProcess create_model() called ==================================
2024-05-01 09:27:52,656:INFO:Initializing create_model()
2024-05-01 09:27:52,656:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025744D20110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:27:52,656:INFO:Checking exceptions
2024-05-01 09:27:52,656:INFO:Importing libraries
2024-05-01 09:27:52,656:INFO:Copying training dataset
2024-05-01 09:27:52,686:INFO:Defining folds
2024-05-01 09:27:52,686:INFO:Declaring metric variables
2024-05-01 09:27:52,686:INFO:Importing untrained model
2024-05-01 09:27:52,686:INFO:Decision Tree Regressor Imported successfully
2024-05-01 09:27:52,706:INFO:Starting cross validation
2024-05-01 09:27:52,707:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:27:52,918:INFO:Calculating mean and std
2024-05-01 09:27:52,919:INFO:Creating metrics dataframe
2024-05-01 09:27:52,919:INFO:Uploading results into container
2024-05-01 09:27:52,919:INFO:Uploading model into container now
2024-05-01 09:27:52,919:INFO:_master_model_container: 32
2024-05-01 09:27:52,919:INFO:_display_container: 4
2024-05-01 09:27:52,919:INFO:DecisionTreeRegressor(random_state=4724)
2024-05-01 09:27:52,919:INFO:create_model() successfully completed......................................
2024-05-01 09:27:53,170:INFO:SubProcess create_model() end ==================================
2024-05-01 09:27:53,170:INFO:Creating metrics dataframe
2024-05-01 09:27:53,185:INFO:Initializing Random Forest Regressor
2024-05-01 09:27:53,185:INFO:Total runtime is 0.24575369358062746 minutes
2024-05-01 09:27:53,189:INFO:SubProcess create_model() called ==================================
2024-05-01 09:27:53,189:INFO:Initializing create_model()
2024-05-01 09:27:53,189:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025744D20110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:27:53,189:INFO:Checking exceptions
2024-05-01 09:27:53,189:INFO:Importing libraries
2024-05-01 09:27:53,189:INFO:Copying training dataset
2024-05-01 09:27:53,216:INFO:Defining folds
2024-05-01 09:27:53,216:INFO:Declaring metric variables
2024-05-01 09:27:53,220:INFO:Importing untrained model
2024-05-01 09:27:53,220:INFO:Random Forest Regressor Imported successfully
2024-05-01 09:27:53,220:INFO:Starting cross validation
2024-05-01 09:27:53,220:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:27:56,589:INFO:Calculating mean and std
2024-05-01 09:27:56,605:INFO:Creating metrics dataframe
2024-05-01 09:27:56,605:INFO:Uploading results into container
2024-05-01 09:27:56,605:INFO:Uploading model into container now
2024-05-01 09:27:56,605:INFO:_master_model_container: 33
2024-05-01 09:27:56,605:INFO:_display_container: 4
2024-05-01 09:27:56,605:INFO:RandomForestRegressor(n_jobs=-1, random_state=4724)
2024-05-01 09:27:56,605:INFO:create_model() successfully completed......................................
2024-05-01 09:27:56,858:INFO:SubProcess create_model() end ==================================
2024-05-01 09:27:56,858:INFO:Creating metrics dataframe
2024-05-01 09:27:56,859:INFO:Initializing AdaBoost Regressor
2024-05-01 09:27:56,859:INFO:Total runtime is 0.3069749156634013 minutes
2024-05-01 09:27:56,873:INFO:SubProcess create_model() called ==================================
2024-05-01 09:27:56,874:INFO:Initializing create_model()
2024-05-01 09:27:56,874:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025744D20110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:27:56,874:INFO:Checking exceptions
2024-05-01 09:27:56,874:INFO:Importing libraries
2024-05-01 09:27:56,874:INFO:Copying training dataset
2024-05-01 09:27:56,895:INFO:Defining folds
2024-05-01 09:27:56,895:INFO:Declaring metric variables
2024-05-01 09:27:56,907:INFO:Importing untrained model
2024-05-01 09:27:56,907:INFO:AdaBoost Regressor Imported successfully
2024-05-01 09:27:56,907:INFO:Starting cross validation
2024-05-01 09:27:56,907:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:27:57,858:INFO:Calculating mean and std
2024-05-01 09:27:57,858:INFO:Creating metrics dataframe
2024-05-01 09:27:57,858:INFO:Uploading results into container
2024-05-01 09:27:57,858:INFO:Uploading model into container now
2024-05-01 09:27:57,858:INFO:_master_model_container: 34
2024-05-01 09:27:57,858:INFO:_display_container: 4
2024-05-01 09:27:57,874:INFO:AdaBoostRegressor(random_state=4724)
2024-05-01 09:27:57,874:INFO:create_model() successfully completed......................................
2024-05-01 09:27:58,108:INFO:SubProcess create_model() end ==================================
2024-05-01 09:27:58,108:INFO:Creating metrics dataframe
2024-05-01 09:27:58,124:INFO:Initializing Gradient Boosting Regressor
2024-05-01 09:27:58,124:INFO:Total runtime is 0.32807405789693195 minutes
2024-05-01 09:27:58,124:INFO:SubProcess create_model() called ==================================
2024-05-01 09:27:58,124:INFO:Initializing create_model()
2024-05-01 09:27:58,124:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025744D20110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:27:58,124:INFO:Checking exceptions
2024-05-01 09:27:58,140:INFO:Importing libraries
2024-05-01 09:27:58,140:INFO:Copying training dataset
2024-05-01 09:27:58,167:INFO:Defining folds
2024-05-01 09:27:58,167:INFO:Declaring metric variables
2024-05-01 09:27:58,178:INFO:Importing untrained model
2024-05-01 09:27:58,182:INFO:Gradient Boosting Regressor Imported successfully
2024-05-01 09:27:58,182:INFO:Starting cross validation
2024-05-01 09:27:58,182:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:27:59,343:INFO:Calculating mean and std
2024-05-01 09:27:59,343:INFO:Creating metrics dataframe
2024-05-01 09:27:59,343:INFO:Uploading results into container
2024-05-01 09:27:59,343:INFO:Uploading model into container now
2024-05-01 09:27:59,343:INFO:_master_model_container: 35
2024-05-01 09:27:59,343:INFO:_display_container: 4
2024-05-01 09:27:59,343:INFO:GradientBoostingRegressor(random_state=4724)
2024-05-01 09:27:59,343:INFO:create_model() successfully completed......................................
2024-05-01 09:27:59,593:INFO:SubProcess create_model() end ==================================
2024-05-01 09:27:59,593:INFO:Creating metrics dataframe
2024-05-01 09:27:59,593:INFO:Initializing Extreme Gradient Boosting
2024-05-01 09:27:59,593:INFO:Total runtime is 0.35255287488301595 minutes
2024-05-01 09:27:59,613:INFO:SubProcess create_model() called ==================================
2024-05-01 09:27:59,613:INFO:Initializing create_model()
2024-05-01 09:27:59,613:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025744D20110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:27:59,613:INFO:Checking exceptions
2024-05-01 09:27:59,613:INFO:Importing libraries
2024-05-01 09:27:59,613:INFO:Copying training dataset
2024-05-01 09:27:59,636:INFO:Defining folds
2024-05-01 09:27:59,636:INFO:Declaring metric variables
2024-05-01 09:27:59,643:INFO:Importing untrained model
2024-05-01 09:27:59,643:INFO:Extreme Gradient Boosting Imported successfully
2024-05-01 09:27:59,643:INFO:Starting cross validation
2024-05-01 09:27:59,643:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:28:00,318:INFO:Calculating mean and std
2024-05-01 09:28:00,319:INFO:Creating metrics dataframe
2024-05-01 09:28:00,320:INFO:Uploading results into container
2024-05-01 09:28:00,321:INFO:Uploading model into container now
2024-05-01 09:28:00,321:INFO:_master_model_container: 36
2024-05-01 09:28:00,321:INFO:_display_container: 4
2024-05-01 09:28:00,322:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...)
2024-05-01 09:28:00,322:INFO:create_model() successfully completed......................................
2024-05-01 09:28:00,562:INFO:SubProcess create_model() end ==================================
2024-05-01 09:28:00,562:INFO:Creating metrics dataframe
2024-05-01 09:28:00,579:INFO:Initializing Light Gradient Boosting Machine
2024-05-01 09:28:00,579:INFO:Total runtime is 0.3689876675605774 minutes
2024-05-01 09:28:00,580:INFO:SubProcess create_model() called ==================================
2024-05-01 09:28:00,580:INFO:Initializing create_model()
2024-05-01 09:28:00,580:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025744D20110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:28:00,580:INFO:Checking exceptions
2024-05-01 09:28:00,580:INFO:Importing libraries
2024-05-01 09:28:00,580:INFO:Copying training dataset
2024-05-01 09:28:00,611:INFO:Defining folds
2024-05-01 09:28:00,611:INFO:Declaring metric variables
2024-05-01 09:28:00,611:INFO:Importing untrained model
2024-05-01 09:28:00,611:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-01 09:28:00,627:INFO:Starting cross validation
2024-05-01 09:28:00,628:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:28:01,810:INFO:Calculating mean and std
2024-05-01 09:28:01,812:INFO:Creating metrics dataframe
2024-05-01 09:28:01,812:INFO:Uploading results into container
2024-05-01 09:28:01,812:INFO:Uploading model into container now
2024-05-01 09:28:01,812:INFO:_master_model_container: 37
2024-05-01 09:28:01,812:INFO:_display_container: 4
2024-05-01 09:28:01,812:INFO:LGBMRegressor(n_jobs=-1, random_state=4724)
2024-05-01 09:28:01,812:INFO:create_model() successfully completed......................................
2024-05-01 09:28:02,079:INFO:SubProcess create_model() end ==================================
2024-05-01 09:28:02,079:INFO:Creating metrics dataframe
2024-05-01 09:28:02,095:INFO:Initializing Dummy Regressor
2024-05-01 09:28:02,095:INFO:Total runtime is 0.3942540248235067 minutes
2024-05-01 09:28:02,112:INFO:SubProcess create_model() called ==================================
2024-05-01 09:28:02,112:INFO:Initializing create_model()
2024-05-01 09:28:02,112:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025744D20110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:28:02,112:INFO:Checking exceptions
2024-05-01 09:28:02,112:INFO:Importing libraries
2024-05-01 09:28:02,112:INFO:Copying training dataset
2024-05-01 09:28:02,146:INFO:Defining folds
2024-05-01 09:28:02,146:INFO:Declaring metric variables
2024-05-01 09:28:02,146:INFO:Importing untrained model
2024-05-01 09:28:02,146:INFO:Dummy Regressor Imported successfully
2024-05-01 09:28:02,146:INFO:Starting cross validation
2024-05-01 09:28:02,163:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:28:02,319:INFO:Calculating mean and std
2024-05-01 09:28:02,320:INFO:Creating metrics dataframe
2024-05-01 09:28:02,322:INFO:Uploading results into container
2024-05-01 09:28:02,322:INFO:Uploading model into container now
2024-05-01 09:28:02,323:INFO:_master_model_container: 38
2024-05-01 09:28:02,323:INFO:_display_container: 4
2024-05-01 09:28:02,323:INFO:DummyRegressor()
2024-05-01 09:28:02,323:INFO:create_model() successfully completed......................................
2024-05-01 09:28:02,550:INFO:SubProcess create_model() end ==================================
2024-05-01 09:28:02,550:INFO:Creating metrics dataframe
2024-05-01 09:28:02,582:INFO:Initializing create_model()
2024-05-01 09:28:02,582:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=GradientBoostingRegressor(random_state=4724), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:28:02,582:INFO:Checking exceptions
2024-05-01 09:28:02,582:INFO:Importing libraries
2024-05-01 09:28:02,582:INFO:Copying training dataset
2024-05-01 09:28:02,618:INFO:Defining folds
2024-05-01 09:28:02,618:INFO:Declaring metric variables
2024-05-01 09:28:02,618:INFO:Importing untrained model
2024-05-01 09:28:02,618:INFO:Declaring custom model
2024-05-01 09:28:02,618:INFO:Gradient Boosting Regressor Imported successfully
2024-05-01 09:28:02,618:INFO:Cross validation set to False
2024-05-01 09:28:02,618:INFO:Fitting Model
2024-05-01 09:28:03,030:INFO:GradientBoostingRegressor(random_state=4724)
2024-05-01 09:28:03,030:INFO:create_model() successfully completed......................................
2024-05-01 09:28:03,280:INFO:Initializing create_model()
2024-05-01 09:28:03,280:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=LGBMRegressor(n_jobs=-1, random_state=4724), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:28:03,280:INFO:Checking exceptions
2024-05-01 09:28:03,295:INFO:Importing libraries
2024-05-01 09:28:03,295:INFO:Copying training dataset
2024-05-01 09:28:03,319:INFO:Defining folds
2024-05-01 09:28:03,319:INFO:Declaring metric variables
2024-05-01 09:28:03,319:INFO:Importing untrained model
2024-05-01 09:28:03,319:INFO:Declaring custom model
2024-05-01 09:28:03,319:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-01 09:28:03,319:INFO:Cross validation set to False
2024-05-01 09:28:03,319:INFO:Fitting Model
2024-05-01 09:28:03,356:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.001150 seconds.
2024-05-01 09:28:03,356:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-05-01 09:28:03,356:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-05-01 09:28:03,363:INFO:[LightGBM] [Info] Total Bins 457
2024-05-01 09:28:03,363:INFO:[LightGBM] [Info] Number of data points in the train set: 1581, number of used features: 93
2024-05-01 09:28:03,363:INFO:[LightGBM] [Info] Start training from score 1686.320051
2024-05-01 09:28:03,448:INFO:LGBMRegressor(n_jobs=-1, random_state=4724)
2024-05-01 09:28:03,448:INFO:create_model() successfully completed......................................
2024-05-01 09:28:03,748:INFO:Initializing create_model()
2024-05-01 09:28:03,748:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:28:03,748:INFO:Checking exceptions
2024-05-01 09:28:03,763:INFO:Importing libraries
2024-05-01 09:28:03,763:INFO:Copying training dataset
2024-05-01 09:28:03,788:INFO:Defining folds
2024-05-01 09:28:03,788:INFO:Declaring metric variables
2024-05-01 09:28:03,788:INFO:Importing untrained model
2024-05-01 09:28:03,788:INFO:Declaring custom model
2024-05-01 09:28:03,788:INFO:Extreme Gradient Boosting Imported successfully
2024-05-01 09:28:03,788:INFO:Cross validation set to False
2024-05-01 09:28:03,788:INFO:Fitting Model
2024-05-01 09:28:04,014:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...)
2024-05-01 09:28:04,014:INFO:create_model() successfully completed......................................
2024-05-01 09:28:04,324:INFO:Initializing create_model()
2024-05-01 09:28:04,324:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4724), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:28:04,325:INFO:Checking exceptions
2024-05-01 09:28:04,326:INFO:Importing libraries
2024-05-01 09:28:04,326:INFO:Copying training dataset
2024-05-01 09:28:04,355:INFO:Defining folds
2024-05-01 09:28:04,355:INFO:Declaring metric variables
2024-05-01 09:28:04,355:INFO:Importing untrained model
2024-05-01 09:28:04,355:INFO:Declaring custom model
2024-05-01 09:28:04,356:INFO:Random Forest Regressor Imported successfully
2024-05-01 09:28:04,356:INFO:Cross validation set to False
2024-05-01 09:28:04,356:INFO:Fitting Model
2024-05-01 09:28:04,799:INFO:RandomForestRegressor(n_jobs=-1, random_state=4724)
2024-05-01 09:28:04,799:INFO:create_model() successfully completed......................................
2024-05-01 09:28:05,048:INFO:Initializing create_model()
2024-05-01 09:28:05,048:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=Lasso(random_state=4724), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:28:05,048:INFO:Checking exceptions
2024-05-01 09:28:05,048:INFO:Importing libraries
2024-05-01 09:28:05,048:INFO:Copying training dataset
2024-05-01 09:28:05,097:INFO:Defining folds
2024-05-01 09:28:05,097:INFO:Declaring metric variables
2024-05-01 09:28:05,097:INFO:Importing untrained model
2024-05-01 09:28:05,097:INFO:Declaring custom model
2024-05-01 09:28:05,098:INFO:Lasso Regression Imported successfully
2024-05-01 09:28:05,099:INFO:Cross validation set to False
2024-05-01 09:28:05,099:INFO:Fitting Model
2024-05-01 09:28:05,166:INFO:Lasso(random_state=4724)
2024-05-01 09:28:05,166:INFO:create_model() successfully completed......................................
2024-05-01 09:28:05,465:INFO:_master_model_container: 38
2024-05-01 09:28:05,465:INFO:_display_container: 4
2024-05-01 09:28:05,481:INFO:[GradientBoostingRegressor(random_state=4724), LGBMRegressor(n_jobs=-1, random_state=4724), XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...), RandomForestRegressor(n_jobs=-1, random_state=4724), Lasso(random_state=4724)]
2024-05-01 09:28:05,482:INFO:compare_models() successfully completed......................................
2024-05-01 09:28:23,798:INFO:Initializing blend_models()
2024-05-01 09:28:23,799:INFO:blend_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator_list=[GradientBoostingRegressor(random_state=4724), LGBMRegressor(n_jobs=-1, random_state=4724), XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...), RandomForestRegressor(n_jobs=-1, random_state=4724), Lasso(random_state=4724)], fold=10, round=4, choose_better=False, optimize=RMSE, method=auto, weights=None, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-05-01 09:28:23,799:INFO:Checking exceptions
2024-05-01 09:28:23,817:INFO:Importing libraries
2024-05-01 09:28:23,817:INFO:Copying training dataset
2024-05-01 09:28:23,817:INFO:Getting model names
2024-05-01 09:28:23,839:INFO:SubProcess create_model() called ==================================
2024-05-01 09:28:23,847:INFO:Initializing create_model()
2024-05-01 09:28:23,847:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=VotingRegressor(estimators=[('Gradient Boosting Regressor',
                             GradientBoostingRegressor(random_state=4724)),
                            ('Light Gradient Boosting Machine',
                             LGBMRegressor(n_jobs=-1, random_state=4724)),
                            ('Extreme Gradient Boosting',
                             XGBRegressor(base_score=None, booster='gbtree',
                                          callbacks=None,
                                          colsample_bylevel=None,
                                          colsample_bynode=None,
                                          colsample_bytree=None, device='cpu',
                                          ear...
                                          max_cat_to_onehot=None,
                                          max_delta_step=None, max_depth=None,
                                          max_leaves=None,
                                          min_child_weight=None, missing=nan,
                                          monotone_constraints=None,
                                          multi_strategy=None,
                                          n_estimators=None, n_jobs=-1,
                                          num_parallel_tree=None,
                                          random_state=4724, ...)),
                            ('Random Forest Regressor',
                             RandomForestRegressor(n_jobs=-1,
                                                   random_state=4724)),
                            ('Lasso Regression', Lasso(random_state=4724))],
                n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002574522A250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:28:23,847:INFO:Checking exceptions
2024-05-01 09:28:23,847:INFO:Importing libraries
2024-05-01 09:28:23,847:INFO:Copying training dataset
2024-05-01 09:28:23,867:INFO:Defining folds
2024-05-01 09:28:23,867:INFO:Declaring metric variables
2024-05-01 09:28:23,867:INFO:Importing untrained model
2024-05-01 09:28:23,867:INFO:Declaring custom model
2024-05-01 09:28:23,884:INFO:Voting Regressor Imported successfully
2024-05-01 09:28:23,884:INFO:Starting cross validation
2024-05-01 09:28:23,884:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:28:31,607:INFO:Calculating mean and std
2024-05-01 09:28:31,608:INFO:Creating metrics dataframe
2024-05-01 09:28:31,608:INFO:Finalizing model
2024-05-01 09:28:32,477:INFO:Uploading results into container
2024-05-01 09:28:32,477:INFO:Uploading model into container now
2024-05-01 09:28:32,477:INFO:_master_model_container: 39
2024-05-01 09:28:32,477:INFO:_display_container: 5
2024-05-01 09:28:32,477:INFO:VotingRegressor(estimators=[('Gradient Boosting Regressor',
                             GradientBoostingRegressor(random_state=4724)),
                            ('Light Gradient Boosting Machine',
                             LGBMRegressor(n_jobs=-1, random_state=4724)),
                            ('Extreme Gradient Boosting',
                             XGBRegressor(base_score=None, booster='gbtree',
                                          callbacks=None,
                                          colsample_bylevel=None,
                                          colsample_bynode=None,
                                          colsample_bytree=None, device='cpu',
                                          ear...
                                          max_cat_to_onehot=None,
                                          max_delta_step=None, max_depth=None,
                                          max_leaves=None,
                                          min_child_weight=None, missing=nan,
                                          monotone_constraints=None,
                                          multi_strategy=None,
                                          n_estimators=None, n_jobs=-1,
                                          num_parallel_tree=None,
                                          random_state=4724, ...)),
                            ('Random Forest Regressor',
                             RandomForestRegressor(n_jobs=-1,
                                                   random_state=4724)),
                            ('Lasso Regression', Lasso(random_state=4724))],
                n_jobs=-1)
2024-05-01 09:28:32,477:INFO:create_model() successfully completed......................................
2024-05-01 09:28:32,743:INFO:SubProcess create_model() end ==================================
2024-05-01 09:28:32,743:INFO:_master_model_container: 39
2024-05-01 09:28:32,743:INFO:_display_container: 5
2024-05-01 09:28:32,769:INFO:VotingRegressor(estimators=[('Gradient Boosting Regressor',
                             GradientBoostingRegressor(random_state=4724)),
                            ('Light Gradient Boosting Machine',
                             LGBMRegressor(n_jobs=-1, random_state=4724)),
                            ('Extreme Gradient Boosting',
                             XGBRegressor(base_score=None, booster='gbtree',
                                          callbacks=None,
                                          colsample_bylevel=None,
                                          colsample_bynode=None,
                                          colsample_bytree=None, device='cpu',
                                          ear...
                                          max_cat_to_onehot=None,
                                          max_delta_step=None, max_depth=None,
                                          max_leaves=None,
                                          min_child_weight=None, missing=nan,
                                          monotone_constraints=None,
                                          multi_strategy=None,
                                          n_estimators=None, n_jobs=-1,
                                          num_parallel_tree=None,
                                          random_state=4724, ...)),
                            ('Random Forest Regressor',
                             RandomForestRegressor(n_jobs=-1,
                                                   random_state=4724)),
                            ('Lasso Regression', Lasso(random_state=4724))],
                n_jobs=-1)
2024-05-01 09:28:32,769:INFO:blend_models() successfully completed......................................
2024-05-01 09:28:33,026:INFO:Initializing ensemble_model()
2024-05-01 09:28:33,026:INFO:ensemble_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=[GradientBoostingRegressor(random_state=4724), LGBMRegressor(n_jobs=-1, random_state=4724), XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...), RandomForestRegressor(n_jobs=-1, random_state=4724), Lasso(random_state=4724)], method=Boosting, fold=10, n_estimators=10, round=4, choose_better=False, optimize=RMSE, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-05-01 09:28:33,026:INFO:Checking exceptions
2024-05-01 09:28:39,121:INFO:Initializing ensemble_model()
2024-05-01 09:28:39,121:INFO:ensemble_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=[GradientBoostingRegressor(random_state=4724), LGBMRegressor(n_jobs=-1, random_state=4724), XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...), RandomForestRegressor(n_jobs=-1, random_state=4724), Lasso(random_state=4724)], method=Boosting, fold=10, n_estimators=10, round=4, choose_better=False, optimize=RMSE, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-05-01 09:28:39,121:INFO:Checking exceptions
2024-05-01 09:31:07,811:INFO:Initializing finalize_model()
2024-05-01 09:31:07,811:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=VotingRegressor(estimators=[('Gradient Boosting Regressor',
                             GradientBoostingRegressor(random_state=4724)),
                            ('Light Gradient Boosting Machine',
                             LGBMRegressor(n_jobs=-1, random_state=4724)),
                            ('Extreme Gradient Boosting',
                             XGBRegressor(base_score=None, booster='gbtree',
                                          callbacks=None,
                                          colsample_bylevel=None,
                                          colsample_bynode=None,
                                          colsample_bytree=None, device='cpu',
                                          ear...
                                          max_cat_to_onehot=None,
                                          max_delta_step=None, max_depth=None,
                                          max_leaves=None,
                                          min_child_weight=None, missing=nan,
                                          monotone_constraints=None,
                                          multi_strategy=None,
                                          n_estimators=None, n_jobs=-1,
                                          num_parallel_tree=None,
                                          random_state=4724, ...)),
                            ('Random Forest Regressor',
                             RandomForestRegressor(n_jobs=-1,
                                                   random_state=4724)),
                            ('Lasso Regression', Lasso(random_state=4724))],
                n_jobs=-1), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-01 09:31:07,816:INFO:Finalizing VotingRegressor(estimators=[('Gradient Boosting Regressor',
                             GradientBoostingRegressor(random_state=4724)),
                            ('Light Gradient Boosting Machine',
                             LGBMRegressor(n_jobs=-1, random_state=4724)),
                            ('Extreme Gradient Boosting',
                             XGBRegressor(base_score=None, booster='gbtree',
                                          callbacks=None,
                                          colsample_bylevel=None,
                                          colsample_bynode=None,
                                          colsample_bytree=None, device='cpu',
                                          ear...
                                          max_cat_to_onehot=None,
                                          max_delta_step=None, max_depth=None,
                                          max_leaves=None,
                                          min_child_weight=None, missing=nan,
                                          monotone_constraints=None,
                                          multi_strategy=None,
                                          n_estimators=None, n_jobs=-1,
                                          num_parallel_tree=None,
                                          random_state=4724, ...)),
                            ('Random Forest Regressor',
                             RandomForestRegressor(n_jobs=-1,
                                                   random_state=4724)),
                            ('Lasso Regression', Lasso(random_state=4724))],
                n_jobs=-1)
2024-05-01 09:31:07,844:INFO:Initializing create_model()
2024-05-01 09:31:07,844:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=VotingRegressor(estimators=[('Gradient Boosting Regressor',
                             GradientBoostingRegressor(random_state=4724)),
                            ('Light Gradient Boosting Machine',
                             LGBMRegressor(n_jobs=-1, random_state=4724)),
                            ('Extreme Gradient Boosting',
                             XGBRegressor(base_score=None, booster='gbtree',
                                          callbacks=None,
                                          colsample_bylevel=None,
                                          colsample_bynode=None,
                                          colsample_bytree=None, device='cpu',
                                          ear...
                                          max_cat_to_onehot=None,
                                          max_delta_step=None, max_depth=None,
                                          max_leaves=None,
                                          min_child_weight=None, missing=nan,
                                          monotone_constraints=None,
                                          multi_strategy=None,
                                          n_estimators=None, n_jobs=-1,
                                          num_parallel_tree=None,
                                          random_state=4724, ...)),
                            ('Random Forest Regressor',
                             RandomForestRegressor(n_jobs=-1,
                                                   random_state=4724)),
                            ('Lasso Regression', Lasso(random_state=4724))],
                n_jobs=-1), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:31:07,845:INFO:Checking exceptions
2024-05-01 09:31:07,846:INFO:Importing libraries
2024-05-01 09:31:07,846:INFO:Copying training dataset
2024-05-01 09:31:07,849:INFO:Defining folds
2024-05-01 09:31:07,849:INFO:Declaring metric variables
2024-05-01 09:31:07,849:INFO:Importing untrained model
2024-05-01 09:31:07,849:INFO:Declaring custom model
2024-05-01 09:31:07,853:INFO:Voting Regressor Imported successfully
2024-05-01 09:31:07,853:INFO:Cross validation set to False
2024-05-01 09:31:07,853:INFO:Fitting Model
2024-05-01 09:31:09,869:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering',
                                             'steering_remote', 'leahter_seat',
                                             'driver...
                                                           max_cat_to_onehot=None,
                                                           max_delta_step=None,
                                                           max_depth=None,
                                                           max_leaves=None,
                                                           min_child_weight=None,
                                                           missing=nan,
                                                           monotone_constraints=None,
                                                           multi_strategy=None,
                                                           n_estimators=None,
                                                           n_jobs=-1,
                                                           num_parallel_tree=None,
                                                           random_state=4724, ...)),
                                             ('Random Forest Regressor',
                                              RandomForestRegressor(n_jobs=-1,
                                                                    random_state=4724)),
                                             ('Lasso Regression',
                                              Lasso(random_state=4724))],
                                 n_jobs=-1))])
2024-05-01 09:31:09,869:INFO:create_model() successfully completed......................................
2024-05-01 09:31:10,116:INFO:_master_model_container: 39
2024-05-01 09:31:10,116:INFO:_display_container: 5
2024-05-01 09:31:10,150:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering',
                                             'steering_remote', 'leahter_seat',
                                             'driver...
                                                           max_cat_to_onehot=None,
                                                           max_delta_step=None,
                                                           max_depth=None,
                                                           max_leaves=None,
                                                           min_child_weight=None,
                                                           missing=nan,
                                                           monotone_constraints=None,
                                                           multi_strategy=None,
                                                           n_estimators=None,
                                                           n_jobs=-1,
                                                           num_parallel_tree=None,
                                                           random_state=4724, ...)),
                                             ('Random Forest Regressor',
                                              RandomForestRegressor(n_jobs=-1,
                                                                    random_state=4724)),
                                             ('Lasso Regression',
                                              Lasso(random_state=4724))],
                                 n_jobs=-1))])
2024-05-01 09:31:10,150:INFO:finalize_model() successfully completed......................................
2024-05-01 09:32:17,974:INFO:Initializing predict_model()
2024-05-01 09:32:17,974:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering',
                                             'steering_remote', 'leahter_seat',
                                             'driver...
                                                           max_cat_to_onehot=None,
                                                           max_delta_step=None,
                                                           max_depth=None,
                                                           max_leaves=None,
                                                           min_child_weight=None,
                                                           missing=nan,
                                                           monotone_constraints=None,
                                                           multi_strategy=None,
                                                           n_estimators=None,
                                                           n_jobs=-1,
                                                           num_parallel_tree=None,
                                                           random_state=4724, ...)),
                                             ('Random Forest Regressor',
                                              RandomForestRegressor(n_jobs=-1,
                                                                    random_state=4724)),
                                             ('Lasso Regression',
                                              Lasso(random_state=4724))],
                                 n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000257485CF240>)
2024-05-01 09:32:17,974:INFO:Checking exceptions
2024-05-01 09:32:17,975:INFO:Preloading libraries
2024-05-01 09:32:17,976:INFO:Set up data.
2024-05-01 09:32:17,995:INFO:Set up index.
2024-05-01 09:42:41,758:INFO:Initializing create_model()
2024-05-01 09:42:41,759:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=gbr, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:42:41,759:INFO:Checking exceptions
2024-05-01 09:42:41,774:INFO:Importing libraries
2024-05-01 09:42:41,774:INFO:Copying training dataset
2024-05-01 09:42:41,809:INFO:Defining folds
2024-05-01 09:42:41,809:INFO:Declaring metric variables
2024-05-01 09:42:41,813:INFO:Importing untrained model
2024-05-01 09:42:41,816:INFO:Gradient Boosting Regressor Imported successfully
2024-05-01 09:42:41,818:INFO:Starting cross validation
2024-05-01 09:42:41,825:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:42:50,916:INFO:Calculating mean and std
2024-05-01 09:42:50,916:INFO:Creating metrics dataframe
2024-05-01 09:42:50,916:INFO:Finalizing model
2024-05-01 09:42:51,333:INFO:Uploading results into container
2024-05-01 09:42:51,333:INFO:Uploading model into container now
2024-05-01 09:42:51,362:INFO:_master_model_container: 40
2024-05-01 09:42:51,362:INFO:_display_container: 6
2024-05-01 09:42:51,363:INFO:GradientBoostingRegressor(random_state=4724)
2024-05-01 09:42:51,363:INFO:create_model() successfully completed......................................
2024-05-01 09:42:51,647:INFO:Initializing create_model()
2024-05-01 09:42:51,647:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=lightgbm, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:42:51,647:INFO:Checking exceptions
2024-05-01 09:42:51,671:INFO:Importing libraries
2024-05-01 09:42:51,671:INFO:Copying training dataset
2024-05-01 09:42:51,707:INFO:Defining folds
2024-05-01 09:42:51,707:INFO:Declaring metric variables
2024-05-01 09:42:51,710:INFO:Importing untrained model
2024-05-01 09:42:51,714:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-01 09:42:51,727:INFO:Starting cross validation
2024-05-01 09:42:51,728:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:42:52,834:INFO:Calculating mean and std
2024-05-01 09:42:52,834:INFO:Creating metrics dataframe
2024-05-01 09:42:52,851:INFO:Finalizing model
2024-05-01 09:42:52,908:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.001311 seconds.
2024-05-01 09:42:52,908:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-05-01 09:42:52,908:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-05-01 09:42:52,908:INFO:[LightGBM] [Info] Total Bins 457
2024-05-01 09:42:52,908:INFO:[LightGBM] [Info] Number of data points in the train set: 1581, number of used features: 93
2024-05-01 09:42:52,908:INFO:[LightGBM] [Info] Start training from score 1686.320051
2024-05-01 09:42:53,018:INFO:Uploading results into container
2024-05-01 09:42:53,018:INFO:Uploading model into container now
2024-05-01 09:42:53,047:INFO:_master_model_container: 41
2024-05-01 09:42:53,047:INFO:_display_container: 7
2024-05-01 09:42:53,048:INFO:LGBMRegressor(n_jobs=-1, random_state=4724)
2024-05-01 09:42:53,048:INFO:create_model() successfully completed......................................
2024-05-01 09:42:53,318:INFO:Initializing create_model()
2024-05-01 09:42:53,318:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=xgboost, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:42:53,318:INFO:Checking exceptions
2024-05-01 09:42:53,353:INFO:Importing libraries
2024-05-01 09:42:53,354:INFO:Copying training dataset
2024-05-01 09:42:53,378:INFO:Defining folds
2024-05-01 09:42:53,378:INFO:Declaring metric variables
2024-05-01 09:42:53,385:INFO:Importing untrained model
2024-05-01 09:42:53,385:INFO:Extreme Gradient Boosting Imported successfully
2024-05-01 09:42:53,385:INFO:Starting cross validation
2024-05-01 09:42:53,385:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:42:54,052:INFO:Calculating mean and std
2024-05-01 09:42:54,052:INFO:Creating metrics dataframe
2024-05-01 09:42:54,052:INFO:Finalizing model
2024-05-01 09:42:54,309:INFO:Uploading results into container
2024-05-01 09:42:54,309:INFO:Uploading model into container now
2024-05-01 09:42:54,331:INFO:_master_model_container: 42
2024-05-01 09:42:54,331:INFO:_display_container: 8
2024-05-01 09:42:54,333:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...)
2024-05-01 09:42:54,333:INFO:create_model() successfully completed......................................
2024-05-01 09:42:54,631:INFO:Initializing create_model()
2024-05-01 09:42:54,631:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=rf, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:42:54,631:INFO:Checking exceptions
2024-05-01 09:42:54,654:INFO:Importing libraries
2024-05-01 09:42:54,654:INFO:Copying training dataset
2024-05-01 09:42:54,679:INFO:Defining folds
2024-05-01 09:42:54,679:INFO:Declaring metric variables
2024-05-01 09:42:54,679:INFO:Importing untrained model
2024-05-01 09:42:54,679:INFO:Random Forest Regressor Imported successfully
2024-05-01 09:42:54,695:INFO:Starting cross validation
2024-05-01 09:42:54,695:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:42:58,149:INFO:Calculating mean and std
2024-05-01 09:42:58,150:INFO:Creating metrics dataframe
2024-05-01 09:42:58,154:INFO:Finalizing model
2024-05-01 09:42:58,606:INFO:Uploading results into container
2024-05-01 09:42:58,607:INFO:Uploading model into container now
2024-05-01 09:42:58,617:INFO:_master_model_container: 43
2024-05-01 09:42:58,617:INFO:_display_container: 9
2024-05-01 09:42:58,618:INFO:RandomForestRegressor(n_jobs=-1, random_state=4724)
2024-05-01 09:42:58,618:INFO:create_model() successfully completed......................................
2024-05-01 09:42:58,893:INFO:Initializing create_model()
2024-05-01 09:42:58,894:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=lasso, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:42:58,894:INFO:Checking exceptions
2024-05-01 09:42:58,914:INFO:Importing libraries
2024-05-01 09:42:58,914:INFO:Copying training dataset
2024-05-01 09:42:58,949:INFO:Defining folds
2024-05-01 09:42:58,949:INFO:Declaring metric variables
2024-05-01 09:42:58,952:INFO:Importing untrained model
2024-05-01 09:42:58,955:INFO:Lasso Regression Imported successfully
2024-05-01 09:42:58,966:INFO:Starting cross validation
2024-05-01 09:42:58,967:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:42:59,246:INFO:Calculating mean and std
2024-05-01 09:42:59,246:INFO:Creating metrics dataframe
2024-05-01 09:42:59,251:INFO:Finalizing model
2024-05-01 09:42:59,315:INFO:Uploading results into container
2024-05-01 09:42:59,316:INFO:Uploading model into container now
2024-05-01 09:42:59,326:INFO:_master_model_container: 44
2024-05-01 09:42:59,326:INFO:_display_container: 10
2024-05-01 09:42:59,328:INFO:Lasso(random_state=4724)
2024-05-01 09:42:59,328:INFO:create_model() successfully completed......................................
2024-05-01 09:45:20,824:INFO:Initializing tune_model()
2024-05-01 09:45:20,825:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=GradientBoostingRegressor(random_state=4724), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-01 09:45:20,825:INFO:Checking exceptions
2024-05-01 09:45:20,852:INFO:Copying training dataset
2024-05-01 09:45:20,866:INFO:Checking base model
2024-05-01 09:45:20,866:INFO:Base model : Gradient Boosting Regressor
2024-05-01 09:45:20,885:INFO:Declaring metric variables
2024-05-01 09:45:20,888:INFO:Defining Hyperparameters
2024-05-01 09:45:21,149:INFO:Tuning with n_jobs=-1
2024-05-01 09:45:21,149:INFO:Initializing RandomizedSearchCV
2024-05-01 09:45:29,174:INFO:best_params: {'actual_estimator__subsample': 0.75, 'actual_estimator__n_estimators': 80, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.0005, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 2, 'actual_estimator__learning_rate': 0.4}
2024-05-01 09:45:29,174:INFO:Hyperparameter search completed
2024-05-01 09:45:29,174:INFO:SubProcess create_model() called ==================================
2024-05-01 09:45:29,174:INFO:Initializing create_model()
2024-05-01 09:45:29,174:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=GradientBoostingRegressor(random_state=4724), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002574A0C7450>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.75, 'n_estimators': 80, 'min_samples_split': 2, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.0005, 'max_features': 1.0, 'max_depth': 2, 'learning_rate': 0.4})
2024-05-01 09:45:29,174:INFO:Checking exceptions
2024-05-01 09:45:29,174:INFO:Importing libraries
2024-05-01 09:45:29,174:INFO:Copying training dataset
2024-05-01 09:45:29,195:INFO:Defining folds
2024-05-01 09:45:29,195:INFO:Declaring metric variables
2024-05-01 09:45:29,195:INFO:Importing untrained model
2024-05-01 09:45:29,195:INFO:Declaring custom model
2024-05-01 09:45:29,207:INFO:Gradient Boosting Regressor Imported successfully
2024-05-01 09:45:29,207:INFO:Starting cross validation
2024-05-01 09:45:29,207:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:45:29,841:INFO:Calculating mean and std
2024-05-01 09:45:29,841:INFO:Creating metrics dataframe
2024-05-01 09:45:29,841:INFO:Finalizing model
2024-05-01 09:45:30,058:INFO:Uploading results into container
2024-05-01 09:45:30,058:INFO:Uploading model into container now
2024-05-01 09:45:30,058:INFO:_master_model_container: 45
2024-05-01 09:45:30,058:INFO:_display_container: 11
2024-05-01 09:45:30,058:INFO:GradientBoostingRegressor(learning_rate=0.4, max_depth=2, max_features=1.0,
                          min_impurity_decrease=0.0005, min_samples_leaf=2,
                          n_estimators=80, random_state=4724, subsample=0.75)
2024-05-01 09:45:30,058:INFO:create_model() successfully completed......................................
2024-05-01 09:45:30,325:INFO:SubProcess create_model() end ==================================
2024-05-01 09:45:30,325:INFO:choose_better activated
2024-05-01 09:45:30,342:INFO:SubProcess create_model() called ==================================
2024-05-01 09:45:30,342:INFO:Initializing create_model()
2024-05-01 09:45:30,342:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=GradientBoostingRegressor(random_state=4724), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:45:30,342:INFO:Checking exceptions
2024-05-01 09:45:30,342:INFO:Importing libraries
2024-05-01 09:45:30,342:INFO:Copying training dataset
2024-05-01 09:45:30,375:INFO:Defining folds
2024-05-01 09:45:30,375:INFO:Declaring metric variables
2024-05-01 09:45:30,375:INFO:Importing untrained model
2024-05-01 09:45:30,375:INFO:Declaring custom model
2024-05-01 09:45:30,375:INFO:Gradient Boosting Regressor Imported successfully
2024-05-01 09:45:30,375:INFO:Starting cross validation
2024-05-01 09:45:30,375:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:45:31,476:INFO:Calculating mean and std
2024-05-01 09:45:31,476:INFO:Creating metrics dataframe
2024-05-01 09:45:31,476:INFO:Finalizing model
2024-05-01 09:45:31,893:INFO:Uploading results into container
2024-05-01 09:45:31,893:INFO:Uploading model into container now
2024-05-01 09:45:31,893:INFO:_master_model_container: 46
2024-05-01 09:45:31,893:INFO:_display_container: 12
2024-05-01 09:45:31,893:INFO:GradientBoostingRegressor(random_state=4724)
2024-05-01 09:45:31,893:INFO:create_model() successfully completed......................................
2024-05-01 09:45:32,144:INFO:SubProcess create_model() end ==================================
2024-05-01 09:45:32,160:INFO:GradientBoostingRegressor(random_state=4724) result for R2 is 0.9653
2024-05-01 09:45:32,160:INFO:GradientBoostingRegressor(learning_rate=0.4, max_depth=2, max_features=1.0,
                          min_impurity_decrease=0.0005, min_samples_leaf=2,
                          n_estimators=80, random_state=4724, subsample=0.75) result for R2 is 0.9635
2024-05-01 09:45:32,160:INFO:GradientBoostingRegressor(random_state=4724) is best model
2024-05-01 09:45:32,160:INFO:choose_better completed
2024-05-01 09:45:32,160:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-01 09:45:32,176:INFO:_master_model_container: 46
2024-05-01 09:45:32,177:INFO:_display_container: 11
2024-05-01 09:45:32,177:INFO:GradientBoostingRegressor(random_state=4724)
2024-05-01 09:45:32,178:INFO:tune_model() successfully completed......................................
2024-05-01 09:45:32,443:INFO:Initializing tune_model()
2024-05-01 09:45:32,443:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=LGBMRegressor(n_jobs=-1, random_state=4724), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-01 09:45:32,444:INFO:Checking exceptions
2024-05-01 09:45:32,482:INFO:Copying training dataset
2024-05-01 09:45:32,497:INFO:Checking base model
2024-05-01 09:45:32,497:INFO:Base model : Light Gradient Boosting Machine
2024-05-01 09:45:32,497:INFO:Declaring metric variables
2024-05-01 09:45:32,497:INFO:Defining Hyperparameters
2024-05-01 09:45:32,775:INFO:Tuning with n_jobs=-1
2024-05-01 09:45:32,775:INFO:Initializing RandomizedSearchCV
2024-05-01 09:45:58,054:INFO:best_params: {'actual_estimator__reg_lambda': 10, 'actual_estimator__reg_alpha': 0.7, 'actual_estimator__num_leaves': 60, 'actual_estimator__n_estimators': 110, 'actual_estimator__min_split_gain': 0.4, 'actual_estimator__min_child_samples': 41, 'actual_estimator__learning_rate': 0.2, 'actual_estimator__feature_fraction': 1.0, 'actual_estimator__bagging_freq': 5, 'actual_estimator__bagging_fraction': 0.6}
2024-05-01 09:45:58,055:INFO:Hyperparameter search completed
2024-05-01 09:45:58,056:INFO:SubProcess create_model() called ==================================
2024-05-01 09:45:58,057:INFO:Initializing create_model()
2024-05-01 09:45:58,057:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=LGBMRegressor(n_jobs=-1, random_state=4724), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025745251350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'reg_lambda': 10, 'reg_alpha': 0.7, 'num_leaves': 60, 'n_estimators': 110, 'min_split_gain': 0.4, 'min_child_samples': 41, 'learning_rate': 0.2, 'feature_fraction': 1.0, 'bagging_freq': 5, 'bagging_fraction': 0.6})
2024-05-01 09:45:58,057:INFO:Checking exceptions
2024-05-01 09:45:58,058:INFO:Importing libraries
2024-05-01 09:45:58,058:INFO:Copying training dataset
2024-05-01 09:45:58,120:INFO:Defining folds
2024-05-01 09:45:58,121:INFO:Declaring metric variables
2024-05-01 09:45:58,128:INFO:Importing untrained model
2024-05-01 09:45:58,128:INFO:Declaring custom model
2024-05-01 09:45:58,135:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-01 09:45:58,149:INFO:Starting cross validation
2024-05-01 09:45:58,149:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:45:59,013:INFO:Calculating mean and std
2024-05-01 09:45:59,013:INFO:Creating metrics dataframe
2024-05-01 09:45:59,029:INFO:Finalizing model
2024-05-01 09:45:59,087:INFO:[LightGBM] [Warning] feature_fraction is set=1.0, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=1.0
2024-05-01 09:45:59,087:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2024-05-01 09:45:59,088:INFO:[LightGBM] [Warning] bagging_freq is set=5, subsample_freq=0 will be ignored. Current value: bagging_freq=5
2024-05-01 09:45:59,095:INFO:[LightGBM] [Warning] feature_fraction is set=1.0, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=1.0
2024-05-01 09:45:59,095:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2024-05-01 09:45:59,095:INFO:[LightGBM] [Warning] bagging_freq is set=5, subsample_freq=0 will be ignored. Current value: bagging_freq=5
2024-05-01 09:45:59,095:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001925 seconds.
2024-05-01 09:45:59,095:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-05-01 09:45:59,095:INFO:[LightGBM] [Info] Total Bins 449
2024-05-01 09:45:59,095:INFO:[LightGBM] [Info] Number of data points in the train set: 1581, number of used features: 89
2024-05-01 09:45:59,095:INFO:[LightGBM] [Info] Start training from score 1686.320051
2024-05-01 09:45:59,095:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,095:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,105:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,107:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,109:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,110:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,110:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,110:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,110:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,110:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,110:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,110:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,110:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,110:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,121:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,187:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,187:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,187:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,187:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,187:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,187:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,187:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,187:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,187:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,187:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,187:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,187:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,187:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,187:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,187:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,187:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-05-01 09:45:59,204:INFO:Uploading results into container
2024-05-01 09:45:59,204:INFO:Uploading model into container now
2024-05-01 09:45:59,204:INFO:_master_model_container: 47
2024-05-01 09:45:59,204:INFO:_display_container: 12
2024-05-01 09:45:59,204:INFO:LGBMRegressor(bagging_fraction=0.6, bagging_freq=5, feature_fraction=1.0,
              learning_rate=0.2, min_child_samples=41, min_split_gain=0.4,
              n_estimators=110, n_jobs=-1, num_leaves=60, random_state=4724,
              reg_alpha=0.7, reg_lambda=10)
2024-05-01 09:45:59,204:INFO:create_model() successfully completed......................................
2024-05-01 09:45:59,526:INFO:SubProcess create_model() end ==================================
2024-05-01 09:45:59,526:INFO:choose_better activated
2024-05-01 09:45:59,540:INFO:SubProcess create_model() called ==================================
2024-05-01 09:45:59,541:INFO:Initializing create_model()
2024-05-01 09:45:59,541:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=LGBMRegressor(n_jobs=-1, random_state=4724), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:45:59,542:INFO:Checking exceptions
2024-05-01 09:45:59,544:INFO:Importing libraries
2024-05-01 09:45:59,545:INFO:Copying training dataset
2024-05-01 09:45:59,574:INFO:Defining folds
2024-05-01 09:45:59,574:INFO:Declaring metric variables
2024-05-01 09:45:59,574:INFO:Importing untrained model
2024-05-01 09:45:59,575:INFO:Declaring custom model
2024-05-01 09:45:59,575:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-01 09:45:59,575:INFO:Starting cross validation
2024-05-01 09:45:59,575:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:46:00,673:INFO:Calculating mean and std
2024-05-01 09:46:00,674:INFO:Creating metrics dataframe
2024-05-01 09:46:00,674:INFO:Finalizing model
2024-05-01 09:46:00,734:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.001277 seconds.
2024-05-01 09:46:00,734:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-05-01 09:46:00,734:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-05-01 09:46:00,735:INFO:[LightGBM] [Info] Total Bins 457
2024-05-01 09:46:00,735:INFO:[LightGBM] [Info] Number of data points in the train set: 1581, number of used features: 93
2024-05-01 09:46:00,736:INFO:[LightGBM] [Info] Start training from score 1686.320051
2024-05-01 09:46:00,843:INFO:Uploading results into container
2024-05-01 09:46:00,843:INFO:Uploading model into container now
2024-05-01 09:46:00,843:INFO:_master_model_container: 48
2024-05-01 09:46:00,843:INFO:_display_container: 13
2024-05-01 09:46:00,843:INFO:LGBMRegressor(n_jobs=-1, random_state=4724)
2024-05-01 09:46:00,843:INFO:create_model() successfully completed......................................
2024-05-01 09:46:01,156:INFO:SubProcess create_model() end ==================================
2024-05-01 09:46:01,156:INFO:LGBMRegressor(n_jobs=-1, random_state=4724) result for R2 is 0.9642
2024-05-01 09:46:01,156:INFO:LGBMRegressor(bagging_fraction=0.6, bagging_freq=5, feature_fraction=1.0,
              learning_rate=0.2, min_child_samples=41, min_split_gain=0.4,
              n_estimators=110, n_jobs=-1, num_leaves=60, random_state=4724,
              reg_alpha=0.7, reg_lambda=10) result for R2 is 0.961
2024-05-01 09:46:01,156:INFO:LGBMRegressor(n_jobs=-1, random_state=4724) is best model
2024-05-01 09:46:01,156:INFO:choose_better completed
2024-05-01 09:46:01,156:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-01 09:46:01,179:INFO:_master_model_container: 48
2024-05-01 09:46:01,180:INFO:_display_container: 12
2024-05-01 09:46:01,180:INFO:LGBMRegressor(n_jobs=-1, random_state=4724)
2024-05-01 09:46:01,180:INFO:tune_model() successfully completed......................................
2024-05-01 09:46:01,440:INFO:Initializing tune_model()
2024-05-01 09:46:01,440:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-01 09:46:01,440:INFO:Checking exceptions
2024-05-01 09:46:01,483:INFO:Copying training dataset
2024-05-01 09:46:01,500:INFO:Checking base model
2024-05-01 09:46:01,500:INFO:Base model : Extreme Gradient Boosting
2024-05-01 09:46:01,508:INFO:Declaring metric variables
2024-05-01 09:46:01,512:INFO:Defining Hyperparameters
2024-05-01 09:46:01,758:INFO:Tuning with n_jobs=-1
2024-05-01 09:46:01,758:INFO:Initializing RandomizedSearchCV
2024-05-01 09:46:08,747:INFO:best_params: {'actual_estimator__subsample': 0.9, 'actual_estimator__scale_pos_weight': 3.4, 'actual_estimator__reg_lambda': 3, 'actual_estimator__reg_alpha': 0.005, 'actual_estimator__n_estimators': 90, 'actual_estimator__min_child_weight': 4, 'actual_estimator__max_depth': 8, 'actual_estimator__learning_rate': 0.05, 'actual_estimator__colsample_bytree': 0.9}
2024-05-01 09:46:08,747:INFO:Hyperparameter search completed
2024-05-01 09:46:08,747:INFO:SubProcess create_model() called ==================================
2024-05-01 09:46:08,747:INFO:Initializing create_model()
2024-05-01 09:46:08,747:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025749D71890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.9, 'scale_pos_weight': 3.4, 'reg_lambda': 3, 'reg_alpha': 0.005, 'n_estimators': 90, 'min_child_weight': 4, 'max_depth': 8, 'learning_rate': 0.05, 'colsample_bytree': 0.9})
2024-05-01 09:46:08,747:INFO:Checking exceptions
2024-05-01 09:46:08,747:INFO:Importing libraries
2024-05-01 09:46:08,747:INFO:Copying training dataset
2024-05-01 09:46:08,766:INFO:Defining folds
2024-05-01 09:46:08,766:INFO:Declaring metric variables
2024-05-01 09:46:08,781:INFO:Importing untrained model
2024-05-01 09:46:08,781:INFO:Declaring custom model
2024-05-01 09:46:08,785:INFO:Extreme Gradient Boosting Imported successfully
2024-05-01 09:46:08,792:INFO:Starting cross validation
2024-05-01 09:46:08,793:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:46:09,500:INFO:Calculating mean and std
2024-05-01 09:46:09,500:INFO:Creating metrics dataframe
2024-05-01 09:46:09,516:INFO:Finalizing model
2024-05-01 09:46:09,781:INFO:Uploading results into container
2024-05-01 09:46:09,781:INFO:Uploading model into container now
2024-05-01 09:46:09,781:INFO:_master_model_container: 49
2024-05-01 09:46:09,781:INFO:_display_container: 13
2024-05-01 09:46:09,781:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=8, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=90, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...)
2024-05-01 09:46:09,781:INFO:create_model() successfully completed......................................
2024-05-01 09:46:10,066:INFO:SubProcess create_model() end ==================================
2024-05-01 09:46:10,066:INFO:choose_better activated
2024-05-01 09:46:10,083:INFO:SubProcess create_model() called ==================================
2024-05-01 09:46:10,083:INFO:Initializing create_model()
2024-05-01 09:46:10,083:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:46:10,083:INFO:Checking exceptions
2024-05-01 09:46:10,083:INFO:Importing libraries
2024-05-01 09:46:10,083:INFO:Copying training dataset
2024-05-01 09:46:10,115:INFO:Defining folds
2024-05-01 09:46:10,115:INFO:Declaring metric variables
2024-05-01 09:46:10,115:INFO:Importing untrained model
2024-05-01 09:46:10,115:INFO:Declaring custom model
2024-05-01 09:46:10,115:INFO:Extreme Gradient Boosting Imported successfully
2024-05-01 09:46:10,115:INFO:Starting cross validation
2024-05-01 09:46:10,115:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:46:10,741:INFO:Calculating mean and std
2024-05-01 09:46:10,741:INFO:Creating metrics dataframe
2024-05-01 09:46:10,743:INFO:Finalizing model
2024-05-01 09:46:10,970:INFO:Uploading results into container
2024-05-01 09:46:10,970:INFO:Uploading model into container now
2024-05-01 09:46:10,983:INFO:_master_model_container: 50
2024-05-01 09:46:10,983:INFO:_display_container: 14
2024-05-01 09:46:10,986:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...)
2024-05-01 09:46:10,986:INFO:create_model() successfully completed......................................
2024-05-01 09:46:11,268:INFO:SubProcess create_model() end ==================================
2024-05-01 09:46:11,268:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...) result for R2 is 0.962
2024-05-01 09:46:11,284:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=8, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=90, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...) result for R2 is 0.9645
2024-05-01 09:46:11,285:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=8, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=90, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...) is best model
2024-05-01 09:46:11,285:INFO:choose_better completed
2024-05-01 09:46:11,285:INFO:_master_model_container: 50
2024-05-01 09:46:11,285:INFO:_display_container: 13
2024-05-01 09:46:11,285:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=8, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=90, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...)
2024-05-01 09:46:11,285:INFO:tune_model() successfully completed......................................
2024-05-01 09:46:11,566:INFO:Initializing tune_model()
2024-05-01 09:46:11,566:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4724), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-01 09:46:11,566:INFO:Checking exceptions
2024-05-01 09:46:11,583:INFO:Copying training dataset
2024-05-01 09:46:11,609:INFO:Checking base model
2024-05-01 09:46:11,609:INFO:Base model : Random Forest Regressor
2024-05-01 09:46:11,620:INFO:Declaring metric variables
2024-05-01 09:46:11,623:INFO:Defining Hyperparameters
2024-05-01 09:46:11,907:INFO:Tuning with n_jobs=-1
2024-05-01 09:46:11,907:INFO:Initializing RandomizedSearchCV
2024-05-01 09:46:39,661:INFO:best_params: {'actual_estimator__n_estimators': 260, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.05, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 6, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2024-05-01 09:46:39,661:INFO:Hyperparameter search completed
2024-05-01 09:46:39,661:INFO:SubProcess create_model() called ==================================
2024-05-01 09:46:39,661:INFO:Initializing create_model()
2024-05-01 09:46:39,661:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4724), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025738B50410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 260, 'min_samples_split': 5, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.05, 'max_features': 1.0, 'max_depth': 6, 'criterion': 'squared_error', 'bootstrap': True})
2024-05-01 09:46:39,661:INFO:Checking exceptions
2024-05-01 09:46:39,661:INFO:Importing libraries
2024-05-01 09:46:39,661:INFO:Copying training dataset
2024-05-01 09:46:39,683:INFO:Defining folds
2024-05-01 09:46:39,683:INFO:Declaring metric variables
2024-05-01 09:46:39,695:INFO:Importing untrained model
2024-05-01 09:46:39,695:INFO:Declaring custom model
2024-05-01 09:46:39,695:INFO:Random Forest Regressor Imported successfully
2024-05-01 09:46:39,695:INFO:Starting cross validation
2024-05-01 09:46:39,711:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:46:42,748:INFO:Calculating mean and std
2024-05-01 09:46:42,748:INFO:Creating metrics dataframe
2024-05-01 09:46:42,764:INFO:Finalizing model
2024-05-01 09:46:43,250:INFO:Uploading results into container
2024-05-01 09:46:43,250:INFO:Uploading model into container now
2024-05-01 09:46:43,250:INFO:_master_model_container: 51
2024-05-01 09:46:43,250:INFO:_display_container: 14
2024-05-01 09:46:43,250:INFO:RandomForestRegressor(max_depth=6, min_impurity_decrease=0.05,
                      min_samples_leaf=5, min_samples_split=5, n_estimators=260,
                      n_jobs=-1, random_state=4724)
2024-05-01 09:46:43,250:INFO:create_model() successfully completed......................................
2024-05-01 09:46:43,517:INFO:SubProcess create_model() end ==================================
2024-05-01 09:46:43,532:INFO:choose_better activated
2024-05-01 09:46:43,534:INFO:SubProcess create_model() called ==================================
2024-05-01 09:46:43,534:INFO:Initializing create_model()
2024-05-01 09:46:43,534:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4724), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:46:43,534:INFO:Checking exceptions
2024-05-01 09:46:43,534:INFO:Importing libraries
2024-05-01 09:46:43,534:INFO:Copying training dataset
2024-05-01 09:46:43,565:INFO:Defining folds
2024-05-01 09:46:43,565:INFO:Declaring metric variables
2024-05-01 09:46:43,565:INFO:Importing untrained model
2024-05-01 09:46:43,565:INFO:Declaring custom model
2024-05-01 09:46:43,565:INFO:Random Forest Regressor Imported successfully
2024-05-01 09:46:43,565:INFO:Starting cross validation
2024-05-01 09:46:43,565:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:46:47,086:INFO:Calculating mean and std
2024-05-01 09:46:47,086:INFO:Creating metrics dataframe
2024-05-01 09:46:47,086:INFO:Finalizing model
2024-05-01 09:46:47,569:INFO:Uploading results into container
2024-05-01 09:46:47,569:INFO:Uploading model into container now
2024-05-01 09:46:47,569:INFO:_master_model_container: 52
2024-05-01 09:46:47,569:INFO:_display_container: 15
2024-05-01 09:46:47,569:INFO:RandomForestRegressor(n_jobs=-1, random_state=4724)
2024-05-01 09:46:47,569:INFO:create_model() successfully completed......................................
2024-05-01 09:46:47,870:INFO:SubProcess create_model() end ==================================
2024-05-01 09:46:47,870:INFO:RandomForestRegressor(n_jobs=-1, random_state=4724) result for R2 is 0.9595
2024-05-01 09:46:47,870:INFO:RandomForestRegressor(max_depth=6, min_impurity_decrease=0.05,
                      min_samples_leaf=5, min_samples_split=5, n_estimators=260,
                      n_jobs=-1, random_state=4724) result for R2 is 0.9524
2024-05-01 09:46:47,870:INFO:RandomForestRegressor(n_jobs=-1, random_state=4724) is best model
2024-05-01 09:46:47,870:INFO:choose_better completed
2024-05-01 09:46:47,870:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-01 09:46:47,893:INFO:_master_model_container: 52
2024-05-01 09:46:47,894:INFO:_display_container: 14
2024-05-01 09:46:47,894:INFO:RandomForestRegressor(n_jobs=-1, random_state=4724)
2024-05-01 09:46:47,894:INFO:tune_model() successfully completed......................................
2024-05-01 09:46:48,168:INFO:Initializing tune_model()
2024-05-01 09:46:48,168:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=Lasso(random_state=4724), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-01 09:46:48,168:INFO:Checking exceptions
2024-05-01 09:46:48,183:INFO:Copying training dataset
2024-05-01 09:46:48,224:INFO:Checking base model
2024-05-01 09:46:48,224:INFO:Base model : Lasso Regression
2024-05-01 09:46:48,228:INFO:Declaring metric variables
2024-05-01 09:46:48,231:INFO:Defining Hyperparameters
2024-05-01 09:46:48,493:INFO:Tuning with n_jobs=-1
2024-05-01 09:46:48,493:INFO:Initializing RandomizedSearchCV
2024-05-01 09:46:49,821:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.348e+07, tolerance: 1.386e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 09:46:49,888:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.227e+07, tolerance: 1.357e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 09:46:49,921:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.026e+07, tolerance: 1.299e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 09:46:49,955:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.838e+07, tolerance: 1.349e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 09:46:50,005:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.578e+06, tolerance: 1.367e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 09:46:50,071:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.979e+07, tolerance: 5.431e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 09:46:50,071:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.807e+06, tolerance: 1.343e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 09:46:50,121:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.070e+07, tolerance: 5.526e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 09:46:50,121:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.205e+07, tolerance: 1.363e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 09:46:50,138:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.313e+07, tolerance: 1.355e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 09:46:50,222:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.088e+07, tolerance: 1.363e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 09:46:50,271:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.161e+07, tolerance: 1.373e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 09:46:50,355:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.777e+07, tolerance: 5.369e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 09:46:50,388:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.914e+07, tolerance: 5.421e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 09:46:50,405:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.906e+07, tolerance: 5.292e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 09:46:50,539:INFO:best_params: {'actual_estimator__fit_intercept': True, 'actual_estimator__alpha': 0.12}
2024-05-01 09:46:50,539:INFO:Hyperparameter search completed
2024-05-01 09:46:50,539:INFO:SubProcess create_model() called ==================================
2024-05-01 09:46:50,539:INFO:Initializing create_model()
2024-05-01 09:46:50,539:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=Lasso(random_state=4724), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025734FB1F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'fit_intercept': True, 'alpha': 0.12})
2024-05-01 09:46:50,539:INFO:Checking exceptions
2024-05-01 09:46:50,539:INFO:Importing libraries
2024-05-01 09:46:50,539:INFO:Copying training dataset
2024-05-01 09:46:50,555:INFO:Defining folds
2024-05-01 09:46:50,555:INFO:Declaring metric variables
2024-05-01 09:46:50,573:INFO:Importing untrained model
2024-05-01 09:46:50,574:INFO:Declaring custom model
2024-05-01 09:46:50,576:INFO:Lasso Regression Imported successfully
2024-05-01 09:46:50,576:INFO:Starting cross validation
2024-05-01 09:46:50,576:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:46:50,818:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.578e+06, tolerance: 1.367e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 09:46:50,818:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.227e+07, tolerance: 1.357e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 09:46:50,849:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.205e+07, tolerance: 1.363e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 09:46:50,849:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.807e+06, tolerance: 1.343e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 09:46:50,865:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.348e+07, tolerance: 1.386e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 09:46:50,880:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.838e+07, tolerance: 1.349e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 09:46:50,880:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.088e+07, tolerance: 1.363e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 09:46:50,927:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.161e+07, tolerance: 1.373e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 09:46:50,974:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.026e+07, tolerance: 1.299e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 09:46:50,990:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.313e+07, tolerance: 1.355e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 09:46:51,005:INFO:Calculating mean and std
2024-05-01 09:46:51,005:INFO:Creating metrics dataframe
2024-05-01 09:46:51,005:INFO:Finalizing model
2024-05-01 09:46:51,140:INFO:Uploading results into container
2024-05-01 09:46:51,140:INFO:Uploading model into container now
2024-05-01 09:46:51,140:INFO:_master_model_container: 53
2024-05-01 09:46:51,140:INFO:_display_container: 15
2024-05-01 09:46:51,140:INFO:Lasso(alpha=0.12, random_state=4724)
2024-05-01 09:46:51,140:INFO:create_model() successfully completed......................................
2024-05-01 09:46:51,423:INFO:SubProcess create_model() end ==================================
2024-05-01 09:46:51,423:INFO:choose_better activated
2024-05-01 09:46:51,423:INFO:SubProcess create_model() called ==================================
2024-05-01 09:46:51,423:INFO:Initializing create_model()
2024-05-01 09:46:51,423:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=Lasso(random_state=4724), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 09:46:51,423:INFO:Checking exceptions
2024-05-01 09:46:51,423:INFO:Importing libraries
2024-05-01 09:46:51,423:INFO:Copying training dataset
2024-05-01 09:46:51,460:INFO:Defining folds
2024-05-01 09:46:51,460:INFO:Declaring metric variables
2024-05-01 09:46:51,461:INFO:Importing untrained model
2024-05-01 09:46:51,461:INFO:Declaring custom model
2024-05-01 09:46:51,462:INFO:Lasso Regression Imported successfully
2024-05-01 09:46:51,462:INFO:Starting cross validation
2024-05-01 09:46:51,462:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 09:46:51,707:INFO:Calculating mean and std
2024-05-01 09:46:51,707:INFO:Creating metrics dataframe
2024-05-01 09:46:51,707:INFO:Finalizing model
2024-05-01 09:46:51,773:INFO:Uploading results into container
2024-05-01 09:46:51,773:INFO:Uploading model into container now
2024-05-01 09:46:51,773:INFO:_master_model_container: 54
2024-05-01 09:46:51,773:INFO:_display_container: 16
2024-05-01 09:46:51,773:INFO:Lasso(random_state=4724)
2024-05-01 09:46:51,773:INFO:create_model() successfully completed......................................
2024-05-01 09:46:52,074:INFO:SubProcess create_model() end ==================================
2024-05-01 09:46:52,074:INFO:Lasso(random_state=4724) result for R2 is 0.9458
2024-05-01 09:46:52,074:INFO:Lasso(alpha=0.12, random_state=4724) result for R2 is 0.9455
2024-05-01 09:46:52,074:INFO:Lasso(random_state=4724) is best model
2024-05-01 09:46:52,074:INFO:choose_better completed
2024-05-01 09:46:52,074:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-01 09:46:52,074:INFO:_master_model_container: 54
2024-05-01 09:46:52,074:INFO:_display_container: 15
2024-05-01 09:46:52,074:INFO:Lasso(random_state=4724)
2024-05-01 09:46:52,074:INFO:tune_model() successfully completed......................................
2024-05-01 09:57:58,860:INFO:Initializing save_model()
2024-05-01 09:57:58,861:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering',
                                             'steering_remote', 'leahter_seat',
                                             'driver...
                                                           max_cat_to_onehot=None,
                                                           max_delta_step=None,
                                                           max_depth=None,
                                                           max_leaves=None,
                                                           min_child_weight=None,
                                                           missing=nan,
                                                           monotone_constraints=None,
                                                           multi_strategy=None,
                                                           n_estimators=None,
                                                           n_jobs=-1,
                                                           num_parallel_tree=None,
                                                           random_state=4724, ...)),
                                             ('Random Forest Regressor',
                                              RandomForestRegressor(n_jobs=-1,
                                                                    random_state=4724)),
                                             ('Lasso Regression',
                                              Lasso(random_state=4724))],
                                 n_jobs=-1))]), model_name=./model/grandeur_auto, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\1104-27\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering',
                                             'steering_remote', 'leahter_seat',
                                             'driver_elec_seat',
                                             'pass_elec_seat', 'back_elec_seat',
                                             'driver_memory_seat',
                                             'massage_seat',
                                             'supervision_cluster',
                                             'paddle_shift', 'hi_pass',
                                             'pass_memory_seat',
                                             'back_heated_seat', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2024-05-01 09:57:58,861:INFO:Adding model into prep_pipe
2024-05-01 09:57:58,861:WARNING:Only Model saved as it was a pipeline.
2024-05-01 09:57:58,970:INFO:./model/grandeur_auto.pkl saved in current working directory
2024-05-01 09:57:59,001:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering',
                                             'steering_remote', 'leahter_seat',
                                             'driver...
                                                           max_cat_to_onehot=None,
                                                           max_delta_step=None,
                                                           max_depth=None,
                                                           max_leaves=None,
                                                           min_child_weight=None,
                                                           missing=nan,
                                                           monotone_constraints=None,
                                                           multi_strategy=None,
                                                           n_estimators=None,
                                                           n_jobs=-1,
                                                           num_parallel_tree=None,
                                                           random_state=4724, ...)),
                                             ('Random Forest Regressor',
                                              RandomForestRegressor(n_jobs=-1,
                                                                    random_state=4724)),
                                             ('Lasso Regression',
                                              Lasso(random_state=4724))],
                                 n_jobs=-1))])
2024-05-01 09:57:59,001:INFO:save_model() successfully completed......................................
2024-05-01 09:59:15,704:INFO:Initializing load_model()
2024-05-01 09:59:15,704:INFO:load_model(model_name=./model/grandeur_auto, platform=None, authentication=None, verbose=True)
2024-05-01 09:59:30,776:INFO:Initializing load_model()
2024-05-01 09:59:30,777:INFO:load_model(model_name=./model/grandeur_auto, platform=None, authentication=None, verbose=True)
2024-05-01 09:59:36,922:INFO:Initializing load_model()
2024-05-01 09:59:36,922:INFO:load_model(model_name=./model/grandeur_auto, platform=None, authentication=None, verbose=True)
2024-05-01 10:01:58,529:INFO:Initializing predict_model()
2024-05-01 10:01:58,529:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=Pipeline(memory=FastMemory(location=C:\Users\1104-27\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering...
                                                           max_cat_to_onehot=None,
                                                           max_delta_step=None,
                                                           max_depth=None,
                                                           max_leaves=None,
                                                           min_child_weight=None,
                                                           missing=nan,
                                                           monotone_constraints=None,
                                                           multi_strategy=None,
                                                           n_estimators=None,
                                                           n_jobs=-1,
                                                           num_parallel_tree=None,
                                                           random_state=4724, ...)),
                                             ('Random Forest Regressor',
                                              RandomForestRegressor(n_jobs=-1,
                                                                    random_state=4724)),
                                             ('Lasso Regression',
                                              Lasso(random_state=4724))],
                                 n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002574BCA4040>)
2024-05-01 10:01:58,529:INFO:Checking exceptions
2024-05-01 10:01:58,529:INFO:Preloading libraries
2024-05-01 10:02:15,385:INFO:Initializing predict_model()
2024-05-01 10:02:15,385:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=Pipeline(memory=FastMemory(location=C:\Users\1104-27\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering...
                                                           max_cat_to_onehot=None,
                                                           max_delta_step=None,
                                                           max_depth=None,
                                                           max_leaves=None,
                                                           min_child_weight=None,
                                                           missing=nan,
                                                           monotone_constraints=None,
                                                           multi_strategy=None,
                                                           n_estimators=None,
                                                           n_jobs=-1,
                                                           num_parallel_tree=None,
                                                           random_state=4724, ...)),
                                             ('Random Forest Regressor',
                                              RandomForestRegressor(n_jobs=-1,
                                                                    random_state=4724)),
                                             ('Lasso Regression',
                                              Lasso(random_state=4724))],
                                 n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002574B0C7D80>)
2024-05-01 10:02:15,385:INFO:Checking exceptions
2024-05-01 10:02:15,385:INFO:Preloading libraries
2024-05-01 10:02:15,387:INFO:Set up data.
2024-05-01 10:02:15,404:INFO:Set up index.
2024-05-01 10:02:18,482:INFO:Initializing predict_model()
2024-05-01 10:02:18,482:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=Pipeline(memory=FastMemory(location=C:\Users\1104-27\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering...
                                                           max_cat_to_onehot=None,
                                                           max_delta_step=None,
                                                           max_depth=None,
                                                           max_leaves=None,
                                                           min_child_weight=None,
                                                           missing=nan,
                                                           monotone_constraints=None,
                                                           multi_strategy=None,
                                                           n_estimators=None,
                                                           n_jobs=-1,
                                                           num_parallel_tree=None,
                                                           random_state=4724, ...)),
                                             ('Random Forest Regressor',
                                              RandomForestRegressor(n_jobs=-1,
                                                                    random_state=4724)),
                                             ('Lasso Regression',
                                              Lasso(random_state=4724))],
                                 n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002572F60CF40>)
2024-05-01 10:02:18,482:INFO:Checking exceptions
2024-05-01 10:02:18,482:INFO:Preloading libraries
2024-05-01 10:02:18,500:INFO:Set up data.
2024-05-01 10:02:18,520:INFO:Set up index.
2024-05-01 10:03:59,689:INFO:Initializing finalize_model()
2024-05-01 10:03:59,689:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=[GradientBoostingRegressor(random_state=4724), LGBMRegressor(n_jobs=-1, random_state=4724), XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=8, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=90, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...), RandomForestRegressor(n_jobs=-1, random_state=4724), Lasso(random_state=4724)], fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-01 10:03:59,691:INFO:Finalizing [GradientBoostingRegressor(random_state=4724), LGBMRegressor(n_jobs=-1, random_state=4724), XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=8, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=90, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...), RandomForestRegressor(n_jobs=-1, random_state=4724), Lasso(random_state=4724)]
2024-05-01 10:03:59,704:INFO:Initializing create_model()
2024-05-01 10:03:59,704:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=[GradientBoostingRegressor(random_state=4724), LGBMRegressor(n_jobs=-1, random_state=4724), XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=8, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=90, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...), RandomForestRegressor(n_jobs=-1, random_state=4724), Lasso(random_state=4724)], fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 10:03:59,704:INFO:Checking exceptions
2024-05-01 10:04:16,414:INFO:Initializing blend_models()
2024-05-01 10:04:16,414:INFO:blend_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator_list=[GradientBoostingRegressor(random_state=4724), LGBMRegressor(n_jobs=-1, random_state=4724), XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.9, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=8, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=90, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...), RandomForestRegressor(n_jobs=-1, random_state=4724), Lasso(random_state=4724)], fold=10, round=4, choose_better=False, optimize=RMSE, method=auto, weights=None, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-05-01 10:04:16,414:INFO:Checking exceptions
2024-05-01 10:04:16,450:INFO:Importing libraries
2024-05-01 10:04:16,450:INFO:Copying training dataset
2024-05-01 10:04:16,454:INFO:Getting model names
2024-05-01 10:04:16,454:INFO:SubProcess create_model() called ==================================
2024-05-01 10:04:16,473:INFO:Initializing create_model()
2024-05-01 10:04:16,473:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=VotingRegressor(estimators=[('Gradient Boosting Regressor',
                             GradientBoostingRegressor(random_state=4724)),
                            ('Light Gradient Boosting Machine',
                             LGBMRegressor(n_jobs=-1, random_state=4724)),
                            ('Extreme Gradient Boosting',
                             XGBRegressor(base_score=None, booster='gbtree',
                                          callbacks=None,
                                          colsample_bylevel=None,
                                          colsample_bynode=None,
                                          colsample_bytree=0.9, device='cpu',
                                          earl...
                                          max_cat_to_onehot=None,
                                          max_delta_step=None, max_depth=8,
                                          max_leaves=None, min_child_weight=4,
                                          missing=nan,
                                          monotone_constraints=None,
                                          multi_strategy=None, n_estimators=90,
                                          n_jobs=-1, num_parallel_tree=None,
                                          random_state=4724, ...)),
                            ('Random Forest Regressor',
                             RandomForestRegressor(n_jobs=-1,
                                                   random_state=4724)),
                            ('Lasso Regression', Lasso(random_state=4724))],
                n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025721DAFED0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 10:04:16,473:INFO:Checking exceptions
2024-05-01 10:04:16,473:INFO:Importing libraries
2024-05-01 10:04:16,473:INFO:Copying training dataset
2024-05-01 10:04:16,504:INFO:Defining folds
2024-05-01 10:04:16,504:INFO:Declaring metric variables
2024-05-01 10:04:16,508:INFO:Importing untrained model
2024-05-01 10:04:16,508:INFO:Declaring custom model
2024-05-01 10:04:16,516:INFO:Voting Regressor Imported successfully
2024-05-01 10:04:16,525:INFO:Starting cross validation
2024-05-01 10:04:16,526:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 10:04:33,800:INFO:Calculating mean and std
2024-05-01 10:04:33,800:INFO:Creating metrics dataframe
2024-05-01 10:04:33,817:INFO:Finalizing model
2024-05-01 10:04:34,639:INFO:Uploading results into container
2024-05-01 10:04:34,639:INFO:Uploading model into container now
2024-05-01 10:04:34,639:INFO:_master_model_container: 55
2024-05-01 10:04:34,639:INFO:_display_container: 17
2024-05-01 10:04:34,639:INFO:VotingRegressor(estimators=[('Gradient Boosting Regressor',
                             GradientBoostingRegressor(random_state=4724)),
                            ('Light Gradient Boosting Machine',
                             LGBMRegressor(n_jobs=-1, random_state=4724)),
                            ('Extreme Gradient Boosting',
                             XGBRegressor(base_score=None, booster='gbtree',
                                          callbacks=None,
                                          colsample_bylevel=None,
                                          colsample_bynode=None,
                                          colsample_bytree=0.9, device='cpu',
                                          earl...
                                          max_cat_to_onehot=None,
                                          max_delta_step=None, max_depth=8,
                                          max_leaves=None, min_child_weight=4,
                                          missing=nan,
                                          monotone_constraints=None,
                                          multi_strategy=None, n_estimators=90,
                                          n_jobs=-1, num_parallel_tree=None,
                                          random_state=4724, ...)),
                            ('Random Forest Regressor',
                             RandomForestRegressor(n_jobs=-1,
                                                   random_state=4724)),
                            ('Lasso Regression', Lasso(random_state=4724))],
                n_jobs=-1)
2024-05-01 10:04:34,639:INFO:create_model() successfully completed......................................
2024-05-01 10:04:34,952:INFO:SubProcess create_model() end ==================================
2024-05-01 10:04:34,973:INFO:_master_model_container: 55
2024-05-01 10:04:34,973:INFO:_display_container: 17
2024-05-01 10:04:34,985:INFO:VotingRegressor(estimators=[('Gradient Boosting Regressor',
                             GradientBoostingRegressor(random_state=4724)),
                            ('Light Gradient Boosting Machine',
                             LGBMRegressor(n_jobs=-1, random_state=4724)),
                            ('Extreme Gradient Boosting',
                             XGBRegressor(base_score=None, booster='gbtree',
                                          callbacks=None,
                                          colsample_bylevel=None,
                                          colsample_bynode=None,
                                          colsample_bytree=0.9, device='cpu',
                                          earl...
                                          max_cat_to_onehot=None,
                                          max_delta_step=None, max_depth=8,
                                          max_leaves=None, min_child_weight=4,
                                          missing=nan,
                                          monotone_constraints=None,
                                          multi_strategy=None, n_estimators=90,
                                          n_jobs=-1, num_parallel_tree=None,
                                          random_state=4724, ...)),
                            ('Random Forest Regressor',
                             RandomForestRegressor(n_jobs=-1,
                                                   random_state=4724)),
                            ('Lasso Regression', Lasso(random_state=4724))],
                n_jobs=-1)
2024-05-01 10:04:34,986:INFO:blend_models() successfully completed......................................
2024-05-01 10:05:05,142:INFO:Initializing finalize_model()
2024-05-01 10:05:05,142:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=VotingRegressor(estimators=[('Gradient Boosting Regressor',
                             GradientBoostingRegressor(random_state=4724)),
                            ('Light Gradient Boosting Machine',
                             LGBMRegressor(n_jobs=-1, random_state=4724)),
                            ('Extreme Gradient Boosting',
                             XGBRegressor(base_score=None, booster='gbtree',
                                          callbacks=None,
                                          colsample_bylevel=None,
                                          colsample_bynode=None,
                                          colsample_bytree=0.9, device='cpu',
                                          earl...
                                          max_cat_to_onehot=None,
                                          max_delta_step=None, max_depth=8,
                                          max_leaves=None, min_child_weight=4,
                                          missing=nan,
                                          monotone_constraints=None,
                                          multi_strategy=None, n_estimators=90,
                                          n_jobs=-1, num_parallel_tree=None,
                                          random_state=4724, ...)),
                            ('Random Forest Regressor',
                             RandomForestRegressor(n_jobs=-1,
                                                   random_state=4724)),
                            ('Lasso Regression', Lasso(random_state=4724))],
                n_jobs=-1), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-01 10:05:05,151:INFO:Finalizing VotingRegressor(estimators=[('Gradient Boosting Regressor',
                             GradientBoostingRegressor(random_state=4724)),
                            ('Light Gradient Boosting Machine',
                             LGBMRegressor(n_jobs=-1, random_state=4724)),
                            ('Extreme Gradient Boosting',
                             XGBRegressor(base_score=None, booster='gbtree',
                                          callbacks=None,
                                          colsample_bylevel=None,
                                          colsample_bynode=None,
                                          colsample_bytree=0.9, device='cpu',
                                          earl...
                                          max_cat_to_onehot=None,
                                          max_delta_step=None, max_depth=8,
                                          max_leaves=None, min_child_weight=4,
                                          missing=nan,
                                          monotone_constraints=None,
                                          multi_strategy=None, n_estimators=90,
                                          n_jobs=-1, num_parallel_tree=None,
                                          random_state=4724, ...)),
                            ('Random Forest Regressor',
                             RandomForestRegressor(n_jobs=-1,
                                                   random_state=4724)),
                            ('Lasso Regression', Lasso(random_state=4724))],
                n_jobs=-1)
2024-05-01 10:05:05,165:INFO:Initializing create_model()
2024-05-01 10:05:05,165:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=VotingRegressor(estimators=[('Gradient Boosting Regressor',
                             GradientBoostingRegressor(random_state=4724)),
                            ('Light Gradient Boosting Machine',
                             LGBMRegressor(n_jobs=-1, random_state=4724)),
                            ('Extreme Gradient Boosting',
                             XGBRegressor(base_score=None, booster='gbtree',
                                          callbacks=None,
                                          colsample_bylevel=None,
                                          colsample_bynode=None,
                                          colsample_bytree=0.9, device='cpu',
                                          earl...
                                          max_cat_to_onehot=None,
                                          max_delta_step=None, max_depth=8,
                                          max_leaves=None, min_child_weight=4,
                                          missing=nan,
                                          monotone_constraints=None,
                                          multi_strategy=None, n_estimators=90,
                                          n_jobs=-1, num_parallel_tree=None,
                                          random_state=4724, ...)),
                            ('Random Forest Regressor',
                             RandomForestRegressor(n_jobs=-1,
                                                   random_state=4724)),
                            ('Lasso Regression', Lasso(random_state=4724))],
                n_jobs=-1), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 10:05:05,165:INFO:Checking exceptions
2024-05-01 10:05:05,165:INFO:Importing libraries
2024-05-01 10:05:05,165:INFO:Copying training dataset
2024-05-01 10:05:05,165:INFO:Defining folds
2024-05-01 10:05:05,165:INFO:Declaring metric variables
2024-05-01 10:05:05,165:INFO:Importing untrained model
2024-05-01 10:05:05,181:INFO:Declaring custom model
2024-05-01 10:05:05,184:INFO:Voting Regressor Imported successfully
2024-05-01 10:05:05,185:INFO:Cross validation set to False
2024-05-01 10:05:05,185:INFO:Fitting Model
2024-05-01 10:05:07,218:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering',
                                             'steering_remote', 'leahter_seat',
                                             'driver...
                                                           max_cat_to_onehot=None,
                                                           max_delta_step=None,
                                                           max_depth=8,
                                                           max_leaves=None,
                                                           min_child_weight=4,
                                                           missing=nan,
                                                           monotone_constraints=None,
                                                           multi_strategy=None,
                                                           n_estimators=90,
                                                           n_jobs=-1,
                                                           num_parallel_tree=None,
                                                           random_state=4724, ...)),
                                             ('Random Forest Regressor',
                                              RandomForestRegressor(n_jobs=-1,
                                                                    random_state=4724)),
                                             ('Lasso Regression',
                                              Lasso(random_state=4724))],
                                 n_jobs=-1))])
2024-05-01 10:05:07,218:INFO:create_model() successfully completed......................................
2024-05-01 10:05:07,521:INFO:_master_model_container: 55
2024-05-01 10:05:07,521:INFO:_display_container: 17
2024-05-01 10:05:07,554:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering',
                                             'steering_remote', 'leahter_seat',
                                             'driver...
                                                           max_cat_to_onehot=None,
                                                           max_delta_step=None,
                                                           max_depth=8,
                                                           max_leaves=None,
                                                           min_child_weight=4,
                                                           missing=nan,
                                                           monotone_constraints=None,
                                                           multi_strategy=None,
                                                           n_estimators=90,
                                                           n_jobs=-1,
                                                           num_parallel_tree=None,
                                                           random_state=4724, ...)),
                                             ('Random Forest Regressor',
                                              RandomForestRegressor(n_jobs=-1,
                                                                    random_state=4724)),
                                             ('Lasso Regression',
                                              Lasso(random_state=4724))],
                                 n_jobs=-1))])
2024-05-01 10:05:07,554:INFO:finalize_model() successfully completed......................................
2024-05-01 10:05:15,976:INFO:Initializing predict_model()
2024-05-01 10:05:15,976:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering',
                                             'steering_remote', 'leahter_seat',
                                             'driver...
                                                           max_cat_to_onehot=None,
                                                           max_delta_step=None,
                                                           max_depth=8,
                                                           max_leaves=None,
                                                           min_child_weight=4,
                                                           missing=nan,
                                                           monotone_constraints=None,
                                                           multi_strategy=None,
                                                           n_estimators=90,
                                                           n_jobs=-1,
                                                           num_parallel_tree=None,
                                                           random_state=4724, ...)),
                                             ('Random Forest Regressor',
                                              RandomForestRegressor(n_jobs=-1,
                                                                    random_state=4724)),
                                             ('Lasso Regression',
                                              Lasso(random_state=4724))],
                                 n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002572FBF2980>)
2024-05-01 10:05:15,976:INFO:Checking exceptions
2024-05-01 10:05:15,976:INFO:Preloading libraries
2024-05-01 10:05:15,976:INFO:Set up data.
2024-05-01 10:05:16,007:INFO:Set up index.
2024-05-01 10:16:55,461:INFO:Initializing predict_model()
2024-05-01 10:16:55,461:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering',
                                             'steering_remote', 'leahter_seat',
                                             'driver...
                                                           max_cat_to_onehot=None,
                                                           max_delta_step=None,
                                                           max_depth=8,
                                                           max_leaves=None,
                                                           min_child_weight=4,
                                                           missing=nan,
                                                           monotone_constraints=None,
                                                           multi_strategy=None,
                                                           n_estimators=90,
                                                           n_jobs=-1,
                                                           num_parallel_tree=None,
                                                           random_state=4724, ...)),
                                             ('Random Forest Regressor',
                                              RandomForestRegressor(n_jobs=-1,
                                                                    random_state=4724)),
                                             ('Lasso Regression',
                                              Lasso(random_state=4724))],
                                 n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002574ACBD080>)
2024-05-01 10:16:55,461:INFO:Checking exceptions
2024-05-01 10:16:55,461:INFO:Preloading libraries
2024-05-01 10:16:55,461:INFO:Set up data.
2024-05-01 10:16:55,484:INFO:Set up index.
2024-05-01 10:18:11,851:INFO:Initializing predict_model()
2024-05-01 10:18:11,851:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering',
                                             'steering_remote', 'leahter_seat',
                                             'driver...
                                                           max_cat_to_onehot=None,
                                                           max_delta_step=None,
                                                           max_depth=8,
                                                           max_leaves=None,
                                                           min_child_weight=4,
                                                           missing=nan,
                                                           monotone_constraints=None,
                                                           multi_strategy=None,
                                                           n_estimators=90,
                                                           n_jobs=-1,
                                                           num_parallel_tree=None,
                                                           random_state=4724, ...)),
                                             ('Random Forest Regressor',
                                              RandomForestRegressor(n_jobs=-1,
                                                                    random_state=4724)),
                                             ('Lasso Regression',
                                              Lasso(random_state=4724))],
                                 n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002574ACBCEA0>)
2024-05-01 10:18:11,851:INFO:Checking exceptions
2024-05-01 10:18:11,851:INFO:Preloading libraries
2024-05-01 10:18:23,669:INFO:Initializing predict_model()
2024-05-01 10:18:23,669:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering',
                                             'steering_remote', 'leahter_seat',
                                             'driver...
                                                           max_cat_to_onehot=None,
                                                           max_delta_step=None,
                                                           max_depth=8,
                                                           max_leaves=None,
                                                           min_child_weight=4,
                                                           missing=nan,
                                                           monotone_constraints=None,
                                                           multi_strategy=None,
                                                           n_estimators=90,
                                                           n_jobs=-1,
                                                           num_parallel_tree=None,
                                                           random_state=4724, ...)),
                                             ('Random Forest Regressor',
                                              RandomForestRegressor(n_jobs=-1,
                                                                    random_state=4724)),
                                             ('Lasso Regression',
                                              Lasso(random_state=4724))],
                                 n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002574ACBDF80>)
2024-05-01 10:18:23,669:INFO:Checking exceptions
2024-05-01 10:18:23,669:INFO:Preloading libraries
2024-05-01 10:33:02,659:INFO:Initializing tune_model()
2024-05-01 10:33:02,660:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=GradientBoostingRegressor(random_state=4724), fold=None, round=4, n_iter=100, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-01 10:33:02,660:INFO:Checking exceptions
2024-05-01 10:33:02,690:INFO:Copying training dataset
2024-05-01 10:33:02,714:INFO:Checking base model
2024-05-01 10:33:02,714:INFO:Base model : Gradient Boosting Regressor
2024-05-01 10:33:02,726:INFO:Declaring metric variables
2024-05-01 10:33:02,727:INFO:Defining Hyperparameters
2024-05-01 10:33:03,024:INFO:Tuning with n_jobs=-1
2024-05-01 10:33:03,024:INFO:Initializing RandomizedSearchCV
2024-05-01 10:34:40,055:INFO:best_params: {'actual_estimator__subsample': 0.4, 'actual_estimator__n_estimators': 60, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.4, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 3, 'actual_estimator__learning_rate': 0.2}
2024-05-01 10:34:40,055:INFO:Hyperparameter search completed
2024-05-01 10:34:40,055:INFO:SubProcess create_model() called ==================================
2024-05-01 10:34:40,055:INFO:Initializing create_model()
2024-05-01 10:34:40,055:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=GradientBoostingRegressor(random_state=4724), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002574B3A5350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.4, 'n_estimators': 60, 'min_samples_split': 7, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.4, 'max_features': 1.0, 'max_depth': 3, 'learning_rate': 0.2})
2024-05-01 10:34:40,055:INFO:Checking exceptions
2024-05-01 10:34:40,055:INFO:Importing libraries
2024-05-01 10:34:40,055:INFO:Copying training dataset
2024-05-01 10:34:40,073:INFO:Defining folds
2024-05-01 10:34:40,088:INFO:Declaring metric variables
2024-05-01 10:34:40,092:INFO:Importing untrained model
2024-05-01 10:34:40,093:INFO:Declaring custom model
2024-05-01 10:34:40,094:INFO:Gradient Boosting Regressor Imported successfully
2024-05-01 10:34:40,105:INFO:Starting cross validation
2024-05-01 10:34:40,106:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 10:34:40,620:INFO:Calculating mean and std
2024-05-01 10:34:40,620:INFO:Creating metrics dataframe
2024-05-01 10:34:40,628:INFO:Finalizing model
2024-05-01 10:34:40,769:INFO:Uploading results into container
2024-05-01 10:34:40,769:INFO:Uploading model into container now
2024-05-01 10:34:40,769:INFO:_master_model_container: 56
2024-05-01 10:34:40,769:INFO:_display_container: 20
2024-05-01 10:34:40,769:INFO:GradientBoostingRegressor(learning_rate=0.2, max_features=1.0,
                          min_impurity_decrease=0.4, min_samples_leaf=5,
                          min_samples_split=7, n_estimators=60,
                          random_state=4724, subsample=0.4)
2024-05-01 10:34:40,769:INFO:create_model() successfully completed......................................
2024-05-01 10:34:41,072:INFO:SubProcess create_model() end ==================================
2024-05-01 10:34:41,072:INFO:choose_better activated
2024-05-01 10:34:41,072:INFO:SubProcess create_model() called ==================================
2024-05-01 10:34:41,072:INFO:Initializing create_model()
2024-05-01 10:34:41,072:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=GradientBoostingRegressor(random_state=4724), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 10:34:41,072:INFO:Checking exceptions
2024-05-01 10:34:41,072:INFO:Importing libraries
2024-05-01 10:34:41,072:INFO:Copying training dataset
2024-05-01 10:34:41,112:INFO:Defining folds
2024-05-01 10:34:41,112:INFO:Declaring metric variables
2024-05-01 10:34:41,112:INFO:Importing untrained model
2024-05-01 10:34:41,112:INFO:Declaring custom model
2024-05-01 10:34:41,112:INFO:Gradient Boosting Regressor Imported successfully
2024-05-01 10:34:41,112:INFO:Starting cross validation
2024-05-01 10:34:41,112:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 10:34:42,241:INFO:Calculating mean and std
2024-05-01 10:34:42,241:INFO:Creating metrics dataframe
2024-05-01 10:34:42,241:INFO:Finalizing model
2024-05-01 10:34:42,647:INFO:Uploading results into container
2024-05-01 10:34:42,647:INFO:Uploading model into container now
2024-05-01 10:34:42,647:INFO:_master_model_container: 57
2024-05-01 10:34:42,647:INFO:_display_container: 21
2024-05-01 10:34:42,647:INFO:GradientBoostingRegressor(random_state=4724)
2024-05-01 10:34:42,647:INFO:create_model() successfully completed......................................
2024-05-01 10:34:42,941:INFO:SubProcess create_model() end ==================================
2024-05-01 10:34:42,941:INFO:GradientBoostingRegressor(random_state=4724) result for RMSE is 179.9504
2024-05-01 10:34:42,949:INFO:GradientBoostingRegressor(learning_rate=0.2, max_features=1.0,
                          min_impurity_decrease=0.4, min_samples_leaf=5,
                          min_samples_split=7, n_estimators=60,
                          random_state=4724, subsample=0.4) result for RMSE is 184.8434
2024-05-01 10:34:42,949:INFO:GradientBoostingRegressor(random_state=4724) is best model
2024-05-01 10:34:42,949:INFO:choose_better completed
2024-05-01 10:34:42,949:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-01 10:34:42,963:INFO:_master_model_container: 57
2024-05-01 10:34:42,963:INFO:_display_container: 20
2024-05-01 10:34:42,964:INFO:GradientBoostingRegressor(random_state=4724)
2024-05-01 10:34:42,964:INFO:tune_model() successfully completed......................................
2024-05-01 10:34:43,259:INFO:Initializing tune_model()
2024-05-01 10:34:43,259:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=LGBMRegressor(n_jobs=-1, random_state=4724), fold=None, round=4, n_iter=100, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-01 10:34:43,259:INFO:Checking exceptions
2024-05-01 10:34:43,296:INFO:Copying training dataset
2024-05-01 10:34:43,318:INFO:Checking base model
2024-05-01 10:34:43,318:INFO:Base model : Light Gradient Boosting Machine
2024-05-01 10:34:43,327:INFO:Declaring metric variables
2024-05-01 10:34:43,330:INFO:Defining Hyperparameters
2024-05-01 10:34:43,628:INFO:Tuning with n_jobs=-1
2024-05-01 10:34:43,628:INFO:Initializing RandomizedSearchCV
2024-05-01 10:37:11,405:INFO:best_params: {'actual_estimator__reg_lambda': 2, 'actual_estimator__reg_alpha': 2, 'actual_estimator__num_leaves': 10, 'actual_estimator__n_estimators': 130, 'actual_estimator__min_split_gain': 0.6, 'actual_estimator__min_child_samples': 26, 'actual_estimator__learning_rate': 0.05, 'actual_estimator__feature_fraction': 0.7, 'actual_estimator__bagging_freq': 4, 'actual_estimator__bagging_fraction': 0.8}
2024-05-01 10:37:11,420:INFO:Hyperparameter search completed
2024-05-01 10:37:11,420:INFO:SubProcess create_model() called ==================================
2024-05-01 10:37:11,422:INFO:Initializing create_model()
2024-05-01 10:37:11,422:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=LGBMRegressor(n_jobs=-1, random_state=4724), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002572F1FA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'reg_lambda': 2, 'reg_alpha': 2, 'num_leaves': 10, 'n_estimators': 130, 'min_split_gain': 0.6, 'min_child_samples': 26, 'learning_rate': 0.05, 'feature_fraction': 0.7, 'bagging_freq': 4, 'bagging_fraction': 0.8})
2024-05-01 10:37:11,422:INFO:Checking exceptions
2024-05-01 10:37:11,422:INFO:Importing libraries
2024-05-01 10:37:11,422:INFO:Copying training dataset
2024-05-01 10:37:11,488:INFO:Defining folds
2024-05-01 10:37:11,488:INFO:Declaring metric variables
2024-05-01 10:37:11,488:INFO:Importing untrained model
2024-05-01 10:37:11,488:INFO:Declaring custom model
2024-05-01 10:37:11,505:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-01 10:37:11,527:INFO:Starting cross validation
2024-05-01 10:37:11,530:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 10:37:12,539:INFO:Calculating mean and std
2024-05-01 10:37:12,539:INFO:Creating metrics dataframe
2024-05-01 10:37:12,565:INFO:Finalizing model
2024-05-01 10:37:12,622:INFO:[LightGBM] [Warning] feature_fraction is set=0.7, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.7
2024-05-01 10:37:12,622:INFO:[LightGBM] [Warning] bagging_fraction is set=0.8, subsample=1.0 will be ignored. Current value: bagging_fraction=0.8
2024-05-01 10:37:12,622:INFO:[LightGBM] [Warning] bagging_freq is set=4, subsample_freq=0 will be ignored. Current value: bagging_freq=4
2024-05-01 10:37:12,622:INFO:[LightGBM] [Warning] feature_fraction is set=0.7, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.7
2024-05-01 10:37:12,622:INFO:[LightGBM] [Warning] bagging_fraction is set=0.8, subsample=1.0 will be ignored. Current value: bagging_fraction=0.8
2024-05-01 10:37:12,622:INFO:[LightGBM] [Warning] bagging_freq is set=4, subsample_freq=0 will be ignored. Current value: bagging_freq=4
2024-05-01 10:37:12,638:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001942 seconds.
2024-05-01 10:37:12,638:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-05-01 10:37:12,639:INFO:[LightGBM] [Info] Total Bins 451
2024-05-01 10:37:12,639:INFO:[LightGBM] [Info] Number of data points in the train set: 1581, number of used features: 90
2024-05-01 10:37:12,640:INFO:[LightGBM] [Info] Start training from score 1686.320051
2024-05-01 10:37:12,720:INFO:Uploading results into container
2024-05-01 10:37:12,720:INFO:Uploading model into container now
2024-05-01 10:37:12,720:INFO:_master_model_container: 58
2024-05-01 10:37:12,720:INFO:_display_container: 21
2024-05-01 10:37:12,736:INFO:LGBMRegressor(bagging_fraction=0.8, bagging_freq=4, feature_fraction=0.7,
              learning_rate=0.05, min_child_samples=26, min_split_gain=0.6,
              n_estimators=130, n_jobs=-1, num_leaves=10, random_state=4724,
              reg_alpha=2, reg_lambda=2)
2024-05-01 10:37:12,736:INFO:create_model() successfully completed......................................
2024-05-01 10:37:13,141:INFO:SubProcess create_model() end ==================================
2024-05-01 10:37:13,141:INFO:choose_better activated
2024-05-01 10:37:13,141:INFO:SubProcess create_model() called ==================================
2024-05-01 10:37:13,141:INFO:Initializing create_model()
2024-05-01 10:37:13,141:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=LGBMRegressor(n_jobs=-1, random_state=4724), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 10:37:13,141:INFO:Checking exceptions
2024-05-01 10:37:13,141:INFO:Importing libraries
2024-05-01 10:37:13,141:INFO:Copying training dataset
2024-05-01 10:37:13,190:INFO:Defining folds
2024-05-01 10:37:13,190:INFO:Declaring metric variables
2024-05-01 10:37:13,190:INFO:Importing untrained model
2024-05-01 10:37:13,190:INFO:Declaring custom model
2024-05-01 10:37:13,190:INFO:Light Gradient Boosting Machine Imported successfully
2024-05-01 10:37:13,190:INFO:Starting cross validation
2024-05-01 10:37:13,190:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 10:37:14,745:INFO:Calculating mean and std
2024-05-01 10:37:14,745:INFO:Creating metrics dataframe
2024-05-01 10:37:14,745:INFO:Finalizing model
2024-05-01 10:37:14,810:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.001783 seconds.
2024-05-01 10:37:14,810:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-05-01 10:37:14,810:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-05-01 10:37:14,810:INFO:[LightGBM] [Info] Total Bins 457
2024-05-01 10:37:14,810:INFO:[LightGBM] [Info] Number of data points in the train set: 1581, number of used features: 93
2024-05-01 10:37:14,810:INFO:[LightGBM] [Info] Start training from score 1686.320051
2024-05-01 10:37:14,925:INFO:Uploading results into container
2024-05-01 10:37:14,941:INFO:Uploading model into container now
2024-05-01 10:37:14,942:INFO:_master_model_container: 59
2024-05-01 10:37:14,942:INFO:_display_container: 22
2024-05-01 10:37:14,942:INFO:LGBMRegressor(n_jobs=-1, random_state=4724)
2024-05-01 10:37:14,942:INFO:create_model() successfully completed......................................
2024-05-01 10:37:15,326:INFO:SubProcess create_model() end ==================================
2024-05-01 10:37:15,326:INFO:LGBMRegressor(n_jobs=-1, random_state=4724) result for RMSE is 182.695
2024-05-01 10:37:15,326:INFO:LGBMRegressor(bagging_fraction=0.8, bagging_freq=4, feature_fraction=0.7,
              learning_rate=0.05, min_child_samples=26, min_split_gain=0.6,
              n_estimators=130, n_jobs=-1, num_leaves=10, random_state=4724,
              reg_alpha=2, reg_lambda=2) result for RMSE is 174.2223
2024-05-01 10:37:15,326:INFO:LGBMRegressor(bagging_fraction=0.8, bagging_freq=4, feature_fraction=0.7,
              learning_rate=0.05, min_child_samples=26, min_split_gain=0.6,
              n_estimators=130, n_jobs=-1, num_leaves=10, random_state=4724,
              reg_alpha=2, reg_lambda=2) is best model
2024-05-01 10:37:15,326:INFO:choose_better completed
2024-05-01 10:37:15,343:INFO:_master_model_container: 59
2024-05-01 10:37:15,343:INFO:_display_container: 21
2024-05-01 10:37:15,343:INFO:LGBMRegressor(bagging_fraction=0.8, bagging_freq=4, feature_fraction=0.7,
              learning_rate=0.05, min_child_samples=26, min_split_gain=0.6,
              n_estimators=130, n_jobs=-1, num_leaves=10, random_state=4724,
              reg_alpha=2, reg_lambda=2)
2024-05-01 10:37:15,343:INFO:tune_model() successfully completed......................................
2024-05-01 10:37:15,761:INFO:Initializing tune_model()
2024-05-01 10:37:15,762:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...), fold=None, round=4, n_iter=100, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-01 10:37:15,762:INFO:Checking exceptions
2024-05-01 10:37:15,799:INFO:Copying training dataset
2024-05-01 10:37:15,832:INFO:Checking base model
2024-05-01 10:37:15,832:INFO:Base model : Extreme Gradient Boosting
2024-05-01 10:37:15,840:INFO:Declaring metric variables
2024-05-01 10:37:15,846:INFO:Defining Hyperparameters
2024-05-01 10:37:16,241:INFO:Tuning with n_jobs=-1
2024-05-01 10:37:16,241:INFO:Initializing RandomizedSearchCV
2024-05-01 10:38:35,172:INFO:best_params: {'actual_estimator__subsample': 0.3, 'actual_estimator__scale_pos_weight': 27.3, 'actual_estimator__reg_lambda': 0.15, 'actual_estimator__reg_alpha': 0.05, 'actual_estimator__n_estimators': 100, 'actual_estimator__min_child_weight': 4, 'actual_estimator__max_depth': 6, 'actual_estimator__learning_rate': 0.05, 'actual_estimator__colsample_bytree': 0.7}
2024-05-01 10:38:35,172:INFO:Hyperparameter search completed
2024-05-01 10:38:35,172:INFO:SubProcess create_model() called ==================================
2024-05-01 10:38:35,172:INFO:Initializing create_model()
2024-05-01 10:38:35,172:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002574B762350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.3, 'scale_pos_weight': 27.3, 'reg_lambda': 0.15, 'reg_alpha': 0.05, 'n_estimators': 100, 'min_child_weight': 4, 'max_depth': 6, 'learning_rate': 0.05, 'colsample_bytree': 0.7})
2024-05-01 10:38:35,172:INFO:Checking exceptions
2024-05-01 10:38:35,172:INFO:Importing libraries
2024-05-01 10:38:35,172:INFO:Copying training dataset
2024-05-01 10:38:35,222:INFO:Defining folds
2024-05-01 10:38:35,222:INFO:Declaring metric variables
2024-05-01 10:38:35,238:INFO:Importing untrained model
2024-05-01 10:38:35,238:INFO:Declaring custom model
2024-05-01 10:38:35,238:INFO:Extreme Gradient Boosting Imported successfully
2024-05-01 10:38:35,255:INFO:Starting cross validation
2024-05-01 10:38:35,255:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 10:38:36,123:INFO:Calculating mean and std
2024-05-01 10:38:36,139:INFO:Creating metrics dataframe
2024-05-01 10:38:36,139:INFO:Finalizing model
2024-05-01 10:38:36,490:INFO:Uploading results into container
2024-05-01 10:38:36,490:INFO:Uploading model into container now
2024-05-01 10:38:36,490:INFO:_master_model_container: 60
2024-05-01 10:38:36,490:INFO:_display_container: 22
2024-05-01 10:38:36,490:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.7, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=6, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...)
2024-05-01 10:38:36,490:INFO:create_model() successfully completed......................................
2024-05-01 10:38:37,040:INFO:SubProcess create_model() end ==================================
2024-05-01 10:38:37,040:INFO:choose_better activated
2024-05-01 10:38:37,040:INFO:SubProcess create_model() called ==================================
2024-05-01 10:38:37,040:INFO:Initializing create_model()
2024-05-01 10:38:37,040:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 10:38:37,056:INFO:Checking exceptions
2024-05-01 10:38:37,061:INFO:Importing libraries
2024-05-01 10:38:37,061:INFO:Copying training dataset
2024-05-01 10:38:37,107:INFO:Defining folds
2024-05-01 10:38:37,107:INFO:Declaring metric variables
2024-05-01 10:38:37,107:INFO:Importing untrained model
2024-05-01 10:38:37,107:INFO:Declaring custom model
2024-05-01 10:38:37,107:INFO:Extreme Gradient Boosting Imported successfully
2024-05-01 10:38:37,107:INFO:Starting cross validation
2024-05-01 10:38:37,123:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 10:38:38,058:INFO:Calculating mean and std
2024-05-01 10:38:38,058:INFO:Creating metrics dataframe
2024-05-01 10:38:38,058:INFO:Finalizing model
2024-05-01 10:38:38,375:INFO:Uploading results into container
2024-05-01 10:38:38,375:INFO:Uploading model into container now
2024-05-01 10:38:38,375:INFO:_master_model_container: 61
2024-05-01 10:38:38,375:INFO:_display_container: 23
2024-05-01 10:38:38,375:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...)
2024-05-01 10:38:38,375:INFO:create_model() successfully completed......................................
2024-05-01 10:38:38,799:INFO:SubProcess create_model() end ==================================
2024-05-01 10:38:38,799:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...) result for RMSE is 188.7965
2024-05-01 10:38:38,799:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.7, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=6, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...) result for RMSE is 174.7601
2024-05-01 10:38:38,799:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.7, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=6, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...) is best model
2024-05-01 10:38:38,799:INFO:choose_better completed
2024-05-01 10:38:38,815:INFO:_master_model_container: 61
2024-05-01 10:38:38,815:INFO:_display_container: 22
2024-05-01 10:38:38,815:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.7, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=6, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...)
2024-05-01 10:38:38,815:INFO:tune_model() successfully completed......................................
2024-05-01 10:38:39,192:INFO:Initializing tune_model()
2024-05-01 10:38:39,192:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4724), fold=None, round=4, n_iter=100, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-01 10:38:39,192:INFO:Checking exceptions
2024-05-01 10:38:39,223:INFO:Copying training dataset
2024-05-01 10:38:39,251:INFO:Checking base model
2024-05-01 10:38:39,251:INFO:Base model : Random Forest Regressor
2024-05-01 10:38:39,260:INFO:Declaring metric variables
2024-05-01 10:38:39,267:INFO:Defining Hyperparameters
2024-05-01 10:38:39,609:INFO:Tuning with n_jobs=-1
2024-05-01 10:38:39,609:INFO:Initializing RandomizedSearchCV
2024-05-01 10:56:38,821:INFO:best_params: {'actual_estimator__n_estimators': 290, 'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 10, 'actual_estimator__criterion': 'squared_error', 'actual_estimator__bootstrap': True}
2024-05-01 10:56:38,821:INFO:Hyperparameter search completed
2024-05-01 10:56:38,821:INFO:SubProcess create_model() called ==================================
2024-05-01 10:56:38,821:INFO:Initializing create_model()
2024-05-01 10:56:38,821:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4724), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025749EACF90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 290, 'min_samples_split': 10, 'min_samples_leaf': 2, 'min_impurity_decrease': 0, 'max_features': 1.0, 'max_depth': 10, 'criterion': 'squared_error', 'bootstrap': True})
2024-05-01 10:56:38,821:INFO:Checking exceptions
2024-05-01 10:56:38,821:INFO:Importing libraries
2024-05-01 10:56:38,821:INFO:Copying training dataset
2024-05-01 10:56:38,874:INFO:Defining folds
2024-05-01 10:56:38,874:INFO:Declaring metric variables
2024-05-01 10:56:38,876:INFO:Importing untrained model
2024-05-01 10:56:38,876:INFO:Declaring custom model
2024-05-01 10:56:38,876:INFO:Random Forest Regressor Imported successfully
2024-05-01 10:56:38,893:INFO:Starting cross validation
2024-05-01 10:56:38,893:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 10:56:43,825:INFO:Calculating mean and std
2024-05-01 10:56:43,825:INFO:Creating metrics dataframe
2024-05-01 10:56:43,825:INFO:Finalizing model
2024-05-01 10:56:44,526:INFO:Uploading results into container
2024-05-01 10:56:44,526:INFO:Uploading model into container now
2024-05-01 10:56:44,526:INFO:_master_model_container: 62
2024-05-01 10:56:44,526:INFO:_display_container: 23
2024-05-01 10:56:44,526:INFO:RandomForestRegressor(max_depth=10, min_impurity_decrease=0, min_samples_leaf=2,
                      min_samples_split=10, n_estimators=290, n_jobs=-1,
                      random_state=4724)
2024-05-01 10:56:44,526:INFO:create_model() successfully completed......................................
2024-05-01 10:56:44,860:INFO:SubProcess create_model() end ==================================
2024-05-01 10:56:44,860:INFO:choose_better activated
2024-05-01 10:56:44,860:INFO:SubProcess create_model() called ==================================
2024-05-01 10:56:44,860:INFO:Initializing create_model()
2024-05-01 10:56:44,860:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=RandomForestRegressor(n_jobs=-1, random_state=4724), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 10:56:44,860:INFO:Checking exceptions
2024-05-01 10:56:44,860:INFO:Importing libraries
2024-05-01 10:56:44,860:INFO:Copying training dataset
2024-05-01 10:56:44,899:INFO:Defining folds
2024-05-01 10:56:44,899:INFO:Declaring metric variables
2024-05-01 10:56:44,899:INFO:Importing untrained model
2024-05-01 10:56:44,899:INFO:Declaring custom model
2024-05-01 10:56:44,900:INFO:Random Forest Regressor Imported successfully
2024-05-01 10:56:44,900:INFO:Starting cross validation
2024-05-01 10:56:44,900:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 10:56:48,263:INFO:Calculating mean and std
2024-05-01 10:56:48,263:INFO:Creating metrics dataframe
2024-05-01 10:56:48,263:INFO:Finalizing model
2024-05-01 10:56:48,673:INFO:Uploading results into container
2024-05-01 10:56:48,673:INFO:Uploading model into container now
2024-05-01 10:56:48,673:INFO:_master_model_container: 63
2024-05-01 10:56:48,673:INFO:_display_container: 24
2024-05-01 10:56:48,673:INFO:RandomForestRegressor(n_jobs=-1, random_state=4724)
2024-05-01 10:56:48,673:INFO:create_model() successfully completed......................................
2024-05-01 10:56:48,965:INFO:SubProcess create_model() end ==================================
2024-05-01 10:56:48,965:INFO:RandomForestRegressor(n_jobs=-1, random_state=4724) result for RMSE is 194.378
2024-05-01 10:56:48,965:INFO:RandomForestRegressor(max_depth=10, min_impurity_decrease=0, min_samples_leaf=2,
                      min_samples_split=10, n_estimators=290, n_jobs=-1,
                      random_state=4724) result for RMSE is 194.7382
2024-05-01 10:56:48,965:INFO:RandomForestRegressor(n_jobs=-1, random_state=4724) is best model
2024-05-01 10:56:48,965:INFO:choose_better completed
2024-05-01 10:56:48,965:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-01 10:56:48,981:INFO:_master_model_container: 63
2024-05-01 10:56:48,981:INFO:_display_container: 23
2024-05-01 10:56:48,981:INFO:RandomForestRegressor(n_jobs=-1, random_state=4724)
2024-05-01 10:56:48,981:INFO:tune_model() successfully completed......................................
2024-05-01 10:56:49,281:INFO:Initializing tune_model()
2024-05-01 10:56:49,281:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=Lasso(random_state=4724), fold=None, round=4, n_iter=100, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-05-01 10:56:49,281:INFO:Checking exceptions
2024-05-01 10:56:49,324:INFO:Copying training dataset
2024-05-01 10:56:49,343:INFO:Checking base model
2024-05-01 10:56:49,343:INFO:Base model : Lasso Regression
2024-05-01 10:56:49,352:INFO:Declaring metric variables
2024-05-01 10:56:49,356:INFO:Defining Hyperparameters
2024-05-01 10:56:49,648:INFO:Tuning with n_jobs=-1
2024-05-01 10:56:49,648:INFO:Initializing RandomizedSearchCV
2024-05-01 10:56:50,014:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.578e+06, tolerance: 1.367e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:50,048:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.227e+07, tolerance: 1.357e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:50,065:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.348e+07, tolerance: 1.386e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:50,065:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.205e+07, tolerance: 1.363e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:50,082:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.161e+07, tolerance: 1.373e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:50,115:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.807e+06, tolerance: 1.343e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:50,132:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.838e+07, tolerance: 1.349e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:50,182:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.026e+07, tolerance: 1.299e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:50,315:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.088e+07, tolerance: 1.363e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:50,399:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.313e+07, tolerance: 1.355e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:50,678:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.393e+07, tolerance: 5.431e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:50,682:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.316e+07, tolerance: 5.424e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:50,682:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.469e+07, tolerance: 5.526e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:50,713:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.338e+07, tolerance: 5.352e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:50,884:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.288e+07, tolerance: 5.292e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:50,915:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.118e+07, tolerance: 5.369e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:50,936:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.409e+07, tolerance: 5.421e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:50,936:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.486e+07, tolerance: 5.421e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:50,951:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.315e+07, tolerance: 5.403e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:51,133:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.411e+07, tolerance: 5.380e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:54,907:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.848e+07, tolerance: 5.431e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:54,957:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.784e+07, tolerance: 5.292e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:54,986:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.908e+07, tolerance: 5.526e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:55,071:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.455e+07, tolerance: 5.403e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:55,187:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.801e+07, tolerance: 5.421e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:55,220:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.634e+07, tolerance: 5.369e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:55,237:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.806e+07, tolerance: 5.380e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:56,855:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.979e+07, tolerance: 5.431e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:56,938:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.070e+07, tolerance: 5.526e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:56,988:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.906e+07, tolerance: 5.292e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:57,139:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.914e+07, tolerance: 5.421e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:57,172:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.777e+07, tolerance: 5.369e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:57,956:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.005e+07, tolerance: 5.292e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:56:58,073:WARNING:C:\Users\1104-27\anaconda3\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.858e+07, tolerance: 5.369e+05
  model = cd_fast.enet_coordinate_descent(

2024-05-01 10:57:03,997:INFO:best_params: {'actual_estimator__fit_intercept': True, 'actual_estimator__alpha': 0.45}
2024-05-01 10:57:03,997:INFO:Hyperparameter search completed
2024-05-01 10:57:03,997:INFO:SubProcess create_model() called ==================================
2024-05-01 10:57:03,997:INFO:Initializing create_model()
2024-05-01 10:57:03,997:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=Lasso(random_state=4724), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002574A515D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'fit_intercept': True, 'alpha': 0.45})
2024-05-01 10:57:03,997:INFO:Checking exceptions
2024-05-01 10:57:03,997:INFO:Importing libraries
2024-05-01 10:57:03,997:INFO:Copying training dataset
2024-05-01 10:57:04,018:INFO:Defining folds
2024-05-01 10:57:04,018:INFO:Declaring metric variables
2024-05-01 10:57:04,031:INFO:Importing untrained model
2024-05-01 10:57:04,031:INFO:Declaring custom model
2024-05-01 10:57:04,033:INFO:Lasso Regression Imported successfully
2024-05-01 10:57:04,033:INFO:Starting cross validation
2024-05-01 10:57:04,033:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 10:57:04,346:INFO:Calculating mean and std
2024-05-01 10:57:04,346:INFO:Creating metrics dataframe
2024-05-01 10:57:04,367:INFO:Finalizing model
2024-05-01 10:57:04,435:INFO:Uploading results into container
2024-05-01 10:57:04,435:INFO:Uploading model into container now
2024-05-01 10:57:04,435:INFO:_master_model_container: 64
2024-05-01 10:57:04,435:INFO:_display_container: 24
2024-05-01 10:57:04,435:INFO:Lasso(alpha=0.45, random_state=4724)
2024-05-01 10:57:04,435:INFO:create_model() successfully completed......................................
2024-05-01 10:57:04,764:INFO:SubProcess create_model() end ==================================
2024-05-01 10:57:04,764:INFO:choose_better activated
2024-05-01 10:57:04,764:INFO:SubProcess create_model() called ==================================
2024-05-01 10:57:04,764:INFO:Initializing create_model()
2024-05-01 10:57:04,764:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=Lasso(random_state=4724), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 10:57:04,764:INFO:Checking exceptions
2024-05-01 10:57:04,764:INFO:Importing libraries
2024-05-01 10:57:04,764:INFO:Copying training dataset
2024-05-01 10:57:04,803:INFO:Defining folds
2024-05-01 10:57:04,803:INFO:Declaring metric variables
2024-05-01 10:57:04,803:INFO:Importing untrained model
2024-05-01 10:57:04,804:INFO:Declaring custom model
2024-05-01 10:57:04,804:INFO:Lasso Regression Imported successfully
2024-05-01 10:57:04,804:INFO:Starting cross validation
2024-05-01 10:57:04,805:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 10:57:05,048:INFO:Calculating mean and std
2024-05-01 10:57:05,048:INFO:Creating metrics dataframe
2024-05-01 10:57:05,048:INFO:Finalizing model
2024-05-01 10:57:05,115:INFO:Uploading results into container
2024-05-01 10:57:05,115:INFO:Uploading model into container now
2024-05-01 10:57:05,115:INFO:_master_model_container: 65
2024-05-01 10:57:05,115:INFO:_display_container: 25
2024-05-01 10:57:05,115:INFO:Lasso(random_state=4724)
2024-05-01 10:57:05,115:INFO:create_model() successfully completed......................................
2024-05-01 10:57:05,432:INFO:SubProcess create_model() end ==================================
2024-05-01 10:57:05,432:INFO:Lasso(random_state=4724) result for RMSE is 225.2548
2024-05-01 10:57:05,432:INFO:Lasso(alpha=0.45, random_state=4724) result for RMSE is 224.5967
2024-05-01 10:57:05,432:INFO:Lasso(alpha=0.45, random_state=4724) is best model
2024-05-01 10:57:05,432:INFO:choose_better completed
2024-05-01 10:57:05,452:INFO:_master_model_container: 65
2024-05-01 10:57:05,452:INFO:_display_container: 24
2024-05-01 10:57:05,452:INFO:Lasso(alpha=0.45, random_state=4724)
2024-05-01 10:57:05,452:INFO:tune_model() successfully completed......................................
2024-05-01 10:57:28,670:INFO:Initializing blend_models()
2024-05-01 10:57:28,670:INFO:blend_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator_list=[GradientBoostingRegressor(random_state=4724), LGBMRegressor(bagging_fraction=0.8, bagging_freq=4, feature_fraction=0.7,
              learning_rate=0.05, min_child_samples=26, min_split_gain=0.6,
              n_estimators=130, n_jobs=-1, num_leaves=10, random_state=4724,
              reg_alpha=2, reg_lambda=2), XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=0.7, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.05, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=6, max_leaves=None,
             min_child_weight=4, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, random_state=4724, ...), RandomForestRegressor(n_jobs=-1, random_state=4724), Lasso(alpha=0.45, random_state=4724)], fold=10, round=4, choose_better=False, optimize=RMSE, method=auto, weights=None, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-05-01 10:57:28,670:INFO:Checking exceptions
2024-05-01 10:57:28,689:INFO:Importing libraries
2024-05-01 10:57:28,689:INFO:Copying training dataset
2024-05-01 10:57:28,706:INFO:Getting model names
2024-05-01 10:57:28,707:INFO:SubProcess create_model() called ==================================
2024-05-01 10:57:28,724:INFO:Initializing create_model()
2024-05-01 10:57:28,724:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=VotingRegressor(estimators=[('Gradient Boosting Regressor',
                             GradientBoostingRegressor(random_state=4724)),
                            ('Light Gradient Boosting Machine',
                             LGBMRegressor(bagging_fraction=0.8, bagging_freq=4,
                                           feature_fraction=0.7,
                                           learning_rate=0.05,
                                           min_child_samples=26,
                                           min_split_gain=0.6, n_estimators=130,
                                           n_jobs=-1, num_leaves=10,
                                           random_state=4724, reg_alpha=2,
                                           reg_lambda=2))...
                                          max_cat_to_onehot=None,
                                          max_delta_step=None, max_depth=6,
                                          max_leaves=None, min_child_weight=4,
                                          missing=nan,
                                          monotone_constraints=None,
                                          multi_strategy=None, n_estimators=100,
                                          n_jobs=-1, num_parallel_tree=None,
                                          random_state=4724, ...)),
                            ('Random Forest Regressor',
                             RandomForestRegressor(n_jobs=-1,
                                                   random_state=4724)),
                            ('Lasso Regression',
                             Lasso(alpha=0.45, random_state=4724))],
                n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002574B9BECD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 10:57:28,724:INFO:Checking exceptions
2024-05-01 10:57:28,724:INFO:Importing libraries
2024-05-01 10:57:28,725:INFO:Copying training dataset
2024-05-01 10:57:28,737:INFO:Defining folds
2024-05-01 10:57:28,737:INFO:Declaring metric variables
2024-05-01 10:57:28,755:INFO:Importing untrained model
2024-05-01 10:57:28,755:INFO:Declaring custom model
2024-05-01 10:57:28,761:INFO:Voting Regressor Imported successfully
2024-05-01 10:57:28,767:INFO:Starting cross validation
2024-05-01 10:57:28,768:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 10:57:35,010:INFO:Calculating mean and std
2024-05-01 10:57:35,010:INFO:Creating metrics dataframe
2024-05-01 10:57:35,010:INFO:Finalizing model
2024-05-01 10:57:35,816:INFO:Uploading results into container
2024-05-01 10:57:35,816:INFO:Uploading model into container now
2024-05-01 10:57:35,816:INFO:_master_model_container: 66
2024-05-01 10:57:35,816:INFO:_display_container: 25
2024-05-01 10:57:35,828:INFO:VotingRegressor(estimators=[('Gradient Boosting Regressor',
                             GradientBoostingRegressor(random_state=4724)),
                            ('Light Gradient Boosting Machine',
                             LGBMRegressor(bagging_fraction=0.8, bagging_freq=4,
                                           feature_fraction=0.7,
                                           learning_rate=0.05,
                                           min_child_samples=26,
                                           min_split_gain=0.6, n_estimators=130,
                                           n_jobs=-1, num_leaves=10,
                                           random_state=4724, reg_alpha=2,
                                           reg_lambda=2))...
                                          max_cat_to_onehot=None,
                                          max_delta_step=None, max_depth=6,
                                          max_leaves=None, min_child_weight=4,
                                          missing=nan,
                                          monotone_constraints=None,
                                          multi_strategy=None, n_estimators=100,
                                          n_jobs=-1, num_parallel_tree=None,
                                          random_state=4724, ...)),
                            ('Random Forest Regressor',
                             RandomForestRegressor(n_jobs=-1,
                                                   random_state=4724)),
                            ('Lasso Regression',
                             Lasso(alpha=0.45, random_state=4724))],
                n_jobs=-1)
2024-05-01 10:57:35,828:INFO:create_model() successfully completed......................................
2024-05-01 10:57:36,128:INFO:SubProcess create_model() end ==================================
2024-05-01 10:57:36,128:INFO:_master_model_container: 66
2024-05-01 10:57:36,144:INFO:_display_container: 25
2024-05-01 10:57:36,157:INFO:VotingRegressor(estimators=[('Gradient Boosting Regressor',
                             GradientBoostingRegressor(random_state=4724)),
                            ('Light Gradient Boosting Machine',
                             LGBMRegressor(bagging_fraction=0.8, bagging_freq=4,
                                           feature_fraction=0.7,
                                           learning_rate=0.05,
                                           min_child_samples=26,
                                           min_split_gain=0.6, n_estimators=130,
                                           n_jobs=-1, num_leaves=10,
                                           random_state=4724, reg_alpha=2,
                                           reg_lambda=2))...
                                          max_cat_to_onehot=None,
                                          max_delta_step=None, max_depth=6,
                                          max_leaves=None, min_child_weight=4,
                                          missing=nan,
                                          monotone_constraints=None,
                                          multi_strategy=None, n_estimators=100,
                                          n_jobs=-1, num_parallel_tree=None,
                                          random_state=4724, ...)),
                            ('Random Forest Regressor',
                             RandomForestRegressor(n_jobs=-1,
                                                   random_state=4724)),
                            ('Lasso Regression',
                             Lasso(alpha=0.45, random_state=4724))],
                n_jobs=-1)
2024-05-01 10:57:36,157:INFO:blend_models() successfully completed......................................
2024-05-01 10:57:52,495:INFO:Initializing finalize_model()
2024-05-01 10:57:52,495:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=VotingRegressor(estimators=[('Gradient Boosting Regressor',
                             GradientBoostingRegressor(random_state=4724)),
                            ('Light Gradient Boosting Machine',
                             LGBMRegressor(bagging_fraction=0.8, bagging_freq=4,
                                           feature_fraction=0.7,
                                           learning_rate=0.05,
                                           min_child_samples=26,
                                           min_split_gain=0.6, n_estimators=130,
                                           n_jobs=-1, num_leaves=10,
                                           random_state=4724, reg_alpha=2,
                                           reg_lambda=2))...
                                          max_cat_to_onehot=None,
                                          max_delta_step=None, max_depth=6,
                                          max_leaves=None, min_child_weight=4,
                                          missing=nan,
                                          monotone_constraints=None,
                                          multi_strategy=None, n_estimators=100,
                                          n_jobs=-1, num_parallel_tree=None,
                                          random_state=4724, ...)),
                            ('Random Forest Regressor',
                             RandomForestRegressor(n_jobs=-1,
                                                   random_state=4724)),
                            ('Lasso Regression',
                             Lasso(alpha=0.45, random_state=4724))],
                n_jobs=-1), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-01 10:57:52,498:INFO:Finalizing VotingRegressor(estimators=[('Gradient Boosting Regressor',
                             GradientBoostingRegressor(random_state=4724)),
                            ('Light Gradient Boosting Machine',
                             LGBMRegressor(bagging_fraction=0.8, bagging_freq=4,
                                           feature_fraction=0.7,
                                           learning_rate=0.05,
                                           min_child_samples=26,
                                           min_split_gain=0.6, n_estimators=130,
                                           n_jobs=-1, num_leaves=10,
                                           random_state=4724, reg_alpha=2,
                                           reg_lambda=2))...
                                          max_cat_to_onehot=None,
                                          max_delta_step=None, max_depth=6,
                                          max_leaves=None, min_child_weight=4,
                                          missing=nan,
                                          monotone_constraints=None,
                                          multi_strategy=None, n_estimators=100,
                                          n_jobs=-1, num_parallel_tree=None,
                                          random_state=4724, ...)),
                            ('Random Forest Regressor',
                             RandomForestRegressor(n_jobs=-1,
                                                   random_state=4724)),
                            ('Lasso Regression',
                             Lasso(alpha=0.45, random_state=4724))],
                n_jobs=-1)
2024-05-01 10:57:52,533:INFO:Initializing create_model()
2024-05-01 10:57:52,533:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=VotingRegressor(estimators=[('Gradient Boosting Regressor',
                             GradientBoostingRegressor(random_state=4724)),
                            ('Light Gradient Boosting Machine',
                             LGBMRegressor(bagging_fraction=0.8, bagging_freq=4,
                                           feature_fraction=0.7,
                                           learning_rate=0.05,
                                           min_child_samples=26,
                                           min_split_gain=0.6, n_estimators=130,
                                           n_jobs=-1, num_leaves=10,
                                           random_state=4724, reg_alpha=2,
                                           reg_lambda=2))...
                                          max_cat_to_onehot=None,
                                          max_delta_step=None, max_depth=6,
                                          max_leaves=None, min_child_weight=4,
                                          missing=nan,
                                          monotone_constraints=None,
                                          multi_strategy=None, n_estimators=100,
                                          n_jobs=-1, num_parallel_tree=None,
                                          random_state=4724, ...)),
                            ('Random Forest Regressor',
                             RandomForestRegressor(n_jobs=-1,
                                                   random_state=4724)),
                            ('Lasso Regression',
                             Lasso(alpha=0.45, random_state=4724))],
                n_jobs=-1), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 10:57:52,533:INFO:Checking exceptions
2024-05-01 10:57:52,534:INFO:Importing libraries
2024-05-01 10:57:52,534:INFO:Copying training dataset
2024-05-01 10:57:52,536:INFO:Defining folds
2024-05-01 10:57:52,536:INFO:Declaring metric variables
2024-05-01 10:57:52,536:INFO:Importing untrained model
2024-05-01 10:57:52,536:INFO:Declaring custom model
2024-05-01 10:57:52,539:INFO:Voting Regressor Imported successfully
2024-05-01 10:57:52,540:INFO:Cross validation set to False
2024-05-01 10:57:52,540:INFO:Fitting Model
2024-05-01 10:57:54,547:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering',
                                             'steering_remote', 'leahter_seat',
                                             'driver...
                                                           max_cat_to_onehot=None,
                                                           max_delta_step=None,
                                                           max_depth=6,
                                                           max_leaves=None,
                                                           min_child_weight=4,
                                                           missing=nan,
                                                           monotone_constraints=None,
                                                           multi_strategy=None,
                                                           n_estimators=100,
                                                           n_jobs=-1,
                                                           num_parallel_tree=None,
                                                           random_state=4724, ...)),
                                             ('Random Forest Regressor',
                                              RandomForestRegressor(n_jobs=-1,
                                                                    random_state=4724)),
                                             ('Lasso Regression',
                                              Lasso(alpha=0.45,
                                                    random_state=4724))],
                                 n_jobs=-1))])
2024-05-01 10:57:54,547:INFO:create_model() successfully completed......................................
2024-05-01 10:57:54,830:INFO:_master_model_container: 66
2024-05-01 10:57:54,830:INFO:_display_container: 25
2024-05-01 10:57:54,863:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering',
                                             'steering_remote', 'leahter_seat',
                                             'driver...
                                                           max_cat_to_onehot=None,
                                                           max_delta_step=None,
                                                           max_depth=6,
                                                           max_leaves=None,
                                                           min_child_weight=4,
                                                           missing=nan,
                                                           monotone_constraints=None,
                                                           multi_strategy=None,
                                                           n_estimators=100,
                                                           n_jobs=-1,
                                                           num_parallel_tree=None,
                                                           random_state=4724, ...)),
                                             ('Random Forest Regressor',
                                              RandomForestRegressor(n_jobs=-1,
                                                                    random_state=4724)),
                                             ('Lasso Regression',
                                              Lasso(alpha=0.45,
                                                    random_state=4724))],
                                 n_jobs=-1))])
2024-05-01 10:57:54,863:INFO:finalize_model() successfully completed......................................
2024-05-01 10:59:44,556:INFO:Initializing save_model()
2024-05-01 10:59:44,556:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering',
                                             'steering_remote', 'leahter_seat',
                                             'driver...
                                                           max_cat_to_onehot=None,
                                                           max_delta_step=None,
                                                           max_depth=6,
                                                           max_leaves=None,
                                                           min_child_weight=4,
                                                           missing=nan,
                                                           monotone_constraints=None,
                                                           multi_strategy=None,
                                                           n_estimators=100,
                                                           n_jobs=-1,
                                                           num_parallel_tree=None,
                                                           random_state=4724, ...)),
                                             ('Random Forest Regressor',
                                              RandomForestRegressor(n_jobs=-1,
                                                                    random_state=4724)),
                                             ('Lasso Regression',
                                              Lasso(alpha=0.45,
                                                    random_state=4724))],
                                 n_jobs=-1))]), model_name=./model/grandeur_auto, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\1104-27\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering',
                                             'steering_remote', 'leahter_seat',
                                             'driver_elec_seat',
                                             'pass_elec_seat', 'back_elec_seat',
                                             'driver_memory_seat',
                                             'massage_seat',
                                             'supervision_cluster',
                                             'paddle_shift', 'hi_pass',
                                             'pass_memory_seat',
                                             'back_heated_seat', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2024-05-01 10:59:44,556:INFO:Adding model into prep_pipe
2024-05-01 10:59:44,556:WARNING:Only Model saved as it was a pipeline.
2024-05-01 10:59:44,684:INFO:./model/grandeur_auto.pkl saved in current working directory
2024-05-01 10:59:44,715:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering',
                                             'steering_remote', 'leahter_seat',
                                             'driver...
                                                           max_cat_to_onehot=None,
                                                           max_delta_step=None,
                                                           max_depth=6,
                                                           max_leaves=None,
                                                           min_child_weight=4,
                                                           missing=nan,
                                                           monotone_constraints=None,
                                                           multi_strategy=None,
                                                           n_estimators=100,
                                                           n_jobs=-1,
                                                           num_parallel_tree=None,
                                                           random_state=4724, ...)),
                                             ('Random Forest Regressor',
                                              RandomForestRegressor(n_jobs=-1,
                                                                    random_state=4724)),
                                             ('Lasso Regression',
                                              Lasso(alpha=0.45,
                                                    random_state=4724))],
                                 n_jobs=-1))])
2024-05-01 10:59:44,715:INFO:save_model() successfully completed......................................
2024-05-01 10:59:52,936:INFO:Initializing load_model()
2024-05-01 10:59:52,936:INFO:load_model(model_name=./model/grandeur_auto, platform=None, authentication=None, verbose=True)
2024-05-01 10:59:53,168:INFO:Initializing predict_model()
2024-05-01 10:59:53,168:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=Pipeline(memory=FastMemory(location=C:\Users\1104-27\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering...
                                                           max_cat_to_onehot=None,
                                                           max_delta_step=None,
                                                           max_depth=6,
                                                           max_leaves=None,
                                                           min_child_weight=4,
                                                           missing=nan,
                                                           monotone_constraints=None,
                                                           multi_strategy=None,
                                                           n_estimators=100,
                                                           n_jobs=-1,
                                                           num_parallel_tree=None,
                                                           random_state=4724, ...)),
                                             ('Random Forest Regressor',
                                              RandomForestRegressor(n_jobs=-1,
                                                                    random_state=4724)),
                                             ('Lasso Regression',
                                              Lasso(alpha=0.45,
                                                    random_state=4724))],
                                 n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025749EEA200>)
2024-05-01 10:59:53,168:INFO:Checking exceptions
2024-05-01 10:59:53,168:INFO:Preloading libraries
2024-05-01 10:59:53,168:INFO:Set up data.
2024-05-01 10:59:53,192:INFO:Set up index.
2024-05-01 11:00:01,410:INFO:Initializing predict_model()
2024-05-01 11:00:01,410:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000025734DF3950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering',
                                             'steering_remote', 'leahter_seat',
                                             'driver...
                                                           max_cat_to_onehot=None,
                                                           max_delta_step=None,
                                                           max_depth=6,
                                                           max_leaves=None,
                                                           min_child_weight=4,
                                                           missing=nan,
                                                           monotone_constraints=None,
                                                           multi_strategy=None,
                                                           n_estimators=100,
                                                           n_jobs=-1,
                                                           num_parallel_tree=None,
                                                           random_state=4724, ...)),
                                             ('Random Forest Regressor',
                                              RandomForestRegressor(n_jobs=-1,
                                                                    random_state=4724)),
                                             ('Lasso Regression',
                                              Lasso(alpha=0.45,
                                                    random_state=4724))],
                                 n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000025749EE9080>)
2024-05-01 11:00:01,410:INFO:Checking exceptions
2024-05-01 11:00:01,410:INFO:Preloading libraries
2024-05-02 09:24:21,358:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-02 09:24:21,358:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-02 09:24:21,358:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-02 09:24:21,358:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-02 09:24:24,798:INFO:Initializing load_model()
2024-05-02 09:24:24,798:INFO:load_model(model_name=./model/grandeur_auto.pkl, platform=None, authentication=None, verbose=True)
2024-05-02 09:24:32,222:INFO:Initializing load_model()
2024-05-02 09:24:32,222:INFO:load_model(model_name=./model/grandeur_auto, platform=None, authentication=None, verbose=True)
2024-05-02 09:26:10,100:INFO:Initializing predict_model()
2024-05-02 09:26:10,100:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020E87954890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering',
                                             'steering_remote', 'leahter_seat',
                                             'driver...
                                                           max_cat_to_onehot=None,
                                                           max_delta_step=None,
                                                           max_depth=6,
                                                           max_leaves=None,
                                                           min_child_weight=4,
                                                           missing=nan,
                                                           monotone_constraints=None,
                                                           multi_strategy=None,
                                                           n_estimators=100,
                                                           n_jobs=-1,
                                                           num_parallel_tree=None,
                                                           random_state=4724, ...)),
                                             ('Random Forest Regressor',
                                              RandomForestRegressor(n_jobs=-1,
                                                                    random_state=4724)),
                                             ('Lasso Regression',
                                              Lasso(alpha=0.45,
                                                    random_state=4724))],
                                 n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020E88E2F920>)
2024-05-02 09:26:10,100:INFO:Checking exceptions
2024-05-02 09:26:10,100:INFO:Preloading libraries
2024-05-02 09:26:32,623:INFO:Initializing predict_model()
2024-05-02 09:26:32,623:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020E88409E10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['year', 'distance', 'sunroof',
                                             'HID', 'Al_wheel', 'auto_mirror',
                                             'DLR', 'sunroof_pano', 'roof_rack',
                                             'LED', 'HBA', 'ghost_door',
                                             'sliding_door', 'side_step',
                                             'adap_h', 'driver_heated_seat',
                                             'driver_ventilated_seat',
                                             'power_steering',
                                             'steering_remote', 'leahter_seat',
                                             'driver...
                                                           max_cat_to_onehot=None,
                                                           max_delta_step=None,
                                                           max_depth=6,
                                                           max_leaves=None,
                                                           min_child_weight=4,
                                                           missing=nan,
                                                           monotone_constraints=None,
                                                           multi_strategy=None,
                                                           n_estimators=100,
                                                           n_jobs=-1,
                                                           num_parallel_tree=None,
                                                           random_state=4724, ...)),
                                             ('Random Forest Regressor',
                                              RandomForestRegressor(n_jobs=-1,
                                                                    random_state=4724)),
                                             ('Lasso Regression',
                                              Lasso(alpha=0.45,
                                                    random_state=4724))],
                                 n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020E857EB2E0>)
2024-05-02 09:26:32,623:INFO:Checking exceptions
2024-05-02 09:26:32,623:INFO:Preloading libraries
2024-05-02 09:26:32,623:INFO:Set up data.
2024-05-02 09:26:32,657:INFO:Set up index.
